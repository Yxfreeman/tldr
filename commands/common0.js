var commands =
{"7z":{"Platform":"all","Class":"file compress","Brief":"A file archiver with high compression ratio.","MdText":"# 7z\n\n\u003e A file archiver with high compression ratio.\n\u003e Homepage: \u003chttps://www.7-zip.org/\u003e.\n\n- Archive a file or directory:\n\n`7z a {{archived.7z}} {{path/to/file_or_directory}}`\n\n- Encrypt an existing archive (including headers):\n\n`7z a {{encrypted.7z}} -p{{password}} -mhe=on {{archived.7z}}`\n\n- Extract an existing 7z file with original directory structure:\n\n`7z x {{archived.7z}}`\n\n- Extract an archive with user-defined output path:\n\n`7z x {{archived.7z}} -o{{path/to/output}}`\n\n- Archive using a specific archive type:\n\n`7z a -t{{zip|gzip|bzip2|tar}} {{archived.7z}} {{path/to/file_or_directory}}`\n\n- List available archive types:\n\n`7z i`\n\n- List the contents of an archive file:\n\n`7z l {{archived.7z}}`\n"},"ab":{"Platform":"all","Class":"network comm","Brief":"Apache Benchmarking tool. The simplest tool to perform a load testing.","MdText":"# ab\n\n\u003e Apache Benchmarking tool. The simplest tool to perform a load testing.\n\u003e Homepage: \u003chttps://httpd.apache.org/docs/2.4/programs/ab.html\u003e.\n\n- Execute 100 HTTP GET requests to given URL:\n\n`ab -n {{100}} {{url}}`\n\n- Execute 100 HTTP GET requests, processing up to 10 requests concurrently, to given URL:\n\n`ab -n {{100}} -c {{10}} {{url}}`\n\n- Use keep alive:\n\n`ab -k {{url}}`\n\n- Set the maximum number of seconds to spend for benchmarking:\n\n`ab -t {{60}} {{url}}`\n"},"ack":{"Platform":"all","Class":"file editor","Brief":"A search tool like grep, optimized for programmers.","MdText":"# ack\n\n\u003e A search tool like grep, optimized for programmers.\n\u003e Homepage: \u003chttps://beyondgrep.com/documentation/\u003e.\n\n- Find files containing \"foo\":\n\n`ack {{foo}}`\n\n- Find files of a specific type:\n\n`ack --ruby {{foo}}`\n\n- Count the total number of matches for the term \"foo\":\n\n`ack -ch {{foo}}`\n\n- Show the file names containing \"foo\" and number of matches in each file:\n\n`ack -cl {{foo}}`\n\n- List all valid types:\n\n`ack --help=types`\n"},"adb":{"Platform":"all","Class":"other cmds","Brief":"Android Debug Bridge: communicate with an Android emulator instance or connected Android devices.","MdText":"# adb\n\n\u003e Android Debug Bridge: communicate with an Android emulator instance or connected Android devices.\n\u003e Homepage: \u003chttps://developer.android.com/studio/command-line/adb\u003e.\n\n- Check whether the adb server process is running and start it:\n\n`adb start-server`\n\n- Terminate the adb server process:\n\n`adb kill-server`\n\n- Start a remote shell in the target emulator/device instance:\n\n`adb shell`\n\n- Push an Android application to an emulator/device:\n\n`adb install -r {{path/to/file.apk}}`\n\n- Copy a file/directory from the target device:\n\n`adb pull {{path/to/device_file_or_directory}} {{path/to/local_destination_directory}}`\n\n- Copy a file/directory to the target device:\n\n`adb push {{path/to/local_file_or_directory}} {{path/to/device_destination_directory}}`\n\n- Get a list of connected devices:\n\n`adb devices`\n"},"ag":{"Platform":"all","Class":"file editor","Brief":"The Silver Searcher. Like ack, but faster.","MdText":"# ag\n\n\u003e The Silver Searcher. Like ack, but faster.\n\n- Find files containing \"foo\", and print the line matches in context:\n\n`ag {{foo}}`\n\n- Find files containing \"foo\" in a specific directory:\n\n`ag {{foo}} {{path/to/directory}}`\n\n- Find files containing \"foo\", but only list the filenames:\n\n`ag -l {{foo}}`\n\n- Find files containing \"FOO\" case-insensitively, and print only the match, rather than the whole line:\n\n`ag -i -o {{FOO}}`\n\n- Find \"foo\" in files with a name matching \"bar\":\n\n`ag {{foo}} -G {{bar}}`\n\n- Find files whose contents match a regular expression:\n\n`ag '{{^ba(r|z)$}}'`\n\n- Find files with a name matching \"foo\":\n\n`ag -g {{foo}}`\n"},"airpaste":{"Platform":"all","Class":"file editor","Brief":"Share messages and files on the same network.","MdText":"# airpaste\n\n\u003e Share messages and files on the same network.\n\n- Wait for message and display when received:\n\n`airpaste`\n\n- Send text:\n\n`echo {{text}} | airpaste`\n\n- Send file:\n\n`airpaste \u003c {{path/to/file}}`\n\n- Receive file:\n\n`airpaste \u003e {{path/to/file}}`\n\n- Create/Join channel:\n\n`airpaste {{channel_name}}`\n"},"alias":{"Platform":"all","Class":"other cmds","Brief":"Creates aliases -- words that are replaced by a command string.","MdText":"# alias\n\n\u003e Creates aliases -- words that are replaced by a command string.\n\u003e Aliases expire with the current shell session, unless they're defined in the shell's configuration file, e.g. `~/.bashrc`.\n\n- Create a generic alias:\n\n`alias {{word}}=\"{{command}}\"`\n\n- View the command associated to a given alias:\n\n`alias {{word}}`\n\n- Remove an aliased command:\n\n`unalias {{word}}`\n\n- List all aliased words:\n\n`alias -p`\n\n- Turn `rm` into an interactive command:\n\n`alias {{rm}}=\"{{rm -i}}\"`\n\n- Create `la` as a shortcut for `ls -a`:\n\n`alias {{la}}=\"{{ls -a}}\"`\n"},"ansible-galaxy":{"Platform":"all","Class":"system man","Brief":"Create and manage Ansible roles.","MdText":"# ansible-galaxy\n\n\u003e Create and manage Ansible roles.\n\u003e Homepage: \u003chttps://docs.ansible.com/ansible/latest/cli/ansible-galaxy.html\u003e.\n\n- Install a role:\n\n`ansible-galaxy install {{username.role_name}}`\n\n- Remove a role:\n\n`ansible-galaxy remove {{username.role_name}}`\n\n- List installed roles:\n\n`ansible-galaxy list`\n\n- Search for a given role:\n\n`ansible-galaxy search {{role_name}}`\n\n- Create a new role:\n\n`ansible-galaxy init {{role_name}}`\n"},"ansible-playbook":{"Platform":"all","Class":"system man","Brief":"Execute tasks defined in playbook on remote machines over SSH.","MdText":"# ansible-playbook\n\n\u003e Execute tasks defined in playbook on remote machines over SSH.\n\u003e Homepage: \u003chttps://docs.ansible.com/ansible/latest/cli/ansible-playbook.html\u003e.\n\n- Run tasks in playbook:\n\n`ansible-playbook {{playbook}}`\n\n- Run tasks in playbook with custom host inventory:\n\n`ansible-playbook {{playbook}} -i {{inventory_file}}`\n\n- Run tasks in playbook with extra variables defined via the command line:\n\n`ansible-playbook {{playbook}} -e \"{{variable1}}={{value1}} {{variable2}}={{value2}}\"`\n\n- Run tasks in playbook with extra variables defined in a json file:\n\n`ansible-playbook {{playbook}} -e \"@{{variables.json}}\"`\n"},"ansiweather":{"Platform":"all","Class":"other cmds","Brief":"A shell script for displaying the current weather conditions in your terminal.","MdText":"# ansiweather\n\n\u003e A shell script for displaying the current weather conditions in your terminal.\n\u003e Homepage: \u003chttps://github.com/fcambus/ansiweather\u003e.\n\n- Display a forecast using metric units for the next five days for Rzeszow, Poland:\n\n`ansiweather -u {{metric}} -f {{5}} -l {{Rzeszow,PL}}`\n\n- Display a forecast showing symbols and daylight data for your current location:\n\n`ansiweather -s {{true}} -d {{true}}`\n\n- Display a forecast showing wind and humidity data for your current location:\n\n`ansiweather -w {{true}} -h {{true}}`\n"},"apm":{"Platform":"all","Class":"other cmds","Brief":"Atom editor Package Manager.","MdText":"# apm\n\n\u003e Atom editor Package Manager.\n\u003e See `atom`.\n\n- Install packages from http://atom.io/packages and themes from http://atom.io/themes:\n\n`apm install {{package_name}}`\n\n- Remove packages/themes:\n\n`apm remove {{package_name}}`\n\n- Upgrade packages/themes:\n\n`apm upgrade {{package_name}}`\n"},"apropos":{"Platform":"all","Class":"system man","Brief":"Search in manpages, for example to find a new command.","MdText":"# apropos\n\n\u003e Search in manpages, for example to find a new command.\n\n- Search for keyword:\n\n`apropos {{regular_expression}}`\n\n- Search without restricting output to terminal width:\n\n`apropos -l {{regular_expression}}`\n"},"ar":{"Platform":"all","Class":"file editor","Brief":"Create, modify, and extract from archives (.a, .so, .o).","MdText":"# ar\n\n\u003e Create, modify, and extract from archives (.a, .so, .o).\n\n- Extract all members from an archive:\n\n`ar -x {{libfoo.a}}`\n\n- List the members of an archive:\n\n`ar -t {{libfoo.a}}`\n\n- Replace or add files to an archive:\n\n`ar -r {{libfoo.a}} {{foo.o}} {{bar.o}} {{baz.o}}`\n\n- Insert an object file index (equivalent to using `ranlib`):\n\n`ar -s {{libfoo.a}}`\n\n- Create an archive with files and an accompanying object file index:\n\n`ar -rs {{libfoo.a}} {{foo.o}} {{bar.o}} {{baz.o}}`\n"},"aria2":{"Platform":"all","Class":"network comm","Brief":"A lightweight multi-protocol \u0026 multi-source command-line download utility.","MdText":"# aria2\n\n\u003e A lightweight multi-protocol \u0026 multi-source command-line download utility.\n\u003e Supports HTTP, HTTPS, FTP, SFTP, BitTorrent and Metalink.\n\u003e Homepage: \u003chttps://aria2.github.io/\u003e.\n\n- Download a web resource:\n\n`aria2c {{http://example.org/myLinux.iso}}`\n\n- Download a resource from multiple sources:\n\n`aria2c {{http://mirror1.org/myLinux.iso}} {{http://mirror2.org/myLinux.iso}}`\n\n- Download using 2 connections per host:\n\n`aria2c -x{{2}} {{http://example.org/myLinux.iso}}`\n\n- Download from a Metalink URI:\n\n`aria2c {{http://example.org/myLinux.metalink}}`\n\n- Download from a BitTorrent URI:\n\n`aria2c {{http://example.org/myLinux.torrent}}`\n\n- Download from a BitTorrent Magnet URI:\n\n`aria2c {{'magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C'}}`\n\n- Download URIs from a file:\n\n`aria2c -i {{uris.txt}}`\n"},"aria2c":{"Platform":"all","Class":"network comm","Brief":"Fast download utility.","MdText":"# aria2c\n\n\u003e Fast download utility.\n\u003e Supports HTTP(S), FTP, SFTP, BitTorrent, and Metalink.\n\n- Download a URI to a file:\n\n`aria2c {{url}}`\n\n- Download from multiple sources:\n\n`aria2c {{url_1}} {{url_2}}`\n\n- Download the URIs listed in a file:\n\n`aria2c -i {{filename}}`\n\n- Download with multiple connections:\n\n`aria2c -s {{connections_num}} {{url}}`\n\n- FTP download with username and password:\n\n`aria2c --ftp-user={{username}} --ftp-passwd={{password}} {{url}}`\n\n- Limit download speed in bytes/s:\n\n`aria2c --max-download-limit={{speed}} {{url}}`\n"},"arping":{"Platform":"all","Class":"network comm","Brief":"Discover and probe hosts in a network using the ARP protocol.","MdText":"# arping\n\n\u003e Discover and probe hosts in a network using the ARP protocol.\n\u003e Useful for MAC address discovery.\n\n- Ping a host by ARP request packets:\n\n`arping {{host_ip}}`\n\n- Ping a host on a specific interface:\n\n`arping -I {{interface}} {{host_ip}}`\n\n- Ping a host and stop at the first reply:\n\n`arping -f {{host_ip}}`\n\n- Ping a host a specific number of times:\n\n`arping -c {{count}} {{host_ip}}`\n\n- Broadcast ARP request packets to update neighbours' ARP caches:\n\n`arping -U {{ip_to_broadcast}}`\n\n- Detect duplicated IP addresses in the network by sending ARP requests with a 3 seconds timeout:\n\n`arping -D -w {{3}} {{ip_to_check}}`\n"},"asar":{"Platform":"all","Class":"file compress","Brief":"A file archiver for the Electron platform.","MdText":"# asar\n\n\u003e A file archiver for the Electron platform.\n\u003e Homepage: \u003chttps://github.com/electron/asar\u003e.\n\n- Archive a file or directory:\n\n`asar pack {{path/to/file_or_directory}} {{archived.asar}}`\n\n- Extract an archive:\n\n`asar extract {{archived.asar}}`\n\n- Extract a specific file from an archive:\n\n`asar extract-file {{archived.asar}} {{file}}`\n\n- List the contents of an archive file:\n\n`asar list {{archived.asar}}`\n"},"assimp":{"Platform":"all","Class":"other cmds","Brief":"Command-line client for the Open Asset Import Library.","MdText":"# assimp\n\n\u003e Command-line client for the Open Asset Import Library.\n\u003e Supports loading of 40+ 3D file formats, and exporting to several popular 3D formats.\n\u003e Homepage: \u003chttp://www.assimp.org/\u003e.\n\n- List all supported import formats:\n\n`assimp listext`\n\n- List all supported export formats:\n\n`assimp listexport`\n\n- Convert a file to one of the supported output formats, using the default parameters:\n\n`assimp export {{input_file.stl}} {{output_file.obj}}`\n\n- Convert a file using custom parameters (the dox_cmd.h file in assimp's source code lists available parameters):\n\n`assimp export {{input_file.stl}} {{output_file.obj}} {{parameters}}`\n\n- Display a summary of a 3D file's contents:\n\n`assimp info {{path/to/file}}`\n\n- List all supported subcommands (\"verbs\"):\n\n`assimp help`\n\n- Get help on a specific subcommand (e.g. the parameters specific to it):\n\n`assimp {{subcommand}} --help`\n"},"atom":{"Platform":"all","Class":"file editor","Brief":"A cross-platform pluggable text editor.","MdText":"# atom\n\n\u003e A cross-platform pluggable text editor.\n\u003e Plugins are managed by `apm`.\n\u003e Homepage: \u003chttps://atom.io/\u003e.\n\n- Open a file or directory:\n\n`atom {{path/to/file_or_directory}}`\n\n- Open a file or directory in a new window:\n\n`atom -n {{path/to/file_or_directory}}`\n\n- Open a file or directory in an existing window:\n\n`atom --add {{path/to/file_or_directory}}`\n\n- Open atom in safe mode (does not load any additional packages):\n\n`atom --safe`\n\n- Prevent atom from forking into the background, keeping atom attached to the terminal:\n\n`atom --foreground`\n"},"atq":{"Platform":"all","Class":"system man","Brief":"Show jobs scheduled by `at` or `batch` commands.","MdText":"# atq\n\n\u003e Show jobs scheduled by `at` or `batch` commands.\n\n- Show the current user's scheduled jobs:\n\n`atq`\n\n- Show jobs from queue named 'a' (queues have single-character names):\n\n`atq -q {{a}}`\n\n- Show jobs of all users (run as super user):\n\n`sudo atq`\n"},"atrm":{"Platform":"all","Class":"system man","Brief":"Remove jobs scheduled by `at` or `batch` commands.","MdText":"# atrm\n\n\u003e Remove jobs scheduled by `at` or `batch` commands.\n\u003e To find job numbers use `atq`.\n\n- Remove job number 10:\n\n`atrm {{10}}`\n\n- Remove many jobs, separated by spaces:\n\n`atrm {{15}} {{17}} {{22}}`\n"},"autossh":{"Platform":"all","Class":"network comm","Brief":"Runs, monitors and restarts SSH connections.","MdText":"# autossh\n\n\u003e Runs, monitors and restarts SSH connections.\n\u003e Auto-reconnects to keep port forwarding tunnels up. Accepts all ssh flags.\n\n- Open an SSH session, restarting when a monitoring port fails return data:\n\n`autossh -M {{monitor_port}} {{ssh_command}}`\n\n- Open an SSH session which forwards a local port to a remote one, restarting if necessary:\n\n`autossh -M {{monitor_port}} -L {{local_port}}:localhost:{{remote_port}} {{user}}@{{host}}`\n\n- Fork before executing ssh (runs in the background) and don't open a remote shell:\n\n`autossh -f -M {{monitor_port}} -N {{ssh_command}}`\n\n- Run autossh in the background, with no monitoring port, instead relying on SSH keep-alives every 10 seconds to detect failure:\n\n`autossh -f -M 0 -N -o \"ServerAliveInterval 10\" -o \"ServerAliveCountMax 3\" {{ssh_command}}`\n\n- Run autossh in the background, with no monitoring port, no remote shell, exiting if the port forward fails:\n\n`autossh -f -M 0 -N -o \"ServerAliveInterval 10\" -o \"ServerAliveCountMax 3\" -o ExitOnForwardFailure=yes -L {{local_port}}:localhost:{{remote_port}} {{user}}@{{host}}`\n\n- Run autossh in the background with debug output logged to a file and ssh verbose output logged to a second file:\n\n`AUTOSSH_DEBUG=1 AUTOSSH_LOGFILE={{log_file}} autossh -f -M {{monitor_port}} -v -E {{ssh_log_file}} {{ssh_command}}`\n"},"avrdude":{"Platform":"all","Class":"other cmds","Brief":"Driver program for Atmel AVR microcontrollers programming.","MdText":"# avrdude\n\n\u003e Driver program for Atmel AVR microcontrollers programming.\n\u003e Homepage: \u003chttps://www.nongnu.org/avrdude/\u003e.\n\n- Read AVR microcontroller:\n\n`avrdude -p {{AVR_device}} -c {{programmer}} -U flash:r:{{file.hex}}:i`\n\n- Write AVR microcontroller:\n\n`avrdude -p {{AVR_device}} -c {{programmer}} -U flash:w:{{file.hex}}`\n\n- List available AVR devices:\n\n`avrdude -p \\?`\n\n- List available AVR programmers:\n\n`avrdude -c \\?`\n"},"awk":{"Platform":"all","Class":"file editor","Brief":"A versatile programming language for working on files.","MdText":"# awk\n\n\u003e A versatile programming language for working on files.\n\n- Print the fifth column (a.k.a. field) in a space-separated file:\n\n`awk '{print $5}' {{filename}}`\n\n- Print the second column of the lines containing \"something\" in a space-separated file:\n\n`awk '/{{something}}/ {print $2}' {{filename}}`\n\n- Print the last column of each line in a file, using a comma (instead of space) as a field separator:\n\n`awk -F ',' '{print $NF}' {{filename}}`\n\n- Sum the values in the first column of a file and print the total:\n\n`awk '{s+=$1} END {print s}' {{filename}}`\n\n- Sum the values in the first column and pretty-print the values and then the total:\n\n`awk '{s+=$1; print $1} END {print \"--------\"; print s}' {{filename}}`\n\n- Print every third line starting from the first line:\n\n`awk 'NR%3==1' {{filename}}`\n"},"aws":{"Platform":"all","Class":"network comm","Brief":"The official CLI tool for Amazon Web Services.","MdText":"# aws\n\n\u003e The official CLI tool for Amazon Web Services.\n\n- List all IAM users:\n\n`aws iam list-users`\n\n- List all EC2 instances from a specific region:\n\n`aws ec2 describe-instances --region {{us-east-1}}`\n\n- Receive message from a specific SQS queue:\n\n`aws sqs receive-message --queue-url {{https://queue.amazonaws.com/546123/Test}}`\n\n- Publish message to the specific SNS topic:\n\n`aws sns publish --topic-arn {{arn:aws:sns:us-east-1:54633:testTopic}} --message \"Message\"`\n\n- To see help text for the AWS command:\n\n`aws {{command}} help`\n"},"aws-s3":{"Platform":"all","Class":"network comm","Brief":"CLI for AWS S3 - provides storage through web services interfaces.","MdText":"# aws s3\n\n\u003e CLI for AWS S3 - provides storage through web services interfaces.\n\n- Show files in a bucket:\n\n`aws s3 ls {{bucket_name}}`\n\n- Sync files and directories from local to bucket:\n\n`aws s3 sync {{path/to/files}} s3://{{bucket_name}}`\n\n- Sync files and directories from bucket to local:\n\n`aws s3 sync s3://{{bucket_name}} {{path/to/target}}`\n\n- Sync files and directories with exclusions:\n\n`aws s3 sync {{path/to/files}} s3://{{bucket_name}} --exclude {{path/to/file}} --exclude {{path/to/directory}}/*`\n\n- Remove file from bucket:\n\n`aws s3 rm s3://{{bucket}}/{{path/to/file}}`\n\n- Preview changes only:\n\n`aws s3 {{any_command}} --dryrun`\n"},"axel":{"Platform":"all","Class":"network comm","Brief":"Download accelerator.","MdText":"# axel\n\n\u003e Download accelerator.\n\u003e Supports HTTP, HTTPS, and FTP.\n\u003e Homepage: \u003chttps://github.com/axel-download-accelerator/axel\u003e.\n\n- Download a URL to a file:\n\n`axel {{url}}`\n\n- Download and specify filename:\n\n`axel {{url}} -o {{filename}}`\n\n- Download with multiple connections:\n\n`axel -n {{connections_num}} {{url}}`\n\n- Search for mirrors:\n\n`axel -S {{mirrors_num}} {{url}}`\n\n- Limit download speed (bytes per second):\n\n`axel -s {{speed}} {{url}}`\n"},"az":{"Platform":"all","Class":"other cmds","Brief":"The official CLI tool for Microsoft Azure.","MdText":"# az\n\n\u003e The official CLI tool for Microsoft Azure.\n\n- Log in to Azure:\n\n`az login`\n\n- Manage azure subscription information:\n\n`az account`\n\n- List all Azure Managed Disks:\n\n`az disk list`\n\n- List all Azure virtual machines:\n\n`az vm list`\n\n- Manage Azure Kubernetes Services:\n\n`az aks`\n\n- Manage Azure Network resources:\n\n`az network`\n"},"b2sum":{"Platform":"all","Class":"file man","Brief":"Calculate BLAKE2 cryptographic checksums.","MdText":"# b2sum\n\n\u003e Calculate BLAKE2 cryptographic checksums.\n\n- Calculate the BLAKE2 checksum for a file:\n\n`b2sum {{filename1}}`\n\n- Calculate BLAKE2 checksums for multiple files:\n\n`b2sum {{filename1}} {{filename2}}`\n\n- Read a file of BLAKE2 sums and filenames and verify all files have matching checksums:\n\n`b2sum -c {{filename.b2}}`\n\n- Calculate the BLAKE2 checksum from stdin:\n\n`{{somecommand}} | b2sum`\n"},"babel":{"Platform":"all","Class":"file editor","Brief":"A transpiler which converts code from JavaScript ES6/ES7 syntax to ES5 syntax.","MdText":"# babel\n\n\u003e A transpiler which converts code from JavaScript ES6/ES7 syntax to ES5 syntax.\n\u003e Homepage: \u003chttps://babeljs.io/\u003e.\n\n- Transpile a specified input file and output to stdout:\n\n`babel {{path/to/file}}`\n\n- Transpile a specified input file and output to a specific file:\n\n`babel {{path/to/input_file}} --out-file {{path/to/output_file}}`\n\n- Transpile the input file every time it is changed:\n\n`babel {{path/to/input_file}} --watch`\n\n- Transpile a whole directory of files:\n\n`babel {{path/to/input_directory}}`\n\n- Ignore specified comma-separated files in a directory:\n\n`babel {{path/to/input_directory}} --ignore {{ignored_files}}`\n\n- Transpile and output as minified JavaScript:\n\n`babel {{path/to/input_file}} --minified`\n\n- Choose a set of presets for output formatting:\n\n`babel {{path/to/input_file}} --presets {{presets}}`\n\n- Output all available options:\n\n`babel --help`\n"},"banner":{"Platform":"all","Class":"system man","Brief":"Print the given argument as a large ASCII art.","MdText":"# banner\n\n\u003e Print the given argument as a large ASCII art.\n\n- Print the text message as a large banner (quotes are optional):\n\n`banner {{\"Hello World\"}}`\n\n- Print the text message as a banner with a width of 50 characters:\n\n`banner -w {{50}} {{\"Hello World\"}}`\n\n- Read text from stdin:\n\n`banner`\n"},"bash":{"Platform":"all","Class":"system man","Brief":"Bourne-Again SHell.","MdText":"# bash\n\n\u003e Bourne-Again SHell.\n\u003e `sh`-compatible command line interpreter.\n\n- Start interactive shell:\n\n`bash`\n\n- Execute a command:\n\n`bash -c \"{{command}}\"`\n\n- Run commands from a file:\n\n`bash {{file.sh}}`\n\n- Run commands from a file, logging all commands executed to the terminal:\n\n`bash -x {{file.sh}}`\n\n- Run commands from a file, stopping at the first error:\n\n`bash -e {{file.sh}}`\n\n- Run commands from STDIN:\n\n`bash -s`\n\n- Print the version information of bash (use `echo $BASH_VERSION` to show just the version string):\n\n`bash --version`\n"},"bashmarks":{"Platform":"all","Class":"system man","Brief":"Save and jump to commonly used directories using 1 character commands.","MdText":"# bashmarks\n\n\u003e Save and jump to commonly used directories using 1 character commands.\n\n- List available bookmarks:\n\n`l`\n\n- Save the current directory as \"bookmark_name\":\n\n`s {{bookmark_name}}`\n\n- Go to a bookmarked directory:\n\n`g {{bookmark_name}}`\n\n- Print a bookmarked directory's contents:\n\n`p {{bookmark_name}}`\n\n- Delete a bookmark:\n\n`d {{bookmark_name}}`\n"},"bat":{"Platform":"all","Class":"file editor","Brief":"Print and concatenate files.","MdText":"# bat\n\n\u003e Print and concatenate files.\n\u003e A `cat` clone with syntax highlighting and Git integration.\n\n- Print the contents of a file to the standard output:\n\n`bat {{file}}`\n\n- Concatenate several files into the target file:\n\n`bat {{file1}} {{file2}} \u003e {{target_file}}`\n\n- Append several files into the target file:\n\n`bat {{file1}} {{file2}} \u003e\u003e {{target_file}}`\n\n- Number all output lines:\n\n`bat -n {{file}}`\n\n- Syntax highlight a json file:\n\n`bat --language json {{file.json}}`\n\n- Display all supported languages:\n\n`bat --list-languages`\n"},"beanstalkd":{"Platform":"all","Class":"other cmds","Brief":"A simple and generic work-queue server.","MdText":"# beanstalkd\n\n\u003e A simple and generic work-queue server.\n\u003e Homepage: \u003chttps://beanstalkd.github.io/\u003e.\n\n- Start beanstalkd, listening on port 11300:\n\n`beanstalkd`\n\n- Start beanstalkd listening on a custom port and address:\n\n`beanstalkd -l {{ip_address}} -p {{port_number}}`\n\n- Persist work queues by saving them to disk:\n\n`beanstalkd -b {{path/to/persistence_directory}}`\n\n- Sync to the persistence directory every 500 milliseconds:\n\n`beanstalkd -b {{path/to/persistence_directory}} -f {{500}}`\n"},"bedtools":{"Platform":"all","Class":"system man","Brief":"A swiss-army knife of tools for genomic-analysis tasks.","MdText":"# bedtools\n\n\u003e A swiss-army knife of tools for genomic-analysis tasks.\n\u003e Used to intersect, group, convert and count data in BAM, BED, GFF/GTF, VCF format.\n\u003e Homepage: \u003chttps://bedtools.readthedocs.io/en/latest/\u003e.\n\n- Intersect two files with respect to the sequences' strand and save the result to {{path/to/output_file}}:\n\n`bedtools intersect -a {{path/to/file_1}} -b {{path/to/file_2}} -s \u003e {{path/to/output_file}}`\n\n- Intersect two files with a left outer join, i.e. report each feature from {{file_1}} and NULL if no overlap with {{file_2}}:\n\n`bedtools intersect -a {{path/to/file_1}} -b {{path/to/file_2}} -lof \u003e {{path/to/output_file}}`\n\n- Using more efficient algorithm to intersect two pre-sorted files:\n\n`bedtools intersect -a {{path/to/file_1}} -b {{path/to/file_2}} -sorted \u003e {{path/to/output_file}}`\n\n- Group file {{path/to/file}} based on the first three and the fifth column and summarize the sixth column by summing it up:\n\n`bedtools groupby -i {{path/to/file}} -c 1-3,5 -g 6 -o sum`\n\n- Convert bam-formated file to a bed-formated one:\n\n`bedtools bamtobed -i {{path/to/file}}.bam \u003e {{path/to/file}}.bed`\n\n- Find for all features in {{file_1}}.bed the closest one in {{file_2}}.bed and write their distance in an extra column (input files must be sorted):\n\n`bedtools closest -a {{path/to/file_1}}.bed -b {{path/to/file_2}}.bed -d`\n"},"berks":{"Platform":"all","Class":"other cmds","Brief":"Chef cookbook dependency manager.","MdText":"# berks\n\n\u003e Chef cookbook dependency manager.\n\n- Install cookbook dependencies into a local repo:\n\n`berks install`\n\n- Update a specific cookbook and its dependencies:\n\n`berks update {{cookbook}}`\n\n- Upload a cookbook to the Chef server:\n\n`berks upload {{cookbook}}`\n\n- View the dependencies of a cookbook:\n\n`berks contingent {{cookbook}}`\n"},"blender":{"Platform":"all","Class":"other cmds","Brief":"Command-line interface to the Blender 3D computer graphics application.","MdText":"# blender\n\n\u003e Command-line interface to the Blender 3D computer graphics application.\n\u003e Arguments are executed in the order they are given.\n\u003e Homepage: \u003chttps://docs.blender.org/manual/en/latest/render/workflows/command_line.html\u003e.\n\n- Render all frames of an animation in the background, without loading the UI (output is saved to `/tmp`):\n\n`blender -b {{filename}}.blend -a`\n\n- Render an animation using a specific image naming pattern, in a path relative (`//`) to the .blend file:\n\n`blender -b {{filename}}.blend -o //{{render/frame_###.png}} -a`\n\n- Render the 10th frame of an animation as a single image, saved to an existing directory (absolute path):\n\n`blender -b {{filename}}.blend -o {{/path/to/output_directory}} -f {{10}}`\n\n- Render the second last frame in an animation as a JPEG image, saved to an existing directory (relative path):\n\n`blender -b {{filename}}.blend -o //{{output_directory}} -F {{JPEG}} -f {{-2}}`\n\n- Render the animation of a specific scene, starting at frame 10 and ending at frame 500:\n\n`blender -b {{filename}}.blend -S {{scene_name}} -s {{10}} -e {{500}} -a`\n\n- Render an animation at a specific resolution, by passing a Python expression:\n\n`blender -b {{filename}}.blend --python-expr '{{import bpy; bpy.data.scenes[0].render.resolution_percentage = 25}}' -a`\n\n- Start an interactive Blender session in the terminal with a python console (do `import bpy` after starting):\n\n`blender -b --python-console`\n"},"boot":{"Platform":"all","Class":"system man","Brief":"Build tooling for the Clojure programming language.","MdText":"# boot\n\n\u003e Build tooling for the Clojure programming language.\n\u003e Homepage: \u003chttps://github.com/boot-clj/boot\u003e.\n\n- Start a REPL session either with the project or standalone:\n\n`boot repl`\n\n- Build a single \"uberjar\":\n\n`boot jar`\n\n- Learn about a command:\n\n`boot cljs --help`\n\n- Generate scaffolding for a new project based on a template:\n\n`boot --dependencies boot/new new --template {{template_name}} --name {{project_name}}`\n\n- Build for development (if using the boot/new template):\n\n`boot dev`\n\n- Build for production (if using the boot/new template):\n\n`boot prod`\n"},"bower":{"Platform":"all","Class":"other cmds","Brief":"A package manager optimized for front-end web development.","MdText":"# bower\n\n\u003e A package manager optimized for front-end web development.\n\u003e A package can be a GitHub user/repo shorthand, a Git endpoint, a URL or a registered package.\n\u003e Homepage: \u003chttps://bower.io/\u003e.\n\n- Install a project's dependencies, listed in its bower.json:\n\n`bower install`\n\n- Install one or more packages to the bower_components directory:\n\n`bower install {{package}} {{package}}`\n\n- Uninstall packages locally from the bower_components directory:\n\n`bower uninstall {{package}} {{package}}`\n\n- List local packages and possible updates:\n\n`bower list`\n\n- Display help information about a bower command:\n\n`bower help {{command}}`\n\n- Create a bower.json file for your package:\n\n`bower init`\n\n- Install a specific dependency version, and add it to bower.json:\n\n`bower install {{local_name}}={{package}}#{{version}} --save`\n"},"bundle":{"Platform":"all","Class":"other cmds","Brief":"Dependency manager for the Ruby programming language.","MdText":"# bundle\n\n\u003e Dependency manager for the Ruby programming language.\n\u003e Homepage: \u003chttps://bundler.io/man/bundle.1.html\u003e.\n\n- Install all gems defined in the `Gemfile` expected in the working directory:\n\n`bundle install`\n\n- Update all gems by the rules defined in the `Gemfile` and regenerate `Gemfile.lock`:\n\n`bundle update`\n\n- Update one specific gem defined in the `Gemfile`:\n\n`bundle update --source {{gemname}}`\n\n- Create a new gem skeleton:\n\n`bundle gem {{gemname}}`\n"},"bup":{"Platform":"all","Class":"file man","Brief":"Backup system based on the git packfile format, providing fast incremental saves and global deduplication.","MdText":"# bup\n\n\u003e Backup system based on the git packfile format, providing fast incremental saves and global deduplication.\n\u003e Homepage: \u003chttps://github.com/bup/bup\u003e.\n\n- Initialize a backup repository in the specified local directory:\n\n`bup -d {{path/to/repository}} init`\n\n- Prepare a given directory before taking a backup:\n\n`bup -d {{path/to/repository}} index {{path/to/directory}}`\n\n- Backup a directory to the repository:\n\n`bup -d {{path/to/repository}} save -n {{backup_name}} {{path/to/directory}}`\n\n- Show the backup snapshots currently stored in the repository:\n\n`bup -d {{path/to/repository}} ls`\n\n- Restore a specific backup snapshot to a target directory:\n\n`bup -d {{path/to/repository}} restore -C {{path/to/target_directory}} {{backup_name}}`\n"},"bw":{"Platform":"all","Class":"other cmds","Brief":"A CLI to access and manage a Bitwarden vault.","MdText":"# bw\n\n\u003e A CLI to access and manage a Bitwarden vault.\n\u003e Homepage: \u003chttps://help.bitwarden.com/article/cli/\u003e.\n\n- Log in to a Bitwarden user account:\n\n`bw login`\n\n- Log out of a Bitwarden user account:\n\n`bw logout`\n\n- Search and display items from Bitwarden vault:\n\n`bw list items --search {{github}}`\n\n- Display a particular item from Bitwarden vault:\n\n`bw get item {{github}}`\n\n- Create a folder in Bitwarden vault:\n\n`{{echo -n '{\"name\":\"My Folder1\"}' | base64}} | bw create folder`\n"},"calibre-server":{"Platform":"all","Class":"other cmds","Brief":"A server application that can be used to distribute ebooks over a network.","MdText":"# calibre-server\n\n\u003e A server application that can be used to distribute ebooks over a network.\n\u003e Ebooks must be imported into the library using the GUI or calibredb before.\n\u003e Part of the Calibre ebook library.\n\u003e Homepage: \u003chttps://manual.calibre-ebook.com/generated/en/calibre-server.html\u003e.\n\n- Start a server to distribute ebooks. Access at http://localhost:8080:\n\n`calibre-server`\n\n- Start server on different port. Access at http://localhost:port:\n\n`calibre-server --port {{port}}`\n\n- Password protect the server:\n\n`calibre-server --username {{username}} --password {{password}}`\n"},"calibredb":{"Platform":"all","Class":"other cmds","Brief":"Tool to manipulate the your ebook database.","MdText":"# calibredb\n\n\u003e Tool to manipulate the your ebook database.\n\u003e Part of the Calibre ebook library.\n\u003e Homepage: \u003chttps://manual.calibre-ebook.com/generated/en/calibredb.html\u003e.\n\n- List ebooks in the library with additional information:\n\n`calibredb list`\n\n- Search for ebooks displaying additional information:\n\n`calibredb list --search {{search_term}}`\n\n- Search for just ids of ebooks:\n\n`calibredb search {{search_term}}`\n\n- Add one or more ebooks to the library:\n\n`calibredb add {{file1 file2 …}}`\n\n- Remove one or more ebooks from the library. You need ebook-ids (see above):\n\n`calibredb remove {{id1 id2 …}}`\n"},"cargo":{"Platform":"all","Class":"system man","Brief":"Rust package manager.","MdText":"# cargo\n\n\u003e Rust package manager.\n\u003e Manage Rust projects and their module dependencies (crates).\n\n- Search for crates:\n\n`cargo search {{search_string}}`\n\n- Install a crate:\n\n`cargo install {{crate_name}}`\n\n- List installed crates:\n\n`cargo install --list`\n\n- Create a new binary or library Rust project in the current directory:\n\n`cargo init --{{bin|lib}}`\n\n- Create a new binary or library Rust project in the specified directory:\n\n`cargo new {{path/to/directory}} --{{bin|lib}}`\n\n- Build the Rust project in the current directory:\n\n`cargo build`\n\n- Build with multiple parallel jobs:\n\n`cargo build -j {{jobs}}`\n"},"case":{"Platform":"all","Class":"file editor","Brief":"Branch based on the value of an expression.","MdText":"# case\n\n\u003e Branch based on the value of an expression.\n\n- Match a variable against string literals to decide which command to run:\n\n`case {{$tocount}} in {{words}}) {{wc -w README}}; ;; {{lines}}) {{wc -l README}}; ;; esac`\n\n- Combine patterns with |, use * as a fallback pattern:\n\n`case {{$tocount}} in {{[wW]|words}}) {{wc -w README}}; ;; {{[lL]|lines}}) {{wc -l README}}; ;; *) {{echo \"what?\"}}; ;; esac`\n"},"cat":{"Platform":"all","Class":"file editor","Brief":"Print and concatenate files.","MdText":"# cat\n\n\u003e Print and concatenate files.\n\n- Print the contents of a file to the standard output:\n\n`cat {{file}}`\n\n- Concatenate several files into the target file:\n\n`cat {{file1}} {{file2}} \u003e {{target_file}}`\n\n- Append several files into the target file:\n\n`cat {{file1}} {{file2}} \u003e\u003e {{target_file}}`\n\n- Number all output lines:\n\n`cat -n {{file}}`\n"},"cd":{"Platform":"all","Class":"file man","Brief":"Change the current working directory.","MdText":"# cd\n\n\u003e Change the current working directory.\n\n- Go to the given directory:\n\n`cd {{path/to/directory}}`\n\n- Go to home directory of current user:\n\n`cd`\n\n- Go up to the parent of the current directory:\n\n`cd ..`\n\n- Go to the previously chosen directory:\n\n`cd -`\n"},"chmod":{"Platform":"all","Class":"system man","Brief":"Change the access permissions of a file or directory.","MdText":"# chmod\n\n\u003e Change the access permissions of a file or directory.\n\n- Give the [u]ser who owns a file the right to e[x]ecute it:\n\n`chmod u+x {{file}}`\n\n- Give the user rights to [r]ead and [w]rite to a file/directory:\n\n`chmod u+rw {{file_or_directory}}`\n\n- Remove executable rights from the [g]roup:\n\n`chmod g-x {{file}}`\n\n- Give [a]ll users rights to read and execute:\n\n`chmod a+rx {{file}}`\n\n- Give [o]thers (not in the file owner's group) the same rights as the group:\n\n`chmod o=g {{file}}`\n\n- Change permissions recursively giving [g]roup and [o]thers the abililty to [w]rite:\n\n`chmod -R g+w,o+w {{directory}}`\n"},"chroot":{"Platform":"all","Class":"system man","Brief":"Run command or interactive shell with special root directory.","MdText":"# chroot\n\n\u003e Run command or interactive shell with special root directory.\n\n- Run command as new root directory:\n\n`chroot {{/path/to/new/root}} {{command}}`\n\n- Specify user and group (ID or name) to use:\n\n`chroot --userspec={{user:group}}`\n"},"chsh":{"Platform":"all","Class":"system man","Brief":"Change user's login shell.","MdText":"# chsh\n\n\u003e Change user's login shell.\n\n- Change shell:\n\n`chsh -s {{path/to/shell_binary}} {{username}}`\n"},"clang":{"Platform":"all","Class":"other cmds","Brief":"Compiler for C, C++, and Objective-C source files. Can be used as a drop-in replacement for GCC.","MdText":"# clang\n\n\u003e Compiler for C, C++, and Objective-C source files. Can be used as a drop-in replacement for GCC.\n\u003e Homepage: \u003chttps://clang.llvm.org/docs/ClangCommandLineReference.html\u003e.\n\n- Compile a source code file into an executable binary:\n\n`clang {{input_source.c}} -o {{output_executable}}`\n\n- Activate output of all errors and warnings:\n\n`clang {{input_source.c}} -Wall -o {{output_executable}}`\n\n- Include libraries located at a different path than the source file:\n\n`clang {{input_source.c}} -o {{output_executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}`\n\n- Compile source code into LLVM Intermediate Representation (IR):\n\n`clang -S -emit-llvm {{file.c}} -o {{file.ll}}`\n"},"clear":{"Platform":"all","Class":"system man","Brief":"Clears the screen of the terminal.","MdText":"# clear\n\n\u003e Clears the screen of the terminal.\n\n- Clear the screen (equivalent to typing Control-L when using the bash shell):\n\n`clear`\n"},"cmake":{"Platform":"all","Class":"other cmds","Brief":"Cross-platform build system generator.","MdText":"# cmake\n\n\u003e Cross-platform build system generator.\n\u003e It generates Makefiles, Visual Studio projects or others, depending on the target system.\n\u003e Homepage: \u003chttps://cmake.org/cmake/help/v3.2/manual/cmake.1.html\u003e.\n\n- Generate a Makefile and use it to compile a project in the same directory as the source:\n\n`cmake \u0026\u0026 make`\n\n- Generate a Makefile and use it to compile a project in a separate \"build\" directory (out-of-source build):\n\n`cmake -H. -B{{build}} \u0026\u0026 make -C {{build}}`\n\n- Run cmake in interactive mode (it will ask for each variable, instead of using defaults):\n\n`cmake -i`\n"},"code":{"Platform":"all","Class":"file editor","Brief":"Visual Studio Code.","MdText":"# code\n\n\u003e Visual Studio Code.\n\u003e Homepage: \u003chttps://github.com/microsoft/vscode\u003e.\n\n- Open VS Code:\n\n`code`\n\n- Open the current directory in VS Code:\n\n`code .`\n\n- Open a file or directory in VS Code:\n\n`code {{path/to/file_or_directory}}`\n\n- Open a file or directory in the currently open VS Code window:\n\n`code --reuse-window {{path/to/file_or_directory}}`\n\n- Compare two files in VS Code:\n\n`code -d {{file1}} {{file2}}`\n"},"coffee":{"Platform":"all","Class":"other cmds","Brief":"Executes CoffeeScript scripts or compiles them into JavaScript.","MdText":"# coffee\n\n\u003e Executes CoffeeScript scripts or compiles them into JavaScript.\n\n- Run a script:\n\n`coffee {{path/to/file.coffee}}`\n\n- Compile to JavaScript and save to a file with the same name:\n\n`coffee --compile {{path/to/file.coffee}}`\n\n- Compile to JavaScript and save to a given output file:\n\n`coffee --compile {{path/to/file.coffee}} --output {{path/to/file.js}}`\n\n- Run interactive REPL:\n\n`coffee --interactive`\n\n- Watch script for changes and re-run script:\n\n`coffee --watch {{path/to/file.coffee}}`\n"},"complete":{"Platform":"all","Class":"other cmds","Brief":"Provides argument autocompletion to shell commands.","MdText":"# complete\n\n\u003e Provides argument autocompletion to shell commands.\n\n- Apply a function that performs autocompletion to a command:\n\n`complete -F {{function}} {{command}}`\n\n- Apply a command that performs autocompletion to another command:\n\n`complete -C {{autocomplete_command}} {{command}}`\n\n- Apply autocompletion without appending a space to the completed word:\n\n`complete -o nospace -F {{function}} {{command}}`\n"},"composer":{"Platform":"all","Class":"other cmds","Brief":"A package-based dependency manager for PHP projects.","MdText":"# composer\n\n\u003e A package-based dependency manager for PHP projects.\n\n- Add a package as a dependency for this project, adding it to `composer.json`:\n\n`composer require {{user/package_name}}`\n\n- Install all the dependencies in this project's `composer.json`:\n\n`composer install`\n\n- Uninstall a package from this project, removing it as a dependency from `composer.json`:\n\n`composer remove {{user/package_name}}`\n\n- Update all the dependencies in this project's `composer.json`:\n\n`composer update`\n\n- Update composer to the latest version:\n\n`composer self-update`\n"},"conda":{"Platform":"all","Class":"other cmds","Brief":"Package, dependency and environment management for any programming language.","MdText":"# conda\n\n\u003e Package, dependency and environment management for any programming language.\n\n- Create a new environment, installing named packages into it:\n\n`conda create --name {{environment_name}} {{python=2.7 matplotlib}}`\n\n- List all environments:\n\n`conda info --envs`\n\n- Load or unload an environment:\n\n`conda {{activate|deactivate}} {{environment_name}}`\n\n- Delete an environment (remove all packages):\n\n`conda remove --name {{environment_name}} --all`\n\n- Search conda channels for a package by name:\n\n`conda search {{package_name}}`\n\n- Install packages into the current environment:\n\n`conda install {{python=3.4 numpy}}`\n\n- List currently installed packages in current environment:\n\n`conda list`\n\n- Delete unused packages and caches:\n\n`conda clean --all`\n"},"consul":{"Platform":"all","Class":"other cmds","Brief":"Distributed key-value store with health checking and service discovery.","MdText":"# consul\n\n\u003e Distributed key-value store with health checking and service discovery.\n\u003e Homepage: \u003chttps://www.consul.io/docs/commands/index.html\u003e.\n\n- Check the Consul version:\n\n`consul --version`\n\n- Show general help:\n\n`consul --help`\n\n- Show help for a sub-command:\n\n`consul {{sub-command}} --help`\n"},"convert":{"Platform":"all","Class":"file editor","Brief":"Imagemagick image conversion tool.","MdText":"# convert\n\n\u003e Imagemagick image conversion tool.\n\u003e Homepage: \u003chttps://imagemagick.org/script/convert.php\u003e.\n\n- Convert an image from JPG to PNG:\n\n`convert {{image.jpg}} {{image.png}}`\n\n- Scale an image 50% its original size:\n\n`convert {{image.png}} -resize 50% {{image2.png}}`\n\n- Scale an image keeping the original aspect ratio to a maximum dimension of 640x480:\n\n`convert {{image.png}} -resize 640x480 {{image2.png}}`\n\n- Horizontally append images:\n\n`convert {{image1.png}} {{image2.png}} {{image3.png}} +append {{image123.png}}`\n\n- Create a gif from a series of images with 100ms delay between them:\n\n`convert {{image1.png}} {{image2.png}} {{image3.png}} -delay {{100}} {{animation.gif}}`\n\n- Create an image with nothing but a solid background:\n\n`convert -size {{800x600}} \"xc:{{#ff0000}}\" {{image.png}}`\n"},"convmv":{"Platform":"all","Class":"file editor","Brief":"Convert filenames (NOT file content) from one encoding to another.","MdText":"# convmv\n\n\u003e Convert filenames (NOT file content) from one encoding to another.\n\u003e Homepage: \u003chttps://www.j3e.de/linux/convmv/man/\u003e.\n\n- Test filename encoding conversion (don't actually change the filename):\n\n`convmv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}`\n\n- Convert filename encoding and rename the file to the new encoding:\n\n`convmv -f {{from_encoding}} -t {{to_encoding}} --notest {{input_file}}`\n"},"cordova":{"Platform":"all","Class":"other cmds","Brief":"Mobile apps with HTML, CSS \u0026 JS.","MdText":"# cordova\n\n\u003e Mobile apps with HTML, CSS \u0026 JS.\n\u003e Homepage: \u003chttps://cordova.apache.org/docs/en/latest/guide/cli/\u003e.\n\n- Create a cordova project:\n\n`cordova create {{path}} {{package_name}} {{project_name}}`\n\n- Display the current workspace status:\n\n`cordova info`\n\n- Add a cordova platform:\n\n`cordova platform add {{platform}}`\n\n- Remove a cordova platform:\n\n`cordova platform remove {{platform}}`\n\n- Add a cordova plugin:\n\n`cordova plugin add {{pluginid}}`\n\n- Remove a cordova plugin:\n\n`cordova plugin remove {{pluginid}}`\n"},"cowsay":{"Platform":"all","Class":"file editor","Brief":"Generate an ASCII character (by default a cow) saying or thinking something.","MdText":"# cowsay\n\n\u003e Generate an ASCII character (by default a cow) saying or thinking something.\n\n- Print an ASCII cow saying \"Hello world!\":\n\n`cowsay \"Hello world!\"`\n\n- List all available characters:\n\n`cowsay -l`\n\n- Print an ASCII dragon saying \"Hello!\":\n\n`echo \"Hello!\" | cowsay -f dragon`\n\n- Print a stoned thinking ASCII cow:\n\n`cowthink -s \"I'm just a cow, not a great thinker ...\"`\n"},"cp":{"Platform":"all","Class":"file man","Brief":"Copy files and directories.","MdText":"# cp\n\n\u003e Copy files and directories.\n\n- Copy a file to another location:\n\n`cp {{path/to/file.ext}} {{path/to/copy.ext}}`\n\n- Copy a file into another directory, keeping the filename:\n\n`cp {{path/to/file.ext}} {{path/to/target_parent_directory}}`\n\n- Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it):\n\n`cp -r {{path/to/directory}} {{path/to/copy}}`\n\n- Copy a directory recursively, in verbose mode (shows files as they are copied):\n\n`cp -vr {{path/to/directory}} {{path/to/copy}}`\n\n- Copy text files to another location, in interactive mode (prompts user before overwriting):\n\n`cp -i {{*.txt}} {{path/to/target_directory}}`\n"},"cpio":{"Platform":"all","Class":"file man","Brief":"Copies files in and out of archives.","MdText":"# cpio\n\n\u003e Copies files in and out of archives.\n\u003e Supports the following archive formats: cpio's custom binary, old ASCII, new ASCII, crc, HPUX binary, HPUX old ASCII, old tar, and POSIX.1 tar.\n\n- Take a list of file names from standard input and add them [o]nto an archive in cpio's binary format:\n\n`echo \"{{file1}} {{file2}} {{file3}}\" | cpio -o \u003e {{archive.cpio}}`\n\n- Copy all files and directories in a directory and add them [o]nto an archive, in [v]erbose mode:\n\n`find {{path/to/directory}} | cpio -ov \u003e {{archive.cpio}}`\n\n- P[i]ck all files from an archive, generating [d]irectories where needed, in [v]erbose mode:\n\n`cpio -idv \u003c {{archive.cpio}}`\n"},"cppcheck":{"Platform":"all","Class":"other cmds","Brief":"A static analysis tool for C/C++ code.","MdText":"# cppcheck\n\n\u003e A static analysis tool for C/C++ code.\n\u003e Instead of syntax errors, it focuses on the types of bugs that compilers normally do not detect.\n\n- Recursively check the current directory, showing progress on the screen and logging error messages to a file:\n\n`cppcheck . 2\u003e cppcheck.log`\n\n- Recursively check a given directory, and don't print progress messages:\n\n`cppcheck --quiet {{path/to/directory}}`\n\n- Check a given file, specifying which tests to perform (by default only errors are shown):\n\n`cppcheck --enable={{error|warning|style|performance|portability|information|all}} {{path/to/file.cpp}}`\n\n- List available tests, filtered by a given search pattern:\n\n`cppcheck --errorlist | grep \"{{search_pattern}}\"`\n\n- Check a given file, ignoring specific tests:\n\n`cppcheck --suppress={{test_id1}} --suppress={{test_id2}} {{path/to/file.cpp}}`\n\n- Check the current directory, providing paths for include files located outside it (e.g. external libraries):\n\n`cppcheck -I {{include/directory_1}} -I {{include/directory_2}} .`\n\n- Check a Microsoft Visual Studio project (`*.vcxproj`) or solution (`*.sln`):\n\n`cppcheck --project={{path/to/project.sln}}`\n"},"cradle":{"Platform":"all","Class":"other cmds","Brief":"The Cradle PHP framework.","MdText":"# cradle\n\n\u003e The Cradle PHP framework.\n\u003e See `cradle-install`, `cradle-deploy` and other pages for additional information.\n\n- Connect to a server:\n\n`cradle connect {{server_name}}`\n\n- Display general help:\n\n`cradle help`\n\n- Display help for a specific command:\n\n`cradle {{command}} help`\n\n- Execute a Cradle command:\n\n`cradle {{command}}`\n"},"crontab":{"Platform":"all","Class":"system man","Brief":"Schedule cron jobs to run on a time interval for the current user.","MdText":"# crontab\n\n\u003e Schedule cron jobs to run on a time interval for the current user.\n\u003e Job definition format: \"(min) (hour) (day_of_month) (month) (day_of_week) command_to_execute\".\n\n- Edit the crontab file for the current user:\n\n`crontab -e`\n\n- View a list of existing cron jobs for current user:\n\n`crontab -l`\n\n- Remove all cron jobs for the current user:\n\n`crontab -r`\n\n- Sample job which runs at 10:00 every day. * means any value:\n\n`0 10 * * * {{path/to/script.sh}}`\n\n- Sample job which runs every minute on the 3rd of April:\n\n`* * 3 Apr * {{path/to/script.sh}}`\n\n- Sample job which runs at 02:30 every Friday:\n\n`30 2 * * Fri {{path/to/script.sh}}`\n"},"csc":{"Platform":"all","Class":"other cmds","Brief":"The Microsoft C# Compiler.","MdText":"# csc\n\n\u003e The Microsoft C# Compiler.\n\n- Compile one or more C# files to a CIL executable:\n\n`csc {{path/to/input_file_a.cs}} {{path/to/input_file_b.cs}}`\n\n- Specify the output filename:\n\n`csc /out:{{path/to/filename}} {{path/to/input_file.cs}}`\n\n- Compile into a '.dll' library instead of an executable:\n\n`csc /target:library {{path/to/input_file.cs}}`\n\n- Reference another assembly:\n\n`csc /reference:{{path/to/library.dll}} {{path/to/input_file.cs}}`\n\n- Embed a resource:\n\n`csc /resource:{{path/to/target_file.cs}},{{namespace.string.name}} {{path/to/input_file.cs}}`\n\n- Automatically generate XML documentation:\n\n`csc /doc:{{path/to/output.xml}} {{path/to/input_file.cs}}`\n\n- Specify an icon:\n\n`csc /win32icon:{{path/to/icon.ico}} {{path/to/input_file.cs}}`\n\n- Strongly-name the resulting assembly with a keyfile:\n\n`csc /keyfile:{{path/to/keyfile}} {{path/to/input_file.cs}}`\n"},"csslint":{"Platform":"all","Class":"other cmds","Brief":"A linter for CSS code.","MdText":"# csslint\n\n\u003e A linter for CSS code.\n\n- Lint a single CSS file:\n\n`csslint {{file.css}}`\n\n- Lint multiple CSS files:\n\n`csslint {{file1.css}} {{file2.css}} {{file3.css}}`\n\n- List all possible style rules:\n\n`csslint --list-rules`\n\n- Specify certain rules as errors (which result in a non-zero exit code):\n\n`csslint --errors={{errors,universal-selector,imports}} {{file.css}}`\n\n- Specify certain rules as warnings:\n\n`csslint --warnings={{box-sizing,selector-max,floats}} {{file.css}}`\n\n- Specify certain rules to completely ignore:\n\n`csslint --ignore={{ids,rules-count,shorthand}} {{file.css}}`\n"},"csvclean":{"Platform":"all","Class":"other cmds","Brief":"Finds and cleans common syntax errors in CSV files.","MdText":"# csvclean\n\n\u003e Finds and cleans common syntax errors in CSV files.\n\u003e Included in csvkit.\n\n- Clean a CSV file:\n\n`csvclean {{bad.csv}}`\n\n- List locations of syntax errors in a CSV file:\n\n`csvclean -n {{bad.csv}}`\n"},"csvcut":{"Platform":"all","Class":"other cmds","Brief":"Filter and truncate CSV files. Like Unix's `cut` command, but for tabular data.","MdText":"# csvcut\n\n\u003e Filter and truncate CSV files. Like Unix's `cut` command, but for tabular data.\n\u003e Included in csvkit.\n\n- Print indices and names of all columns:\n\n`csvcut -n {{data.csv}}`\n\n- Extract the first and third columns:\n\n`csvcut -c {{1,3}} {{data.csv}}`\n\n- Extract all columns **except** the fourth one:\n\n`csvcut -C {{4}} {{data.csv}}`\n\n- Extract the columns named \"id\" and \"first name\" (in that order):\n\n`csvcut -c {{id,\"first name\"}} {{data.csv}}`\n"},"csvformat":{"Platform":"all","Class":"other cmds","Brief":"Convert a CSV file to a custom output format.","MdText":"# csvformat\n\n\u003e Convert a CSV file to a custom output format.\n\u003e Included in csvkit.\n\n- Convert to a tab-delimited file (TSV):\n\n`csvformat -T {{data.csv}}`\n\n- Convert delimiters to a custom character:\n\n`csvformat -D \"{{custom_character}}\" {{data.csv}}`\n\n- Convert line endings to carriage return (^M) + line feed:\n\n`csvformat -M \"{{\\r\\n}}\" {{data.csv}}`\n\n- Minimize use of quote characters:\n\n`csvformat -U 0 {{data.csv}}`\n\n- Maximize use of quote characters:\n\n`csvformat -U 1 {{data.csv}}`\n"},"csvgrep":{"Platform":"all","Class":"other cmds","Brief":"Filter CSV rows with string and pattern matching.","MdText":"# csvgrep\n\n\u003e Filter CSV rows with string and pattern matching.\n\u003e Included in csvkit.\n\n- Find rows that have a certain string in column 1:\n\n`csvgrep -c {{1}} -m {{string_to_match}} {{data.csv}}`\n\n- Find rows in which columns 3 or 4 match a certain regex pattern:\n\n`csvgrep -c {{3,4}} -r {{regex_pattern}} {{data.csv}}`\n\n- Find rows in which the \"name\" column does NOT include the string \"John Doe\":\n\n`csvgrep -i -c {{name}} -m {{\"John Doe\"}} {{data.csv}}`\n"},"csvlook":{"Platform":"all","Class":"other cmds","Brief":"Render a CSV file in the console as a fixed-width table.","MdText":"# csvlook\n\n\u003e Render a CSV file in the console as a fixed-width table.\n\u003e Included in csvkit.\n\n- View a CSV file:\n\n`csvlook {{data.csv}}`\n"},"csvpy":{"Platform":"all","Class":"other cmds","Brief":"Loads a CSV file into a Python shell.","MdText":"# csvpy\n\n\u003e Loads a CSV file into a Python shell.\n\u003e Included in csvkit.\n\n- Load a CSV file into a `CSVKitReader` object:\n\n`csvpy {{data.csv}}`\n\n- Load a CSV file into a `CSVKitDictReader` object:\n\n`csvpy --dict {{data.csv}}`\n"},"ctest":{"Platform":"all","Class":"other cmds","Brief":"CMake test driver program.","MdText":"# ctest\n\n\u003e CMake test driver program.\n\n- Run all tests defined in the CMake project, executing 4 jobs at a time in parallel:\n\n`ctest -j{{4}} --output-on-failure`\n\n- Show a list of available tests:\n\n`ctest -N`\n\n- Run a single test based on its name, or filter on a regular expression:\n\n`ctest --output-on-failure -R '^{{test_name}}$'`\n"},"darkhttpd":{"Platform":"all","Class":"other cmds","Brief":"Darkhttpd web server.","MdText":"# darkhttpd\n\n\u003e Darkhttpd web server.\n\n- Start server serving the specified document root:\n\n`darkhttpd {{path/to/docroot}}`\n\n- Start server on specified port (port 8080 by default if running as non-root user):\n\n`darkhttpd {{path/to/docroot}} --port {{port}}`\n\n- Listen only on specified IP address (by default, the server listens on all interfaces):\n\n`darkhttpd {{path/to/docroot}} --addr {{ip_address}}`\n"},"date":{"Platform":"all","Class":"system settings","Brief":"Set or display the system date.","MdText":"# date\n\n\u003e Set or display the system date.\n\n- Display the current date using the default locale's format:\n\n`date +\"%c\"`\n\n- Display the current date in UTC and ISO 8601 format:\n\n`date -u +\"%Y-%m-%dT%H:%M:%SZ\"`\n\n- Display the current date as a Unix timestamp (seconds since the Unix epoch):\n\n`date +%s`\n\n- Display a specific date (represented as a Unix timestamp) using the default format:\n\n`date -d @1473305798`\n\n- Convert a specific date to the Unix timestamp format:\n\n`date -d \"{{2018-09-01 00:00}}\" +%s --utc`\n"},"dc":{"Platform":"all","Class":"other cmds","Brief":"An arbitrary precision calculator. Uses reverse polish notation (RPN).","MdText":"# dc\n\n\u003e An arbitrary precision calculator. Uses reverse polish notation (RPN).\n\n- Run calculator in interactive mode:\n\n`dc`\n\n- Execute dc script in file:\n\n`dc -f {{file}}`\n\n- Calculate 4 times 5 [4 5 *], subtract 17 [17 -], and [p]rint the output (using echo):\n\n`echo \"4 5 * 17 - p\"| dc`\n\n- Set number of decimal places to 7 [7 k], calculate 5 divided by -3 [5 _3 /] and [p]rint (using dc -e):\n\n`dc -e \"7 k 5 _3 / p\"`\n\n- Calculate the golden ratio, phi: Set number of decimal places to 100 [100 k], square root of 5 [5 v] plus 1 [1 +], divided by 2 [2 /], and [p]rint result:\n\n`dc -e \"100 k 5 v 1 + 2 / p\"`\n"},"dd":{"Platform":"all","Class":"file editor","Brief":"Convert and copy a file.","MdText":"# dd\n\n\u003e Convert and copy a file.\n\n- Make a bootable usb drive from an isohybrid file (such like archlinux-xxx.iso) and show the progress:\n\n`dd if={{file.iso}} of=/dev/{{usb_drive}} status=progress`\n\n- Clone a drive to another drive with 4MB block, ignore error and show progress:\n\n`dd if=/dev/{{source_drive}} of=/dev/{{dest_drive}} bs=4M conv=noerror status=progress`\n\n- Generate a file of 100 random bytes by using kernel random driver:\n\n`dd if=/dev/urandom of={{random_file}} bs=100 count=1`\n\n- Benchmark the write performance of a disk:\n\n`dd if=/dev/zero of={{file_1GB}} bs=1024 count=1000000`\n\n- Check progress of an ongoing dd operation (Run this command from another shell):\n\n`kill -USR1 $(pgrep ^dd)`\n"},"decaffeinate":{"Platform":"all","Class":"other cmds","Brief":"Move your CoffeeScript source to modern JavaScript.","MdText":"# decaffeinate\n\n\u003e Move your CoffeeScript source to modern JavaScript.\n\n- Convert a CoffeeScript file to JavaScript:\n\n`decaffeinate {{path/to/file.coffee}}`\n\n- Convert a CoffeeScript v2 file to JavaScript:\n\n`decaffeinate --use-cs2 {{path/to/file.coffee}}`\n\n- Convert require and module.exports to import and export:\n\n`decaffeinate --use-js-modules {{path/to/file.coffee}}`\n\n- Convert a CoffeeScript, allowing named exports:\n\n`decaffeinate --loose-js-modules {{path/to/file.coffee}}`\n"},"deluser":{"Platform":"all","Class":"system man","Brief":"Remove a user account or remove a user from a group.","MdText":"# deluser\n\n\u003e Remove a user account or remove a user from a group.\n\n- Remove a user:\n\n`deluser {{name}}`\n\n- Remove a user along with their home directory and mail spool:\n\n`deluser -r {{name}}`\n\n- Remove a user from a group:\n\n`deluser {{name}} {{group}}`\n"},"dep":{"Platform":"all","Class":"system man","Brief":"Tool for dependency management in Go projects.","MdText":"# dep\n\n\u003e Tool for dependency management in Go projects.\n\n- Initialize the current directory as the root of a Go project:\n\n`dep init`\n\n- Install any missing dependencies (Scans Gopkg.toml and your .go files):\n\n`dep ensure`\n\n- Report the status of the project's dependencies:\n\n`dep status`\n\n- Add a dependency to the project:\n\n`dep ensure -add {{package_url}}`\n\n- Update the locked versions of all dependencies:\n\n`dep ensure -update`\n"},"dhcpwn":{"Platform":"all","Class":"system settings","Brief":"Test DHCP IP exhaustion attacks and sniff local DHCP traffic.","MdText":"# dhcpwn\n\n\u003e Test DHCP IP exhaustion attacks and sniff local DHCP traffic.\n\n- Flood the network with IP requests:\n\n`dhcpwn --interface {{network_interface}} flood --count {{number_of_requests}}`\n\n- Sniff local DHCP traffic:\n\n`dhcpwn --interface {{network_interface}} sniff`\n"},"diff":{"Platform":"all","Class":"file editor","Brief":"Compare files and directories.","MdText":"# diff\n\n\u003e Compare files and directories.\n\n- Compare files:\n\n`diff {{file1}} {{file2}}`\n\n- Compare files, ignoring white spaces:\n\n`diff -w {{file1}} {{file2}}`\n\n- Compare files, showing the differences side by side:\n\n`diff -y {{file1}} {{file2}}`\n\n- Compare files, showing the differences in unified format (as used by `git diff`):\n\n`diff -u {{file1}} {{file2}}`\n\n- Compare directories recursively:\n\n`diff -r {{directory1}} {{directory2}}`\n\n- Compare directories, only showing the names of files that differ:\n\n`diff -rq {{directory1}} {{directory2}}`\n"},"diffstat":{"Platform":"all","Class":"file editor","Brief":"Create a histogram from the output of the `diff` command.","MdText":"# diffstat\n\n\u003e Create a histogram from the output of the `diff` command.\n\n- Display changes in a histogram:\n\n`diff {{file1}} {{file2}} | diffstat`\n\n- Display inserted, deleted and modified changes as a table:\n\n`diff {{file1}} {{file2}} | diffstat -t`\n"},"dig":{"Platform":"all","Class":"system man","Brief":"DNS Lookup utility.","MdText":"# dig\n\n\u003e DNS Lookup utility.\n\n- Lookup the IP(s) associated with a hostname (A records):\n\n`dig +short {{hostname.com}}`\n\n- Lookup the mail server(s) associated with a given domain name (MX record):\n\n`dig +short {{hostname.com}} MX`\n\n- Get all types of records for a given domain name:\n\n`dig {{hostname.com}} ANY`\n\n- Specify an alternate DNS server to query:\n\n`dig @{{8.8.8.8}} {{hostname.com}}`\n\n- Perform a reverse DNS lookup on an IP address (PTR record):\n\n`dig -x {{8.8.8.8}}`\n\n- Find authoritative name servers for the zone and display SOA records:\n\n`dig +nssearch {{hostname.com}}`\n\n- Perform iterative queries and display the entire trace path to resolve a domain name:\n\n`dig +trace {{hostname.com}}`\n"},"dirs":{"Platform":"all","Class":"system man","Brief":"Displays or manipulates the directory stack.","MdText":"# dirs\n\n\u003e Displays or manipulates the directory stack.\n\u003e The directory stack is a list of recently visited directories that can be manipulated with the `pushd` and `popd` commands.\n\n- Display the directory stack with a space between each entry:\n\n`dirs`\n\n- Display the directory stack with one entry per line:\n\n`dirs -p`\n\n- Display only the nth entry in the directory stack, starting at 0:\n\n`dirs +{{N}}`\n\n- Clear the directory stack:\n\n`dirs -c`\n"},"docker-compose":{"Platform":"all","Class":"other cmds","Brief":"Run and manage multi container docker applications.","MdText":"# docker-compose\n\n\u003e Run and manage multi container docker applications.\n\u003e Homepage: \u003chttps://docs.docker.com/compose/reference/overview/\u003e.\n\n- Create and start all containers in the background using a `docker-compose.yml` file from the current directory:\n\n`docker-compose up -d`\n\n- Start all containers, rebuild if necessary:\n\n`docker-compose up --build`\n\n- Start all containers using an alternate compose file:\n\n`docker-compose --file {{path/to/file}} up`\n\n- Stop all running containers:\n\n`docker-compose stop`\n\n- Stop and remove all containers, networks, images, and volumes:\n\n`docker-compose down`\n\n- Follow logs for all containers:\n\n`docker-compose logs --follow`\n"},"dokku":{"Platform":"all","Class":"other cmds","Brief":"Docker powered mini-Heroku (PaaS).","MdText":"# dokku\n\n\u003e Docker powered mini-Heroku (PaaS).\n\u003e Easily deploy multiple apps to your server in different languages using a single `git-push` command.\n\n- List runinng apps:\n\n`dokku apps`\n\n- Create an app:\n\n`dokku apps:create {{app_name}}`\n\n- Remove an app:\n\n`dokku apps:destroy {{app_name}}`\n\n- Install plugin:\n\n`dokku plugin:install {{full_repo_url}}`\n\n- Link database to an app:\n\n`dokku {{db}}:link {{db_name}} {{app_name}}`\n"},"dot":{"Platform":"all","Class":"other cmds","Brief":"A command-line tool to produce layered drawings of directed graphs.","MdText":"# dot\n\n\u003e A command-line tool to produce layered drawings of directed graphs.\n\n- Render an image file and determine output filename based on input filename and selected format:\n\n`dot -Tpng -O {{path/to/file.dot}}`\n\n- Create an SVG from DOT file:\n\n`dot -Tsvg -o {{path/to/out_file.svg}} {{path/to/file.dot}}`\n"},"dotnet":{"Platform":"all","Class":"other cmds","Brief":"Cross platform .NET command line tools for .NET Core.","MdText":"# dotnet\n\n\u003e Cross platform .NET command line tools for .NET Core.\n\n- Initialize a new .NET project:\n\n`dotnet new {{template_short_name}}`\n\n- Restore nuget packages:\n\n`dotnet restore`\n\n- Build and execute the .NET project in the current directory:\n\n`dotnet run`\n\n- Run a packaged dotnet application (only needs the runtime, the rest of the commands require the .NET Core SDK installed):\n\n`dotnet {{path/to/application.dll}}`\n"},"doxygen":{"Platform":"all","Class":"file editor","Brief":"A documentation system for various programming languages.","MdText":"# doxygen\n\n\u003e A documentation system for various programming languages.\n\n- Generate a default template configuration file \"Doxyfile\":\n\n`doxygen -g`\n\n- Generate a template configuration file:\n\n`doxygen -g {{path/to/config_file}}`\n\n- Generate documentation using an existing configuration file:\n\n`doxygen {{path/to/config_file}}`\n"},"drill":{"Platform":"all","Class":"system settings","Brief":"Perform various DNS queries.","MdText":"# drill\n\n\u003e Perform various DNS queries.\n\n- Lookup the IP(s) associated with a hostname (A records):\n\n`drill {{hostname.com}}`\n\n- Lookup the mail server(s) associated with a given domain name (MX record):\n\n`drill mx {{hostname.com}}`\n\n- Get all types of records for a given domain name:\n\n`drill any {{hostname.com}}`\n\n- Specify an alternate DNS server to query:\n\n`drill {{hostname.com}} @{{8.8.8.8}}`\n\n- Perform a reverse DNS lookup on an IP address (PTR record):\n\n`drill -x {{8.8.8.8}}`\n\n- Perform DNSSEC trace from root servers down to a domain name:\n\n`drill -TD {{hostname.com}}`\n\n- Show DNSKEY record(s) for a domain name:\n\n`drill -s dnskey {{hostname.com}}`\n"},"drush":{"Platform":"all","Class":"system man","Brief":"A command-line shell and scripting interface for Drupal.","MdText":"# drush\n\n\u003e A command-line shell and scripting interface for Drupal.\n\n- Download module \"foo\":\n\n`drush dl {{foo}}`\n\n- Download version 7.x-2.1-beta1 of module \"foo\":\n\n`drush dl {{foo}}-7.x-2.1-beta1`\n\n- Enable module \"foo\":\n\n`drush en {{foo}}`\n\n- Disable module \"foo\":\n\n`drush dis {{foo}}`\n\n- Clear all caches:\n\n`drush cc all`\n\n- Clear CSS and JavaScript caches:\n\n`drush cc css-js`\n"},"echo":{"Platform":"all","Class":"other cmds","Brief":"Print given arguments.","MdText":"# echo\n\n\u003e Print given arguments.\n\n- Print a text message. Note: quotes are optional:\n\n`echo {{\"Hello World\"}}`\n\n- Print a message with environment variables:\n\n`echo {{\"My path is $PATH\"}}`\n\n- Print a message without the trailing newline:\n\n`echo -n {{\"Hello World\"}}`\n\n- Enable interpretation of backslash escapes (special characters):\n\n`echo -e {{\"Column 1\\tColumn 2\"}}`\n"},"electrum":{"Platform":"all","Class":"other cmds","Brief":"Ergonomic Bitcoin wallet and private key management.","MdText":"# electrum\n\n\u003e Ergonomic Bitcoin wallet and private key management.\n\n- Create a new wallet:\n\n`electrum -w {{new_wallet.dat}} create`\n\n- Restore an existing wallet from seed offline:\n\n`electrum -w {{recovery_wallet.dat}} restore -o`\n\n- Create a signed transaction offline:\n\n`electrum mktx {{recipient}} {{amount}} -f 0.0000001 -F {{from}} -o`\n\n- Display all wallet receiving addresses:\n\n`electrum listaddresses -a`\n\n- Sign a message:\n\n`electrum signmessage {{address}} {{message}}`\n\n- Verify a message:\n\n`electrum verifymessage {{address}} {{signature}} {{message}}`\n\n- Connect only to a specific electrum-server instance:\n\n`electrum -p socks5:{{127.0.0.1}}:9050 -s {{56ckl5obj37gypcu.onion}}:50001:t -1`\n"},"elinks":{"Platform":"all","Class":"file editor","Brief":"A text based browser similar to lynx.","MdText":"# elinks\n\n\u003e A text based browser similar to lynx.\n\n- Start elinks:\n\n`elinks`\n\n- Quit elinks:\n\n`Ctrl + C`\n\n- Dump output of webpage to console, colorizing the text with ANSI control codes:\n\n`elinks -dump -dump-color-mode {{1}} {{url}}`\n"},"elm":{"Platform":"all","Class":"file editor","Brief":"Compile and run Elm source files.","MdText":"# elm\n\n\u003e Compile and run Elm source files.\n\n- Initialize an Elm project, generates an elm.json file:\n\n`elm init`\n\n- Start interactive Elm shell:\n\n`elm repl`\n\n- Compile an Elm file, output the result to an index.html file:\n\n`elm make {{source}}`\n\n- Compile an Elm file, output the result to a Javascript file:\n\n`elm make {{source}} --output={{destination}}.js`\n\n- Start local web server that compiles Elm files on page load:\n\n`elm reactor`\n\n- Install Elm package from https://package.elm-lang.org:\n\n`elm install {{author}}/{{package}}`\n"},"emacs":{"Platform":"all","Class":"file editor","Brief":"The extensible, customizable, self-documenting, real-time display editor.","MdText":"# emacs\n\n\u003e The extensible, customizable, self-documenting, real-time display editor.\n\n- Open emacs in console mode (without X window):\n\n`emacs -nw`\n\n- Open a file in emacs:\n\n`emacs {{filename}}`\n\n- Exit emacs:\n\n`C-x C-c`\n"},"emacsclient":{"Platform":"all","Class":"file editor","Brief":"Open files in an existing emacs server.","MdText":"# emacsclient\n\n\u003e Open files in an existing emacs server.\n\n- Open files in an existing Emacs server (using GUI if available):\n\n`emacsclient {{filename}}`\n\n- Open file in console mode (without X window):\n\n`emacsclient -nw {{filename}}`\n\n- Open a file in an existing emacs frame and return immediately:\n\n`emacsclient -n {{filename}}`\n"},"ember":{"Platform":"all","Class":"other cmds","Brief":"The Ember.js command line utility.","MdText":"# ember\n\n\u003e The Ember.js command line utility.\n\u003e Used for creating and maintaining Ember.js applications.\n\n- Create a new Ember application:\n\n`ember new {{my_new_app}}`\n\n- Create a new Ember addon:\n\n`ember addon {{my_new_addon}}`\n\n- Build the project:\n\n`ember build`\n\n- Build the project in production mode:\n\n`ember build -prod`\n\n- Run the development server:\n\n`ember serve`\n\n- Run the test suite:\n\n`ember test`\n\n- Run a blueprint to generate something like a route or component:\n\n`ember generate {{type}} {{name}}`\n\n- Install an ember-cli addon:\n\n`ember install {{name_of_addon}}`\n"},"enca":{"Platform":"all","Class":"file editor","Brief":"Detect and convert encoding of text files.","MdText":"# enca\n\n\u003e Detect and convert encoding of text files.\n\n- Detect file(s) encoding according to your system's locale:\n\n`enca {{file(s)}}`\n\n- Detect file(s) encoding; -L option tells enca the current language; language is in the POSIX/C locale format, e.g. zh_CN, en_US etc:\n\n`enca -L {{language}} {{file(s)}}`\n\n- Convert file(s) to specified encoding:\n\n`enca -L {{language}} -x {{to_encoding}} {{file(s)}}`\n\n- Save original_file as new_file and convert new_file to specified encoding:\n\n`enca -L {{language}} -x {{to_encoding}} \u003c {{original_file}} \u003e {{new_file}}`\n"},"env":{"Platform":"all","Class":"system settings","Brief":"Show the environment or run a program in a modified environment.","MdText":"# env\n\n\u003e Show the environment or run a program in a modified environment.\n\n- Show the environment:\n\n`env`\n\n- Run a program. Often used in scripts after the shebang (#!) for looking up the path to the program:\n\n`env {{program}}`\n\n- Clear the environment and run a program:\n\n`env -i {{program}}`\n\n- Remove variable from the environment and run a program:\n\n`env -u {{variable}} {{program}}`\n\n- Set a variable and run a program:\n\n`env {{variable}}={{value}} {{program}}`\n"},"espeak":{"Platform":"all","Class":"other cmds","Brief":"Uses text-to-speech to speak through the default sound device.","MdText":"# espeak\n\n\u003e Uses text-to-speech to speak through the default sound device.\n\n- Speak a phrase aloud:\n\n`espeak \"I like to ride my bike.\"`\n\n- Speak a file aloud:\n\n`espeak -f {{filename}}`\n\n- Save output to a WAV audio file, rather than speaking it directly:\n\n`espeak -w {{filename.wav}} \"It's GNU plus Linux\"`\n\n- Use a different voice:\n\n`espeak -v {{voice}}`\n"},"exa":{"Platform":"all","Class":"file man","Brief":"A modern replacement for `ls` (List directory contents).","MdText":"# exa\n\n\u003e A modern replacement for `ls` (List directory contents).\n\n- List files one per line:\n\n`exa --oneline`\n\n- List all files, including hidden files:\n\n`exa --all`\n\n- Long format list (permissions, ownership, size and modification date) of all files:\n\n`exa --long --all`\n\n- List files with the largest at the top:\n\n`exa --reverse --sort={{size}}`\n\n- Display a tree of files, three levels deep:\n\n`exa --long --tree --level={{3}}`\n\n- List files sorted by modification date (oldest first):\n\n`exa --long --sort={{modified}}`\n"},"exiftool":{"Platform":"all","Class":"file editor","Brief":"Read and write meta information in files.","MdText":"# exiftool\n\n\u003e Read and write meta information in files.\n\n- Remove all EXIF metadata from the given files:\n\n`exiftool -All= {{file}}`\n\n- Increase time photo taken by 1 hour in directory:\n\n`exiftool \"-AllDates+=0:0:0 1:0:0\" {{directory}}`\n\n- Decrease time photo taken by 1 day and 2 hours on JPEGs only:\n\n`exiftool \"-AllDates-=0:0:1 2:0:0\" -ext jpg`\n\n- Change only DateTimeOriginal by -1.5 hours \u0026 do not keep backups:\n\n`exiftool -DateTimeOriginal-=1.5 -overwrite_original`\n\n- Rename all JPEGs according to a DateTimeOriginal recursively:\n\n`exiftool '-filename\u003cDateTimeOriginal' -d %Y-%m-%d_%H-%M-%S%%lc.%%e {{directory}} -r -ext jpg`\n"},"expand":{"Platform":"all","Class":"file editor","Brief":"Convert tabs to spaces.","MdText":"# expand\n\n\u003e Convert tabs to spaces.\n\n- Convert tabs in each file to spaces, writing to standard output:\n\n`expand {{file}}`\n\n- Convert tabs to spaces, reading from standard input:\n\n`expand`\n\n- Do not convert tabs after non blanks:\n\n`expand -i {{file}}`\n\n- Have tabs a certain number of characters apart, not 8:\n\n`expand -t={{number}} {{file}}`\n\n- Use comma separated list of explicit tab positions:\n\n`expand -t={{list}}`\n"},"factor":{"Platform":"all","Class":"other cmds","Brief":"Prints the prime factorization of a number.","MdText":"# factor\n\n\u003e Prints the prime factorization of a number.\n\n- Display the prime-factorization of a number:\n\n`factor {{number}}`\n\n- Take the input from stdin if no argument is specified:\n\n`echo {{number}} | factor`\n"},"false":{"Platform":"all","Class":"other cmds","Brief":"Returns an exit code of 1.","MdText":"# false\n\n\u003e Returns an exit code of 1.\n\n- Return an exit code of 1:\n\n`false`\n"},"fastboot":{"Platform":"all","Class":"other cmds","Brief":"Communicate with connected Android devices when in bootloader mode (the one place `adb` doesn't work).","MdText":"# fastboot\n\n\u003e Communicate with connected Android devices when in bootloader mode (the one place `adb` doesn't work).\n\n- Unlock the bootloader:\n\n`fastboot oem unlock`\n\n- Relock the bootloader:\n\n`fastboot oem lock`\n\n- Reboot the device from fastboot mode into fastboot mode again:\n\n`fastboot reboot bootloader`\n\n- Flash a given image:\n\n`fastboot flash {{file.zip}}`\n\n- Flash a custom recovery image:\n\n`fastboot flash recovery {{file.img}}`\n\n- Display connected devices:\n\n`fastboot devices`\n"},"fd":{"Platform":"all","Class":"file man","Brief":"A simple, fast and user-friendly alternative to `find`.","MdText":"# fd\n\n\u003e A simple, fast and user-friendly alternative to `find`.\n\n- Find files matching the given pattern in the current directory:\n\n`fd {{pattern}}`\n\n- Find files that begin with \"foo\":\n\n`fd {{'^foo'}}`\n\n- Find files with a specific extension:\n\n`fd --extension {{txt}}`\n\n- Find files in a specific directory:\n\n`fd {{pattern}} {{path/to/dir}}`\n\n- Include ignored and hidden files in the search:\n\n`fd --hidden --no-ignore {{pattern}}`\n"},"fdupes":{"Platform":"all","Class":"file man","Brief":"Finds duplicate files in a given set of directories.","MdText":"# fdupes\n\n\u003e Finds duplicate files in a given set of directories.\n\n- Search a single directory:\n\n`fdupes {{directory}}`\n\n- Search multiple directories:\n\n`fdupes {{directory1}} {{directory2}}`\n\n- Search all directories recursively:\n\n`fdupes -r {{directory}}`\n\n- Search multiple directories, one recursively:\n\n`fdupes {{directory1}} -R {{directory2}}`\n"},"ffprobe":{"Platform":"all","Class":"file trans","Brief":"Multimedia stream analyzer.","MdText":"# ffprobe\n\n\u003e Multimedia stream analyzer.\n\n- Display all available stream info for a media file:\n\n`ffprobe -v error -show_entries {{input.mp4}}`\n\n- Display media duration:\n\n`ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}`\n\n- Display the frame rate of a video:\n\n`ffprobe -v error -select_streams v:0 -show_entries stream=avg_frame_rate -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}`\n\n- Display the width or height of a video:\n\n`ffprobe -v error -select_streams v:0 -show_entries stream={{width|height}} -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}`\n\n- Display the average bit rate of a video:\n\n`ffprobe -v error -select_streams v:0 -show_entries stream=bit_rate -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}`\n"},"fg":{"Platform":"all","Class":"system man","Brief":"Run jobs in foreground.","MdText":"# fg\n\n\u003e Run jobs in foreground.\n\n- Bring most recently suspended background job to foreground:\n\n`fg`\n\n- Bring a specific job to foreground:\n\n`fg {{job_id}}`\n"},"find":{"Platform":"all","Class":"file man","Brief":"Find files or directories under the given directory tree, recursively.","MdText":"# find\n\n\u003e Find files or directories under the given directory tree, recursively.\n\n- Find files by extension:\n\n`find {{root_path}} -name '{{*.ext}}'`\n\n- Find files by matching multiple patterns:\n\n`find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'`\n\n- Find directories matching a given name:\n\n`find {{root_path}} -type d -name {{*lib*}}`\n\n- Find files matching path pattern:\n\n`find {{root_path}} -path '{{**/lib/**/*.ext}}'`\n\n- Run a command for each file, use {} within the command to access the filename:\n\n`find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;`\n\n- Find files modified in the last 24-hour period:\n\n`find {{root_path}} -mtime {{-1}}`\n\n- Find files using case insensitive name matching, of a certain size:\n\n`find {{root_path}} -size {{+500k}} -size {{-10M}} -iname '{{*.TaR.gZ}}'`\n\n- Delete files by name, older than 180 days:\n\n`find {{root_path}} -name '{{*.ext}}' -mtime {{+180}} -delete`\n\n- Find files matching a given pattern, while excluding specific paths:\n\n`find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'`\n"},"finger":{"Platform":"all","Class":"file man","Brief":"User information lookup program.","MdText":"# finger\n\n\u003e User information lookup program.\n\n- Display information about currently logged in users:\n\n`finger`\n\n- Display information about a specific user:\n\n`finger {{username}}`\n\n- Display the user's login name, real name, terminal name, and other information:\n\n`finger -s`\n\n- Produce multi-line output format displaying same information as `-s` as well as user's home directory, home phone number, login shell, mail status, etc.:\n\n`finger -l`\n\n- Prevent matching against user's names and only use login names:\n\n`finger -m`\n"},"fish":{"Platform":"all","Class":"system man","Brief":"The Friendly Interactive SHell.","MdText":"# fish\n\n\u003e The Friendly Interactive SHell.\n\u003e A command-line interpreter designed to be user friendly.\n\n- Start interactive shell:\n\n`fish`\n\n- Execute a command:\n\n`fish -c \"{{command}}\"`\n\n- Run commands from a file:\n\n`fish {{file.fish}}`\n\n- Check a file for syntax errors:\n\n`fish --no-execute {{file.fish}}`\n\n- Display version information and exit:\n\n`fish --version`\n"},"fkill":{"Platform":"all","Class":"system man","Brief":"Fabulously kill processes. Cross-platform.","MdText":"# fkill\n\n\u003e Fabulously kill processes. Cross-platform.\n\n- Run without arguments to use the interactive interface:\n\n`fkill`\n\n- Kill the process by pid, name or port:\n\n`fkill {{pid|name|:port}}`\n"},"flac":{"Platform":"all","Class":"other cmds","Brief":"Encodes, decodes and tests flac files.","MdText":"# flac\n\n\u003e Encodes, decodes and tests flac files.\n\n- Encode a wav file to flac (this will create a flac file in the same location as the wav file):\n\n`flac {{path/to/file.wav}}`\n\n- Encode a wav file to flac, specifying the output file:\n\n`flac -o {{path/to/output.flac}} {{path/to/file.wav}}`\n\n- Decode a flac file to wav, specifying the output file:\n\n`flac -d -o {{path/to/output.wav}} {{path/to/file.flac}}`\n\n- Test a flac file for the correct encoding:\n\n`flac -t {{path/to/file.flac}}`\n"},"flutter":{"Platform":"all","Class":"other cmds","Brief":"Google's free, open source, and cross-platform mobile app SDK.","MdText":"# flutter\n\n\u003e Google's free, open source, and cross-platform mobile app SDK.\n\n- Check the Flutter version:\n\n`flutter --version`\n\n- Display general help:\n\n`flutter help`\n\n- Display help about a specific command:\n\n`flutter help {{command}}`\n\n- Execute a Flutter command:\n\n`flutter {{command}}`\n\n- Show information about the installed tooling:\n\n`flutter doctor`\n"},"fmt":{"Platform":"all","Class":"file editor","Brief":"Reformat a text file by joining its paragraphs and limiting the line width to given number of characters (75 by default).","MdText":"# fmt\n\n\u003e Reformat a text file by joining its paragraphs and limiting the line width to given number of characters (75 by default).\n\n- Reformat a file:\n\n`fmt {{path/to/file}}`\n\n- Reformat a file producing output lines of (at most) `n` characters:\n\n`fmt -w {{n}} {{path/to/file}}`\n\n- Reformat a file without joining lines shorter than the given width together:\n\n`fmt -s {{path/to/file}}`\n\n- Reformat a file with uniform spacing (1 space between words and 2 spaces between paragraphs):\n\n`fmt -u {{path/to/file}}`\n"},"forever":{"Platform":"all","Class":"other cmds","Brief":"Server-side JavaScript application that makes sure Node.js applications run indefinitely (restarts after exit).","MdText":"# forever\n\n\u003e Server-side JavaScript application that makes sure Node.js applications run indefinitely (restarts after exit).\n\n- Start running a file forever (as a daemon):\n\n`forever {{script}}`\n\n- List running \"forever\" processes (along with IDs and other details of \"forever\" processes):\n\n`forever list`\n\n- Stop a running \"forever\" process:\n\n`forever stop {{ID|pid|script}}`\n"},"fortune":{"Platform":"all","Class":"other cmds","Brief":"Print a random quotation (fortune-cookie style).","MdText":"# fortune\n\n\u003e Print a random quotation (fortune-cookie style).\n\n- Print a quotation:\n\n`fortune`\n\n- Print an offensive quotation:\n\n`fortune -o`\n\n- Print a long quotation:\n\n`fortune -l`\n\n- Print a short quotation:\n\n`fortune -s`\n\n- List the available quotation database files:\n\n`fortune -f`\n\n- Print a quotation from one of the database files listed by `fortune -f`:\n\n`fortune {{filename}}`\n"},"fossa":{"Platform":"all","Class":"other cmds","Brief":"CLI for the Fossa service - Generate realtime license audits, vulnerability scans and reports about dependencies licenses.","MdText":"# fossa\n\n\u003e CLI for the Fossa service - Generate realtime license audits, vulnerability scans and reports about dependencies licenses.\n\u003e Homepage: \u003chttps://github.com/fossas/fossa-cli\u003e.\n\n- Initialize a `.fossa.yml` configuration file:\n\n`fossa init`\n\n- Run a default project build:\n\n`fossa build`\n\n- Analyze built dependencies:\n\n`fossa analyze`\n\n- Generate reports:\n\n`fossa report`\n\n- Test current revision against the FOSSA scan status and exit with errors if issues are found:\n\n`fossa test`\n"},"fping":{"Platform":"all","Class":"network comm","Brief":"A more powerful ping which can ping multiple hosts.","MdText":"# fping\n\n\u003e A more powerful ping which can ping multiple hosts.\n\n- List alive hosts within a subnet generated from a netmask:\n\n`fping -a -g 192.168.1.0/24`\n\n- List alive hosts within a subnet generated from an IP range:\n\n`fping -a -g 192.168.1.1 192.168.1.254`\n\n- List unreachable hosts within a subnet generated from a netmask:\n\n`fping -u -g 192.168.1.0/24`\n"},"fswatch":{"Platform":"all","Class":"file man","Brief":"A cross-platform file change monitor.","MdText":"# fswatch\n\n\u003e A cross-platform file change monitor.\n\n- Run a bash command on file creation, update or deletion:\n\n`fswatch {{path/to/file}} | xargs -n 1 {{bash_command}}`\n\n- Watch one or more files and/or directories:\n\n`fswatch {{path/to/file}} {{path/to/directory}} {{path/to/another_directory/**/*.js}} | xargs -n 1 {{bash_command}}`\n\n- Print the absolute paths of the changed files:\n\n`fswatch {{path/to/directory}} | xargs -n 1 -I {} echo {}`\n\n- Filter by event type, eg. Updated, Deleted or Created:\n\n`fswatch --event {{Updated}} {{path/to/directory}} | xargs -n 1 {{bash_command}}`\n"},"ftp":{"Platform":"all","Class":"network comm","Brief":"Tools to interact with a server via File Transfer Protocol.","MdText":"# ftp\n\n\u003e Tools to interact with a server via File Transfer Protocol.\n\n- Connect to an FTP server:\n\n`ftp {{ftp.example.com}}`\n\n- Switch to binary transfer mode (graphics, compressed files, etc):\n\n`binary`\n\n- Transfer multiple files without prompting for confirmation on every file:\n\n`prompt off`\n\n- Download multiple files (glob expression):\n\n`mget {{*.png}}`\n\n- Upload multiple files (glob expression):\n\n`mput {{*.zip}}`\n\n- Delete multiple files on the remote server:\n\n`mdelete {{*.txt}}`\n\n- Rename a file on the remote server:\n\n`rename {{original_filename}} {{new_filename}}`\n"},"g++":{"Platform":"all","Class":"other cmds","Brief":"Compiles C++ source files.","MdText":"# gplusplus\n\n\u003e Compiles C++ source files.\n\u003e Part of GCC (GNU Compiler Collection).\n\n- Compile a source code file into an executable binary:\n\n`g++ {{source.cpp}} -o {{output_executable}}`\n\n- Display (almost) all errors and warnings:\n\n`g++ {{source.cpp}} -Wall -o {{output_executable}}`\n\n- Choose a language standard to compile for(C++98/C++11/C++14/C++17):\n\n`g++ {{source.cpp}} -std={{language_standard}} -o {{output_executable}}`\n\n- Include libraries located at a different path than the source file:\n\n`g++ {{source.cpp}} -o {{output_executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}`\n"},"gcal":{"Platform":"all","Class":"other cmds","Brief":"Displays calendar.","MdText":"# gcal\n\n\u003e Displays calendar.\n\n- Display calendar for the current month:\n\n`gcal`\n\n- Display calendar for the month of February of the year 2010:\n\n`gcal {{2}} {{2010}}`\n\n- Provide calendar sheet with week numbers:\n\n`gcal --with-week-number`\n\n- Change starting day of week to 1st day of the week (Monday):\n\n`gcal --starting-day={{1}}`\n\n- Display the previous, current and next month surrounding today:\n\n`gcal .`\n"},"gcc":{"Platform":"all","Class":"other cmds","Brief":"Preprocesses and compiles C and C++ source files, then assembles and links them together.","MdText":"# gcc\n\n\u003e Preprocesses and compiles C and C++ source files, then assembles and links them together.\n\n- Compile multiple source files into executable:\n\n`gcc {{source1.c}} {{source2.c}} -o {{executable}}`\n\n- Allow warnings, debug symbols in output:\n\n`gcc {{source.c}} -Wall -Og -o {{executable}}`\n\n- Include libraries from a different path:\n\n`gcc {{source.c}} -o {{executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}`\n\n- Compile source code into Assembler instructions:\n\n`gcc -S {{source.c}}`\n\n- Compile source code without linking:\n\n`gcc -c {{source.c}}`\n"},"gdb":{"Platform":"all","Class":"other cmds","Brief":"The GNU Debugger.","MdText":"# gdb\n\n\u003e The GNU Debugger.\n\n- Debug an executable:\n\n`gdb {{executable}}`\n\n- Attach a process to gdb:\n\n`gdb -p {{procID}}`\n\n- Execute given GDB commands upon start:\n\n`gdb -ex \"{{commands}}\" {{executable}}`\n\n- Start gdb and pass arguments:\n\n`gdb --args {{executable}} {{argument1}} {{argument2}}`\n"},"gdrive":{"Platform":"all","Class":"other cmds","Brief":"Command line tool to interact with Google Drive.","MdText":"# gdrive\n\n\u003e Command line tool to interact with Google Drive.\n\u003e Folder/file id can be obtained from the Google Drive folder or id url.\n\n- Upload a local path to the parent folder with the specified id:\n\n`gdrive upload -p {{id}} {{path/to/file_or_folder}}`\n\n- Download file or directory by id to current directory:\n\n`gdrive download {{id}}`\n\n- Download to a given local path by its id:\n\n`gdrive download --path {{path/to/folder}} {{id}}`\n\n- Create a new revision of an id using a given file or folder:\n\n`gdrive update {{id}} {{path/to/file_or_folder}}`\n"},"gem":{"Platform":"all","Class":"other cmds","Brief":"Interact with the package manager for the Ruby programming language.","MdText":"# gem\n\n\u003e Interact with the package manager for the Ruby programming language.\n\n- Install latest version of a gem:\n\n`gem install {{gemname}}`\n\n- Install specific version of a gem:\n\n`gem install {{gemname}} -v {{1.0.0}}`\n\n- Update a gem:\n\n`gem update {{gemname}}`\n\n- List all gems:\n\n`gem list`\n\n- Uninstall a gem:\n\n`gem uninstall {{gemname}}`\n"},"geth":{"Platform":"all","Class":"other cmds","Brief":"The go-ethereum command line interface.","MdText":"# geth\n\n\u003e The go-ethereum command line interface.\n\n- Connect to the main Ethereum network and automatically download the full node:\n\n`geth`\n\n- Connect to the Ropsten test network:\n\n`geth --testnet`\n\n- Create a new account:\n\n`geth account new`\n\n- Enable mining:\n\n`geth --mine`\n"},"gibo":{"Platform":"all","Class":"other cmds","Brief":"Fetch gitignore boilerplates.","MdText":"# gibo\n\n\u003e Fetch gitignore boilerplates.\n\n- List available boilerplates:\n\n`gibo list`\n\n- Write a boilerplate to stdout:\n\n`gibo dump {{boilerplate}}`\n\n- Write a boilerplate to .gitignore:\n\n`gibo dump {{boilerplate}} \u003e\u003e{{.gitignore}}`\n\n- Search for boilerplates containing a given string:\n\n`gibo search {{string}}`\n\n- Update available local boilerplates:\n\n`gibo update`\n"},"git-am":{"Platform":"all","Class":"other cmds","Brief":"Apply patch files. Useful when receiving commits via email.","MdText":"# git am\n\n\u003e Apply patch files. Useful when receiving commits via email.\n\u003e See also `git format-patch`, which can generate patch files.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-am\u003e.\n\n- Apply a patch file:\n\n`git am {{path/to/file.patch}}`\n\n- Abort the process of applying a patch file:\n\n`git am --abort`\n\n- Apply as much of a patch file as possible, saving failed hunks to reject files:\n\n`git am --reject {{path/to/file.patch}}`\n"},"git-bisect":{"Platform":"all","Class":"other cmds","Brief":"Use binary search to find the commit that introduced a bug.","MdText":"# git bisect\n\n\u003e Use binary search to find the commit that introduced a bug.\n\u003e Git automatically jumps back and forth in the commit graph to progressively narrow down the faulty commit.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-bisect\u003e.\n\n- Start a bisect session on a commit range bounded by a known buggy commit, and a known clean (typically older) one:\n\n`git bisect start {{bad_commit}} {{good_commit}}`\n\n- For each commit that `git bisect` selects, mark it as \"bad\" or \"good\" after testing it for the issue:\n\n`git bisect {{good|bad}}`\n\n- After `git bisect` pinpoints the faulty commit, end the bisect session and return to the previous branch:\n\n`git bisect reset`\n\n- Skip a commit during a bisect (e.g. one that fails the tests due to a different issue):\n\n`git bisect skip`\n"},"git-blame":{"Platform":"all","Class":"other cmds","Brief":"Show commit hash and last author on each line of a file.","MdText":"# git blame\n\n\u003e Show commit hash and last author on each line of a file.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-blame\u003e.\n\n- Print file with author name and commit hash on each line:\n\n`git blame {{file}}`\n\n- Print file with author email and commit hash on each line:\n\n`git blame -e {{file}}`\n"},"git-branch":{"Platform":"all","Class":"other cmds","Brief":"Main git command for working with branches.","MdText":"# git branch\n\n\u003e Main git command for working with branches.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-branch\u003e.\n\n- List local branches. The current branch is highlighted by `*`:\n\n`git branch`\n\n- List all branches (local and remote):\n\n`git branch -a`\n\n- Create new branch based on the current commit:\n\n`git branch {{branch_name}}`\n\n- Create new branch based on a specific commit:\n\n`git branch {{branch_name}} {{commit_hash}}`\n\n- Rename a branch (must not have it checked out to do this):\n\n`git branch -m {{old_branch_name}} {{new_branch_name}}`\n\n- Delete a local branch (must not have it checked out to do this):\n\n`git branch -d {{branch_name}}`\n"},"git-checkout":{"Platform":"all","Class":"other cmds","Brief":"Checkout a branch or paths to the working tree.","MdText":"# git checkout\n\n\u003e Checkout a branch or paths to the working tree.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-checkout\u003e.\n\n- Create and switch to a new branch:\n\n`git checkout -b {{branch_name}}`\n\n- Create and switch to a new branch based on a specific reference (branch, remote/branch, tag are examples of valid references):\n\n`git checkout -b {{branch_name}} {{reference}}`\n\n- Switch to an existing local branch:\n\n`git checkout {{branch_name}}`\n\n- Switch to an existing remote branch:\n\n`git checkout --track {{remote_name}}/{{branch_name}}`\n\n- Discard all unstaged changes in the current directory (see `git reset` for more undo-like commands):\n\n`git checkout .`\n\n- Discard unstaged changes to a given file:\n\n`git checkout {{file_name}}`\n\n- Replace a file in the current directory with the version of it committed in a given branch:\n\n`git checkout {{branch_name}} -- {{file_name}}`\n"},"git-cherry-pick":{"Platform":"all","Class":"other cmds","Brief":"Apply the changes introduced by existing commits to the current branch.","MdText":"# git cherry-pick\n\n\u003e Apply the changes introduced by existing commits to the current branch.\n\u003e To apply changes to another branch, first use git-checkout to switch to the desired branch.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-cherry-pick\u003e.\n\n- Apply a commit to the current branch:\n\n`git cherry-pick {{commit}}`\n\n- Apply a range of commits to the current branch (see also `git rebase --onto`):\n\n`git cherry-pick {{start_commit}}~..{{end_commit}}`\n\n- Apply multiple (non-sequential) commits to the current branch:\n\n`git cherry-pick {{commit_1}} {{commit_2}}`\n"},"git-clean":{"Platform":"all","Class":"other cmds","Brief":"Remove untracked files from the working tree.","MdText":"# git clean\n\n\u003e Remove untracked files from the working tree.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-clean\u003e.\n\n- Delete files that are not tracked by git:\n\n`git clean`\n\n- Interactively delete files that are not tracked by git:\n\n`git clean -i`\n\n- Show what files would be deleted without actually deleting them:\n\n`git clean --dry-run`\n\n- Forcefully delete files that are not tracked by git:\n\n`git clean -f`\n\n- Forcefully delete directories that are not tracked by git:\n\n`git clean -fd`\n\n- Delete untracked files, including ignored files in `.gitignore` and `.git/info/exclude`:\n\n`git clean -x`\n"},"git-clone":{"Platform":"all","Class":"other cmds","Brief":"Clone an existing repository.","MdText":"# git clone\n\n\u003e Clone an existing repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-clone\u003e.\n\n- Clone an existing repository:\n\n`git clone {{remote_repository_location}}`\n\n- Clone an existing repository and its submodules:\n\n`git clone --recursive {{remote_repository_location}}`\n\n- For cloning from the local machine:\n\n`git clone -l`\n\n- Do it quietly:\n\n`git clone -q`\n\n- Clone an existing repository, and truncate to the specified number of revisions, save your time mostly:\n\n`git clone --depth {{10}} {{remote_repository_location}}`\n"},"git-diff":{"Platform":"all","Class":"other cmds","Brief":"Show changes to tracked files.","MdText":"# git diff\n\n\u003e Show changes to tracked files.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-diff\u003e.\n\n- Show unstaged, uncommitted changes:\n\n`git diff`\n\n- Show all uncommitted changes (including staged ones):\n\n`git diff HEAD`\n\n- Show only staged (added, but not yet committed) changes:\n\n`git diff --staged`\n\n- Show changes from all commits since a given date/time (a date expression, e.g. \"1 week 2 days\" or an ISO date):\n\n`git diff 'HEAD@{3 months|weeks|days|hours|seconds ago}'`\n\n- Show only names of changed files since a given commit:\n\n`git diff --name-only {{commit}}`\n\n- Output a summary of file creations, renames and mode changes since a given commit:\n\n`git diff --summary {{commit}}`\n\n- Create a patch file:\n\n`git diff \u003e {{target_file}}.patch`\n\n- Compare a single file between two branches or commits:\n\n`git diff {{branch_1}}..{{branch_2}} [--] {{path/to/file}}`\n\n- Compare different files from the current branch to other branch:\n\n`git diff {{branch}}:{{path/to/file2}} {{path/to/file}}`\n"},"git-fetch":{"Platform":"all","Class":"other cmds","Brief":"Download objects and refs from a remote repository.","MdText":"# git fetch\n\n\u003e Download objects and refs from a remote repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-fetch\u003e.\n\n- Fetch the latest changes from the default remote upstream repository (if set):\n\n`git fetch`\n\n- Fetch new branches from a specific remote upstream repository:\n\n`git fetch {{remote_name}}`\n\n- Fetch the latest changes from all remote upstream repositories:\n\n`git fetch --all`\n\n- Also fetch tags from the remote upstream repository:\n\n`git fetch --tags`\n\n- Delete local references to remote branches that have been deleted upstream:\n\n`git fetch --prune`\n"},"git-gc":{"Platform":"all","Class":"other cmds","Brief":"Optimise the local repository by cleaning unnecessary files.","MdText":"# git gc\n\n\u003e Optimise the local repository by cleaning unnecessary files.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-gc\u003e.\n\n- Optimise the repository:\n\n`git gc`\n\n- Aggressively optimise, takes more time:\n\n`git gc --aggressive`\n\n- Do not prune loose objects (prunes by default):\n\n`git gc --no-prune`\n\n- Suppress all output:\n\n`git gc --quiet`\n\n- View full usage:\n\n`git gc --help`\n"},"git-merge":{"Platform":"all","Class":"other cmds","Brief":"Merge branches.","MdText":"# git merge\n\n\u003e Merge branches.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-merge\u003e.\n\n- Merge a branch with your current branch:\n\n`git merge {{branch_name}}`\n\n- Edit the merge message:\n\n`git merge -e {{branch_name}}`\n\n- Merge a branch and create a merge commit:\n\n`git merge --no-ff {{branch_name}}`\n\n- Abort a merge in case of conflicts:\n\n`git merge --abort`\n"},"git-mv":{"Platform":"all","Class":"other cmds","Brief":"Move or rename files and update the git index.","MdText":"# git mv\n\n\u003e Move or rename files and update the git index.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-mv\u003e.\n\n- Move file inside the repo and add the movement to the next commit:\n\n`git mv {{path/to/file}} {{new/path/to/file}}`\n\n- Rename file and add renaming to the next commit:\n\n`git mv {{filename}} {{new_filename}}`\n\n- Overwrite the file in the target path if it exists:\n\n`git mv --force {{file}} {{target}}`\n"},"git-pr":{"Platform":"all","Class":"other cmds","Brief":"Check out GitHub pull requests locally.","MdText":"# git pr\n\n\u003e Check out GitHub pull requests locally.\n\n- Check out a specific pull request:\n\n`git pr {{pr_number}}`\n\n- Check out a pull request for a specific remote:\n\n`git pr {{pr_number}} {{remote}}`\n\n- Check out a pull request from its URL:\n\n`git pr {{url}}`\n\n- Clean up old pull request branches:\n\n`git pr clean`\n"},"git-rebase":{"Platform":"all","Class":"other cmds","Brief":"Reapply commits from one branch on top of another branch.","MdText":"# git rebase\n\n\u003e Reapply commits from one branch on top of another branch.\n\u003e Commonly used to \"move\" an entire branch to another base, creating copies of the commits in the new location.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-rebase\u003e.\n\n- Rebase the current branch on top of the master branch:\n\n`git rebase {{master}}`\n\n- Start an interactive rebase, which allows the commits to be reordered, omitted, combined or modified:\n\n`git rebase -i {{target_base_branch_or_commit_hash}}`\n\n- Continue a rebase that was interrupted by a merge failure, after editing conflicting files:\n\n`git rebase --continue`\n\n- Abort a rebase in progress (e.g. if it is interrupted by a merge conflict):\n\n`git rebase --abort`\n\n- Move part of the current branch onto a new base, providing the old base to start from:\n\n`git rebase --onto {{new_base}} {{old_base}}`\n\n- Reapply the last 5 commits in-place, stopping to allow them to be reordered, omitted, combined or modified:\n\n`git rebase -i {{HEAD~5}}`\n"},"git-reflog":{"Platform":"all","Class":"other cmds","Brief":"Show when the reference logs were updated in local repository.","MdText":"# git reflog\n\n\u003e Show when the reference logs were updated in local repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-reflog\u003e.\n\n- View reflog:\n\n`git reflog`\n\n- View 5 latest entries in reflog:\n\n`git reflog -n {{5}}`\n"},"git-reset":{"Platform":"all","Class":"other cmds","Brief":"Undo commits or unstage changes, by resetting the current git HEAD to the specified state.","MdText":"# git reset\n\n\u003e Undo commits or unstage changes, by resetting the current git HEAD to the specified state.\n\u003e If a path is passed, it works as \"unstage\"; if a commit hash or branch is passed, it works as \"uncommit\".\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-reset\u003e.\n\n- Unstage everything:\n\n`git reset`\n\n- Unstage specific file(s):\n\n`git reset {{path/to/file(s)}}`\n\n- Unstage portions of a file:\n\n`git reset -p {{path/to/file}}`\n\n- Undo the last commit, keeping its changes (and any further uncommitted changes) in the filesystem:\n\n`git reset HEAD~`\n\n- Undo the last two commits, adding their changes to the index, i.e. staged for commit:\n\n`git reset --soft HEAD~2`\n\n- Discard any uncommitted changes, staged or not (for only unstaged changes, use `git checkout`):\n\n`git reset --hard`\n\n- Reset the repository to a given commit, discarding committed, staged and uncommitted changes since then:\n\n`git reset --hard {{commit}}`\n"},"git-rm":{"Platform":"all","Class":"other cmds","Brief":"Remove files from repository index and local filesystem.","MdText":"# git rm\n\n\u003e Remove files from repository index and local filesystem.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-rm\u003e.\n\n- Remove file from repository index and filesystem:\n\n`git rm {{file}}`\n\n- Remove directory:\n\n`git rm -r {{directory}}`\n\n- Remove file from repository index but keep it untouched locally:\n\n`git rm --cached {{file}}`\n"},"git-shortlog":{"Platform":"all","Class":"other cmds","Brief":"Summarizes the `git log` output.","MdText":"# git shortlog\n\n\u003e Summarizes the `git log` output.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-shortlog\u003e.\n\n- View a summary of all the commits made, grouped alphabetically by author name:\n\n`git shortlog`\n\n- View a summary of all the commits made, sorted by the number of commits made:\n\n`git shortlog -n`\n\n- View a summary of all the commits made, grouped by the commiter identities (name and email):\n\n`git shortlog -c`\n\n- View a summary of the last 5 commits (i.e. specify a revision range):\n\n`git shortlog HEAD~{{5}}..HEAD`\n"},"git-stash":{"Platform":"all","Class":"other cmds","Brief":"Stash local Git changes in a temporary area.","MdText":"# git stash\n\n\u003e Stash local Git changes in a temporary area.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-stash\u003e.\n\n- Stash current changes, except new (untracked) files:\n\n`git stash [save {{optional_stash_message}}]`\n\n- Stash current changes, including new (untracked) files:\n\n`git stash -u`\n\n- Interactively select parts of changed files for stashing:\n\n`git stash -p`\n\n- List all stashes (shows stash name, related branch and message):\n\n`git stash list`\n\n- Apply a stash (default is the latest, named stash@{0}):\n\n`git stash apply {{optional_stash_name_or_commit}}`\n\n- Apply a stash (default is stash@{0}), and remove it from the stash list if applying doesn't cause conflicts:\n\n`git stash pop {{optional_stash_name}}`\n\n- Drop a stash (default is stash@{0}):\n\n`git stash drop {{optional_stash_name}}`\n\n- Drop all stashes:\n\n`git stash clear`\n"},"git-status":{"Platform":"all","Class":"other cmds","Brief":"Show the index (changed files).","MdText":"# git status\n\n\u003e Show the index (changed files).\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-status\u003e.\n\n- Show changed files which are not yet added for commit:\n\n`git status`\n\n- Give output in short format:\n\n`git status -s`\n"},"git-tag":{"Platform":"all","Class":"other cmds","Brief":"Create, list, delete or verify tags.","MdText":"# git tag\n\n\u003e Create, list, delete or verify tags.\n\u003e A tag is a static reference to a specific commit.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-tag\u003e.\n\n- List all tags:\n\n`git tag`\n\n- Create a tag with the given name pointing to the current commit:\n\n`git tag {{tag_name}}`\n\n- Create a tag with the given name pointing to a given commit:\n\n`git tag {{tag_name}} {{commit}}`\n\n- Create an annotated tag with the given message:\n\n`git tag {{tag_name}} -m {{tag_message}}`\n\n- Delete the tag with the given name:\n\n`git tag -d {{tag_name}}`\n\n- Get updated tags from upstream:\n\n`git fetch --tags`\n\n- List all tags whose ancestors include a given commit:\n\n`git tag --contains {{commit}}`\n"},"git-worktree":{"Platform":"all","Class":"other cmds","Brief":"Manage multiple working trees attached to the same repository.","MdText":"# git worktree\n\n\u003e Manage multiple working trees attached to the same repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-worktree\u003e.\n\n- Create a new directory with the specified branch checked out into it:\n\n`git worktree add {{path/to/directory}} {{branch}}`\n\n- Create a new directory with a new branch checked out into it:\n\n`git worktree add {{path/to/directory}} -b {{new_branch}}`\n\n- List all the working directories attached to this repository:\n\n`git worktree list`\n\n- Remove a worktree (after deleting worktree directory):\n\n`git worktree prune`\n"},"glances":{"Platform":"all","Class":"system man","Brief":"A cross-platform system monitoring tool.","MdText":"# glances\n\n\u003e A cross-platform system monitoring tool.\n\u003e Homepage: \u003chttps://nicolargo.github.io/glances/\u003e.\n\n- Run in terminal:\n\n`glances`\n\n- Run in web server mode to show results in browser:\n\n`glances -w`\n\n- Run in server mode to allow connections from other Glances clients:\n\n`glances -s`\n\n- Connect to a Glances server:\n\n`glances -c {{hostname}}`\n\n- Require a password in (web) server mode:\n\n`glances -s --password`\n"},"gocryptfs":{"Platform":"all","Class":"other cmds","Brief":"Encrypted overlay filesystem written in Go.","MdText":"# gocryptfs\n\n\u003e Encrypted overlay filesystem written in Go.\n\u003e Homepage: \u003chttps://github.com/rfjakob/gocryptfs\u003e.\n\n- Initialize an encrypted filesystem:\n\n`gocryptfs -init {{path/to/cipher_dir}}`\n\n- Mount an encrypted filesystem:\n\n`gocryptfs {{path/to/cipher_dir}} {{path/to/mount_point}}`\n\n- Mount with the explicit master key instead of password:\n\n`gocryptfs --masterkey {{path/to/cipher_dir}} {{path/to/mount_point}}`\n\n- Change the password:\n\n`gocryptfs --passwd {{path/to/cipher_dir}}`\n\n- Make an encrypted snapshot of a plain directory:\n\n`gocryptfs --reverse {{path/to/plain_dir}} {{path/to/cipher_dir}}`\n"},"godoc":{"Platform":"all","Class":"other cmds","Brief":"Show documentation for go packages.","MdText":"# godoc\n\n\u003e Show documentation for go packages.\n\u003e Homepage: \u003chttps://godoc.org/\u003e.\n\n- Display help for package \"fmt\":\n\n`godoc {{fmt}}`\n\n- Display help for the function \"Printf\" of \"fmt\" package:\n\n`godoc {{fmt}} {{Printf}}`\n\n- Serve documentation as a web server on port \"6060\":\n\n`godoc -http=:{{6060}}`\n\n- Create an index file:\n\n`godoc -write_index -index_files={{path/to/file}}`\n\n- Use the given index file to search the docs:\n\n`godoc -http=:{{6060}} -index -index_files={{path/to/file}}`\n"},"godot":{"Platform":"all","Class":"other cmds","Brief":"An open source 2D and 3D game engine.","MdText":"# godot\n\n\u003e An open source 2D and 3D game engine.\n\u003e Homepage: \u003chttps://godotengine.org/\u003e.\n\n- Run a project if the current directory contains a `project.godot` file, otherwise open the project manager:\n\n`godot`\n\n- Edit a project (the current directory must contain a `project.godot` file):\n\n`godot -e`\n\n- Open the project manager even if the current directory contains a `project.godot` file:\n\n`godot -p`\n\n- Export a project for a given target (the target must be defined in the project):\n\n`godot --export {{target}}`\n\n- Execute a standalone GDScript file:\n\n`godot -s {{script.gd}}`\n"},"gops":{"Platform":"all","Class":"other cmds","Brief":"CLI tool which lists and diagnoses Go processes currently running on your system.","MdText":"# gops\n\n\u003e CLI tool which lists and diagnoses Go processes currently running on your system.\n\u003e Homepage: \u003chttps://github.com/google/gops\u003e.\n\n- Print all go processes running locally:\n\n`gops`\n\n- Print more information about a process:\n\n`gops {{pid}}`\n\n- Display a process tree:\n\n`gops tree`\n\n- Print the current stack trace from a target program:\n\n`gops stack {{pid|addr}}`\n\n- Print the current runtime memory statistics:\n\n`gops memstats {{pid|addr}}`\n"},"gource":{"Platform":"all","Class":"other cmds","Brief":"Renders an animated tree diagram of Git, SVN, Mercurial and Bazaar repositories.","MdText":"# gource\n\n\u003e Renders an animated tree diagram of Git, SVN, Mercurial and Bazaar repositories.\n\u003e It shows files and directories being created, modified or removed over time.\n\n- Run gource in a directory (if it isn't the repository's root directory, the root is sought up from there):\n\n`gource {{path/to/repository}}`\n\n- Run gource in the current directory, with a custom output resolution:\n\n`gource -{{width}}x{{height}}`\n\n- Set a custom time scale for the animation:\n\n`gource -c {{time_scale_multiplier}}`\n\n- Set how long each day should be in the animation (this combines with -c, if provided):\n\n`gource -s {{seconds}}`\n\n- Set fullscreen mode and a custom background color:\n\n`gource -f -b {{hex_color_code}}`\n\n- Set a title for the animation:\n\n`gource --title {{title}}`\n"},"gpg":{"Platform":"all","Class":"other cmds","Brief":"GNU Privacy Guard.","MdText":"# gpg\n\n\u003e GNU Privacy Guard.\n\n- Sign doc.txt without encryption (writes output to doc.txt.asc):\n\n`gpg --clearsign {{doc.txt}}`\n\n- Encrypt doc.txt for alice@example.com (output to doc.txt.gpg):\n\n`gpg --encrypt --recipient {{alice@example.com}} {{doc.txt}}`\n\n- Encrypt doc.txt with only a passphrase (output to doc.txt.gpg):\n\n`gpg --symmetric {{doc.txt}}`\n\n- Decrypt doc.txt.gpg (output to STDOUT):\n\n`gpg --decrypt {{doc.txt.gpg}}`\n\n- Import a public key:\n\n`gpg --import {{public.gpg}}`\n\n- Export public key for alice@example.com (output to STDOUT):\n\n`gpg --export --armor {{alice@example.com}}`\n\n- Export private key for alice@example.com (output to STDOUT):\n\n`gpg --export-secret-keys --armor {{alice@example.com}}`\n"},"gradle":{"Platform":"all","Class":"other cmds","Brief":"Gradle is an advanced open source build automation system.","MdText":"# gradle\n\n\u003e Gradle is an advanced open source build automation system.\n\n- Compile a package:\n\n`gradle build`\n\n- Exclude test task:\n\n`gradle build -x {{test}}`\n\n- Run in offline mode to prevent gradle from accessing the network during builds:\n\n`gradle build --offline`\n\n- Clear the build directory:\n\n`gradle clean`\n\n- Compile and Release package:\n\n`gradle assembleRelease`\n"},"grep":{"Platform":"all","Class":"file editor","Brief":"Matches patterns in input text.","MdText":"# grep\n\n\u003e Matches patterns in input text.\n\u003e Supports simple patterns and regular expressions.\n\n- Search for an exact string:\n\n`grep {{search_string}} {{path/to/file}}`\n\n- Search in case-insensitive mode:\n\n`grep -i {{search_string}} {{path/to/file}}`\n\n- Search recursively (ignoring non-text files) in current directory for an exact string:\n\n`grep -RI {{search_string}} .`\n\n- Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`):\n\n`grep -E {{^regex$}} {{path/to/file}}`\n\n- Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match:\n\n`grep -{{C|B|A}} 3 {{search_string}} {{path/to/file}}`\n\n- Print file name with the corresponding line number for each match:\n\n`grep -Hn {{search_string}} {{path/to/file}}`\n\n- Use the standard input instead of a file:\n\n`cat {{path/to/file}} | grep {{search_string}}`\n\n- Invert match for excluding specific strings:\n\n`grep -v {{search_string}}`\n"},"groff":{"Platform":"all","Class":"file editor","Brief":"Typesetting program that reads plain text mixed with formatting commands and produces formatted output.","MdText":"# groff\n\n\u003e Typesetting program that reads plain text mixed with formatting commands and produces formatted output.\n\u003e It is the GNU replacement for the `troff` and `nroff` Unix commands for text formatting.\n\n- Render a man page as plain text, and display the result:\n\n`groff -man -T utf8 {{manpage.1}}`\n\n- Render a man page using the ASCII output device, and display it using a pager:\n\n`groff -man -T ascii {{manpage.1}} | less`\n\n- Render a man page into an HTML file:\n\n`groff -man -T html {{manpage.1}} \u003e {{page.html}}`\n\n- Process a roff file using the `tbl` and `pic` preprocessors, and the `me` macro set:\n\n`groff -t -p -me -T utf8 {{foo.me}}`\n\n- Run a `groff` command with preprocessor and macro options guessed by the `grog` utility:\n\n`eval \"$(grog -T utf8 {{foo.me}})\"`\n"},"groups":{"Platform":"all","Class":"system settings","Brief":"Print group memberships for a user.","MdText":"# groups\n\n\u003e Print group memberships for a user.\n\n- Print group memberships for the current user:\n\n`groups`\n\n- Print group memberships for a specific user:\n\n`groups {{username}}`\n\n- Print group memberships for a list of users:\n\n`groups {{username1}} {{username2}} {{username3}}`\n"},"grunt":{"Platform":"all","Class":"other cmds","Brief":"A JavaScript task runner for automating processes.","MdText":"# grunt\n\n\u003e A JavaScript task runner for automating processes.\n\n- Run the default task process:\n\n`grunt`\n\n- Run one or more specific space-separated task(s):\n\n`grunt {{task_name}}`\n\n- Specify an alternative configuration file:\n\n`grunt --gruntfile {{path/to/file}}`\n\n- Specify an alternative base path for relative files:\n\n`grunt --base {{path/to/directory}}`\n\n- Specify an additional directory to scan for tasks in:\n\n`grunt --tasks {{path/to/directory}}`\n\n- Perform a dry-run without writing any files:\n\n`grunt --no-write`\n\n- List all available options:\n\n`grunt --help`\n"},"guetzli":{"Platform":"all","Class":"file compress","Brief":"JPEG image compression utility.","MdText":"# guetzli\n\n\u003e JPEG image compression utility.\n\n- Compress a JPEG image:\n\n`guetzli {{input.jpg}} {{output.jpg}}`\n\n- Create compressed JPEG image from PNG image:\n\n`guetzli {{input.png}} {{output.jpg}}`\n\n- Compress a JPEG image with desired visual quality (84-100):\n\n`guetzli --quality {{quality_value}} {{input.jpg}} {{output.jpg}}`\n"},"gulp":{"Platform":"all","Class":"other cmds","Brief":"JavaScript task runner and streaming build system.","MdText":"# gulp\n\n\u003e JavaScript task runner and streaming build system.\n\u003e Tasks are defined within gulpfile.js at the project root.\n\n- Run the default task:\n\n`gulp`\n\n- Run individual tasks:\n\n`gulp {{task}} {{othertask}}`\n"},"gunzip":{"Platform":"all","Class":"file compress","Brief":"Extract file(s) from a gzip (.gz) archive.","MdText":"# gunzip\n\n\u003e Extract file(s) from a gzip (.gz) archive.\n\n- Extract a file from an archive, replacing the original file if it exists:\n\n`gunzip {{archive.tar.gz}}`\n\n- Extract a file to a target destination:\n\n`gunzip -c {{archive.tar.gz}} \u003e {{archive.tar}}`\n\n- List the contents of a compressed file:\n\n`gunzip -l {{file.txt.gz}}`\n"},"hangups":{"Platform":"all","Class":"other cmds","Brief":"Third party command line client for Google Hangouts.","MdText":"# hangups\n\n\u003e Third party command line client for Google Hangouts.\n\n- Start hangups:\n\n`hangups`\n\n- View troubeshooting information and help:\n\n`hangups -h`\n\n- Set a refresh token for hangups:\n\n`hangups --token-path {{/path/to/token}}`\n"},"head":{"Platform":"all","Class":"file editor","Brief":"Output the first part of files.","MdText":"# head\n\n\u003e Output the first part of files.\n\n- Output the first few lines of a file:\n\n`head -n {{count_of_lines}} {{filename}}`\n\n- Output the first few bytes of a file:\n\n`head -c {{size_in_bytes}} {{filename}}`\n\n- Output everything but the last few lines of a file:\n\n`head -n -{{count_of_lines}} {{filename}}`\n\n- Output everything but the last few bytes of a file:\n\n`head -c -{{size_in_bytes}} {{filename}}`\n"},"helm":{"Platform":"all","Class":"other cmds","Brief":"Helm is a package manager for Kubernetes.","MdText":"# helm\n\n\u003e Helm is a package manager for Kubernetes.\n\n- Create a helm chart:\n\n`helm create {{chart_name}}`\n\n- Add a new helm repository:\n\n`helm repo add {{repo_name}}`\n\n- List helm repositories:\n\n`helm repo list`\n\n- Update helm repositories:\n\n`helm repo update`\n\n- Delete a helm repository:\n\n`helm repo remove {{repo_name}}`\n\n- Install a helm chart:\n\n`helm install {{repo_name}}/{{chart_name}}`\n\n- Download helm chart as a tar archive:\n\n`helm get {{chart_release_name}}`\n\n- Update helm dependencies:\n\n`helm dependency update`\n"},"help2man":{"Platform":"all","Class":"other cmds","Brief":"Produce simple man pages from an executable's `--help` and `--version` output.","MdText":"# help2man\n\n\u003e Produce simple man pages from an executable's `--help` and `--version` output.\n\n- Generate a man page for an executable:\n\n`help2man {{executable}}`\n\n- Specify the \"name\" paragraph in the man page:\n\n`help2man {{executable}} --name {{name}}`\n\n- Specify the section for the man page (defaults to 1):\n\n`help2man {{executable}} --section {{section}}`\n\n- Output to a file instead of stdout:\n\n`help2man {{executable}} --output {{path/to/file}}`\n\n- Display detailed help:\n\n`help2man --help`\n"},"hg":{"Platform":"all","Class":"other cmds","Brief":"A command line interface for Mercurial, a distributed source control management system.","MdText":"# hg\n\n\u003e A command line interface for Mercurial, a distributed source control management system.\n\u003e See `hg-add`, `hg-commit` and other pages for additional information.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org\u003e.\n\n- Execute Mercurial command:\n\n`hg {{command}}`\n\n- Call general help:\n\n`hg help`\n\n- Call help on a command:\n\n`hg help {{command}}`\n\n- Check the Mercurial version:\n\n`hg --version`\n"},"hg-commit":{"Platform":"all","Class":"other cmds","Brief":"Commit all staged or specified files to the repository.","MdText":"# hg commit\n\n\u003e Commit all staged or specified files to the repository.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#commit\u003e.\n\n- Commit staged files to the repository:\n\n`hg commit`\n\n- Commit a specific file or directory:\n\n`hg commit {{path/to/file_or_directory}}`\n\n- Commit with a specific message:\n\n`hg commit --message {{message}}`\n\n- Commit all files matching a specified pattern:\n\n`hg commit --include {{pattern}}`\n\n- Commit all files, excluding those that match a specified pattern:\n\n`hg commit --exclude {{pattern}}`\n\n- Commit using the interactive mode:\n\n`hg commit --interactive`\n"},"hg-log":{"Platform":"all","Class":"other cmds","Brief":"Display the revision history of the repository.","MdText":"# hg log\n\n\u003e Display the revision history of the repository.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#log\u003e.\n\n- Display the entire revision history of the repository:\n\n`hg log`\n\n- Display the revision history with an ASCII graph:\n\n`hg log --graph`\n\n- Display the revision history with file names matching a specified pattern:\n\n`hg log --include {{pattern}}`\n\n- Display the revision history, excluding file names that match a specified pattern:\n\n`hg log --exclude {{pattern}}`\n\n- Display the log information for a specific revision:\n\n`hg log --rev {{revision}}`\n\n- Display the revision history for a specific branch:\n\n`hg log --branch {{branch}}`\n\n- Display the revision history for a specific date:\n\n`hg log --date {{date}}`\n\n- Display revisions committed by a specific user:\n\n`hg log --user {{user}}`\n"},"hg-remove":{"Platform":"all","Class":"other cmds","Brief":"Remove specified files from the staging area.","MdText":"# hg remove\n\n\u003e Remove specified files from the staging area.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#remove\u003e.\n\n- Remove files or directories from the staging area:\n\n`hg remove {{path/to/file}}`\n\n- Remove all staged files matching a specified pattern:\n\n`hg remove --include {{pattern}}`\n\n- Remove all staged files, excluding those that match a specified pattern:\n\n`hg remove --exclude {{pattern}}`\n\n- Recursively remove sub-repositories:\n\n`hg remove --subrepos`\n\n- Remove files from the repository that have been physically removed:\n\n`hg remove --after`\n"},"hg-root":{"Platform":"all","Class":"other cmds","Brief":"Display the root location of a Hg repository.","MdText":"# hg root\n\n\u003e Display the root location of a Hg repository.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#root\u003e.\n\n- Display the root location of the current repository:\n\n`hg root`\n\n- Display the root location of the specified repository:\n\n`hg root --cwd {{path/to/directory}}`\n"},"hg-update":{"Platform":"all","Class":"other cmds","Brief":"Update the working directory to a specified changeset.","MdText":"# hg update\n\n\u003e Update the working directory to a specified changeset.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#update\u003e.\n\n- Update to the tip of the current branch:\n\n`hg update`\n\n- Update to the specified revision:\n\n`hg update --rev {{revision}}`\n\n- Update and discard uncommitted changes:\n\n`hg update --clean`\n\n- Update to the last commit matching a specified date:\n\n`hg update --date {{dd-mm-yyyy}}`\n"},"history":{"Platform":"all","Class":"system man","Brief":"Command Line history.","MdText":"# history\n\n\u003e Command Line history.\n\n- Display the commands history list with line numbers:\n\n`history`\n\n- Clear the commands history list (only for current `bash` shell):\n\n`history -c`\n\n- Overwrite history file with history of current `bash` shell (often combined with `history -c` to purge history):\n\n`history -w`\n\n- Delete the history entry at the specified offset:\n\n`history -d {{offset}}`\n"},"host":{"Platform":"all","Class":"system settings","Brief":"Lookup Domain Name Server.","MdText":"# host\n\n\u003e Lookup Domain Name Server.\n\n- Lookup A, AAAA, and MX records of a domain:\n\n`host {{domain}}`\n\n- Lookup a field (CNAME, TXT,...) of a domain:\n\n`host -t {{field}} {{domain}}`\n\n- Reverse lookup an IP:\n\n`host {{ip_address}}`\n\n- Specify an alternate DNS server to query:\n\n`host {{domain}} {{8.8.8.8}}`\n"},"hostess":{"Platform":"all","Class":"system settings","Brief":"An idempotent command-line utility for managing your /etc/hosts file.","MdText":"# hostess\n\n\u003e An idempotent command-line utility for managing your /etc/hosts file.\n\n- List domains, target ips and on/off status:\n\n`hostess list`\n\n- Add a domain pointing to your machine to your hosts file:\n\n`hostess add {{local.example.com}} {{127.0.0.1}}`\n\n- Remove a domain from your hosts file:\n\n`hostess del {{local.example.com}}`\n\n- Disable a domain (but don't remove it completely):\n\n`hostess off {{local.example.com}}`\n"},"hostid":{"Platform":"all","Class":"system settings","Brief":"Prints the numeric identifier for the current host (not necessarily the IP address).","MdText":"# hostid\n\n\u003e Prints the numeric identifier for the current host (not necessarily the IP address).\n\n- Display the numeric identifier for the current host in hexadecimal:\n\n`hostid`\n"},"htpasswd":{"Platform":"all","Class":"system settings","Brief":"Create and manage htpasswd files to protect web server directories using basic authentication.","MdText":"# htpasswd\n\n\u003e Create and manage htpasswd files to protect web server directories using basic authentication.\n\n- Create/overwrite htpasswd file:\n\n`htpasswd -c {{path/to/file}} {{user_name}}`\n\n- Add user to htpasswd file or update existing user:\n\n`htpasswd {{path/to/file}} {{user_name}}`\n\n- Add user to htpasswd file in batch mode without an interactive password prompt (for script usage):\n\n`htpasswd -b {{path/to/file}} {{user_name}} {{password}}`\n\n- Delete user from htpasswd file:\n\n`htpasswd -D {{path/to/file}} {{user_name}}`\n\n- Verify user password:\n\n`htpasswd -v {{path/to/file}} {{user_name}}`\n"},"http":{"Platform":"all","Class":"network comm","Brief":"HTTPie: HTTP client, a user-friendly cURL replacement.","MdText":"# http\n\n\u003e HTTPie: HTTP client, a user-friendly cURL replacement.\n\n- Download a URL to a file:\n\n`http -d {{example.org}}`\n\n- Send form-encoded data:\n\n`http -f {{example.org}} {{name='bob'}} {{profile_picture@'bob.png'}}`\n\n- Send JSON object:\n\n`http {{example.org}} {{name='bob'}}`\n\n- Specify an HTTP method:\n\n`http {{HEAD}} {{example.org}}`\n\n- Include an extra header:\n\n`http {{example.org}} {{X-MyHeader:123}}`\n\n- Pass a user name and password for server authentication:\n\n`http -a {{username:password}} {{example.org}}`\n\n- Specify raw request body via stdin:\n\n`cat {{data.txt}} | http PUT {{example.org}}`\n"},"httping":{"Platform":"all","Class":"network comm","Brief":"Measure the latency and throughput of a web server.","MdText":"# httping\n\n\u003e Measure the latency and throughput of a web server.\n\n- Ping the specified url:\n\n`httping -g {{url}}`\n\n- Ping the web server on `host` and `port`:\n\n`httping -h {{host}} -p {{port}}`\n\n- Ping the web server on `host` using a TLS connection:\n\n`httping -l -g https://{{host}}`\n\n- Ping the web server on `host` using HTTP basic authentication:\n\n`httping -g http://{{host}} -U {{username}} -P {{password}}`\n"},"hugo":{"Platform":"all","Class":"network comm","Brief":"Hugo is a fast and flexible static site generator.","MdText":"# hugo\n\n\u003e Hugo is a fast and flexible static site generator.\n\n- Create a new Hugo site:\n\n`hugo new site {{path/to/site}}`\n\n- Create a new Hugo theme (themes may also be downloaded from https://themes.gohugo.io/):\n\n`hugo new theme {{theme_name}}`\n\n- Create a new page:\n\n`hugo new {{section_name}}/{{filename}}`\n\n- Build a site to the `./public/` directory:\n\n`hugo`\n\n- Build a site including pages that are marked as a \"draft\":\n\n`hugo --buildDrafts`\n\n- Build a site to a given directory:\n\n`hugo --destination {{path/to/destination}}`\n\n- Build a site, start up a webserver to serve it, and automatically reload when pages are edited:\n\n`hugo server`\n"},"iconv":{"Platform":"all","Class":"file editor","Brief":"Converts text from one encoding to another.","MdText":"# iconv\n\n\u003e Converts text from one encoding to another.\n\n- Convert file to a specific encoding, and print to stdout:\n\n`iconv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}`\n\n- Convert file to the current locale's encoding, and output to a file:\n\n`iconv -f {{from_encoding}} {{input_file}} \u003e {{output_file}}`\n\n- List supported encodings:\n\n`iconv -l`\n"},"id":{"Platform":"all","Class":"system settings","Brief":"Display current user and group identity.","MdText":"# id\n\n\u003e Display current user and group identity.\n\n- Display current user's id (UID), group id (GID) and groups to which they belong:\n\n`id`\n\n- Display the current user identity as a number:\n\n`id -u`\n\n- Display the current group identity as a number:\n\n`id -g`\n\n- Display an arbitrary user's id (UID), group id (GID) and groups to which they belong:\n\n`id {{username}}`\n"},"id3tag":{"Platform":"all","Class":"file editor","Brief":"Tool for reading, writing, and manipulating ID3v1 and ID3v2 tags of MP3 files.","MdText":"# id3tag\n\n\u003e Tool for reading, writing, and manipulating ID3v1 and ID3v2 tags of MP3 files.\n\n- Set artist and title tag of an MP3 file:\n\n`id3tag --artist={{artist}} --title={{title}} {{path/to/file.mp3}}`\n\n- Set album title of all MP3 files in the current directory:\n\n`id3tag --album={{album}} {{*.mp3}}`\n\n- Get more help:\n\n`id3tag --help`\n"},"if":{"Platform":"all","Class":"other cmds","Brief":"Simple shell conditional.","MdText":"# if\n\n\u003e Simple shell conditional.\n\n- Echo a different thing depending on a command's success:\n\n`{{command}} \u0026\u0026 echo \"success\" || echo \"failure\"`\n\n- Full if syntax:\n\n`if {{condition}}; then echo \"true\"; else echo \"false\"; fi`\n"},"ignite":{"Platform":"all","Class":"other cmds","Brief":"A CLI for React Native boilerplates, plugins, generators, and more.","MdText":"# ignite\n\n\u003e A CLI for React Native boilerplates, plugins, generators, and more.\n\n- Create a new React Native project:\n\n`ignite new {{project_name}}`\n\n- Generate file from a plugin:\n\n`ignite generate {{plugin_name}} {{file_name}}`\n\n- Add an Ignite plugin to the project:\n\n`ignite add {{plugin_name}}`\n\n- Remove an Ignite plugin from the project:\n\n`ignite remove {{plugin_name}}`\n"},"imapsync":{"Platform":"all","Class":"network comm","Brief":"Email IMAP tool for syncing, copying and migrating email mailboxes between two imap servers, one way, and without duplicates.","MdText":"# imapsync\n\n\u003e Email IMAP tool for syncing, copying and migrating email mailboxes between two imap servers, one way, and without duplicates.\n\n- Synchronize imap account between host1 and host2:\n\n`imapsync --host1 {{host1}} --user1 {{user1}} --password1 {{secret1}} --host2 {{host2}} --user2 {{user2}} --password2 {{secret2}}`\n"},"infection":{"Platform":"all","Class":"other cmds","Brief":"A mutation testing framework for PHP.","MdText":"# infection\n\n\u003e A mutation testing framework for PHP.\n\n- Analyse code using the configuration file (or create one if it does not exist):\n\n`infection`\n\n- Use a specific number of threads:\n\n`infection --threads {{number_of_threads}}`\n\n- Specify a minimum Mutation Score Indicator (MSI):\n\n`infection --min-msi {{percentage}}`\n\n- Specify a minimum covered code MSI:\n\n`infection --min-covered-msi {{percentage}}`\n\n- Use a specific test framework (defaults to phpunit):\n\n`infection --test-framework {{phpunit|phpspec}}`\n\n- Only mutate lines of code that are covered by tests:\n\n`infection --only-covered`\n\n- Display the mutation code that has been applied:\n\n`infection --show-mutations`\n\n- Specify the log verbosity:\n\n`infection --log-verbosity {{default|all|none}}`\n"},"inkscape":{"Platform":"all","Class":"file editor","Brief":"An SVG (Scalable Vector Graphics) editing program.","MdText":"# inkscape\n\n\u003e An SVG (Scalable Vector Graphics) editing program.\n\u003e Use -z to not open the GUI and only process files in the console.\n\n- Open an SVG file in the Inkscape GUI:\n\n`inkscape {{filename.svg}}`\n\n- Export an SVG file into a bitmap with the default format (PNG) and the default resolution (90 DPI):\n\n`inkscape {{filename.svg}} -e {{filename.png}}`\n\n- Export an SVG file into a bitmap of 600x400 pixels (aspect ratio distortion may occur):\n\n`inkscape {{filename.svg}} -e {{filename.png}} -w {{600}} -h {{400}}`\n\n- Export a single object, given its ID, into a bitmap:\n\n`inkscape {{filename.svg}} -i {{id}} -e {{object.png}}`\n\n- Export an SVG document to PDF, converting all texts to paths:\n\n`inkscape {{filename.svg}} --export-pdf={{filename.pdf}} --export-text-to-path`\n\n- Duplicate the object with id=\"path123\", rotate the duplicate 90 degrees, save the file, and quit Inkscape:\n\n`inkscape {{filename.svg}} --select=path123 --verb=EditDuplicate --verb=ObjectRotate90 --verb=FileSave --verb=FileQuit`\n"},"install":{"Platform":"all","Class":"system man","Brief":"Copy files and set attributes.","MdText":"# install\n\n\u003e Copy files and set attributes.\n\u003e Copy files (often executable) to a system location like `/usr/local/bin`, give them the appropriate permissions/ownership.\n\n- Copy files to destination:\n\n`install {{path/to/source}} {{path/to/destination}}`\n\n- Copy files to destination, setting their ownership:\n\n`install -o {{user}} {{path/to/source}} {{path/to/destination}}`\n\n- Copy files to destination, setting their group ownership:\n\n`install -g {{user}} {{path/to/source}} {{path/to/destination}}`\n\n- Copy files to destination, setting their `mode`:\n\n`install -m {{+x}} {{path/to/source}} {{path/to/destination}}`\n\n- Copy files and apply access/modification times of source to destination:\n\n`install -p {{path/to/source}} {{path/to/destination}}`\n"},"ionic":{"Platform":"all","Class":"other cmds","Brief":"A framework to build hybrid mobile apps.","MdText":"# ionic\n\n\u003e A framework to build hybrid mobile apps.\n\n- Create a new project:\n\n`ionic start`\n\n- Start a local dev server for app dev/testing:\n\n`ionic serve`\n\n- Generate new app component, directive, page, pipe, provider or tabs:\n\n`ionic g {{page}}`\n\n- Show versions of ionic, cordova, environment, etc.:\n\n`ionic info`\n\n- Run app on an android/ios device:\n\n`ionic cordova run {{android|ios}} --device`\n\n- Check the health of a ionic app:\n\n`ionic doctor {{check}}`\n"},"ionice":{"Platform":"all","Class":"other cmds","Brief":"Get or set program I/O scheduling class and priority.","MdText":"# ionice\n\n\u003e Get or set program I/O scheduling class and priority.\n\u003e Scheduling classes: 1 (realtime), 2 (best-effort), 3 (idle).\n\u003e Priority levels: 0 (the highest) - 7 (the lowest).\n\n- Set I/O scheduling class of a running process:\n\n`ionice -c {{scheduling_class}} -p {{pid}}`\n\n- Run a command with custom I/O scheduling class and priority:\n\n`ionice -c {{scheduling_class}} -n {{priority}} {{command}}`\n\n- Print the I/O scheduling class and priority of a running process:\n\n`ionice -p {{pid}}`\n"},"ioping":{"Platform":"all","Class":"system man","Brief":"Monitor I/O latency in real time.","MdText":"# ioping\n\n\u003e Monitor I/O latency in real time.\n\n- Show disk I/O latency using the default values and the current directory:\n\n`ioping .`\n\n- Measure latency on /tmp using 10 requests of 1 megabyte each:\n\n`ioping -c 10 -s 1M /tmp`\n\n- Measure disk seek rate on /dev/sda:\n\n`ioping -R /dev/sda`\n\n- Measure disk sequential speed on /dev/sda:\n\n`ioping -RL /dev/sda`\n"},"ipcs":{"Platform":"all","Class":"system man","Brief":"Display information about resources used in IPC (Inter-process Communication).","MdText":"# ipcs\n\n\u003e Display information about resources used in IPC (Inter-process Communication).\n\n- Specific information about the Message Queue which has the id 32768:\n\n`ipcs -qi 32768`\n\n- General information about all the IPC:\n\n`ipcs -a`\n"},"iperf":{"Platform":"all","Class":"system man","Brief":"Measure network bandwidth between computers.","MdText":"# iperf\n\n\u003e Measure network bandwidth between computers.\n\n- Run on server:\n\n`iperf -s`\n\n- Run on client:\n\n`iperf -c {{server_address}}`\n\n- Run on client with 5 parallel threads:\n\n`iperf -c {{server_address}} -P {{5}}`\n"},"iperf3":{"Platform":"all","Class":"system man","Brief":"Traffic generator for testing network bandwidth.","MdText":"# iperf3\n\n\u003e Traffic generator for testing network bandwidth.\n\n- Run iperf3 as a server:\n\n`iperf3 -s`\n\n- Run an iperf3 server on a specific port:\n\n`iperf3 -s -p {{port}}`\n\n- Start bandwidth test:\n\n`iperf3 -c {{server}}`\n\n- Run iperf3 in multiple parallel streams:\n\n`iperf3 -c {{server}} -P {{streams}}`\n\n- Reverse direction of the test. Server sends data to the client:\n\n`iperf3 -c {{server}} -R`\n"},"ipfs":{"Platform":"all","Class":"system man","Brief":"Inter Planetary File System.","MdText":"# ipfs\n\n\u003e Inter Planetary File System.\n\u003e A peer-to-peer hypermedia protocol to make the web faster, safer, and more open.\n\n- Add a file from local to the file system, pin it and print the relative hash:\n\n`ipfs add {{filename}}`\n\n- Add a directory and its files recursively from local to the file system and print the relative hash:\n\n`ipfs add -r {{directory}}`\n\n- Save a remote file and give it a name but not pin it:\n\n`ipfs get {{hash}} -o {{filename}}`\n\n- Pin a remote file locally:\n\n`ipfs pin add {{hash}}`\n\n- Display pinned files:\n\n`ipfs pin ls`\n\n- Unpin a file from the local storage:\n\n`ipfs pin rm {{hash}}`\n\n- Remove unpinned files from local storage:\n\n`ipfs repo gc`\n"},"is-up":{"Platform":"all","Class":"network comm","Brief":"Check whether a website is up or down.","MdText":"# is-up\n\n\u003e Check whether a website is up or down.\n\u003e Homepage: \u003chttps://github.com/sindresorhus/is-up-cli\u003e.\n\n- Check the status of the specified website:\n\n`is-up {{example.com}}`\n"},"java":{"Platform":"all","Class":"other cmds","Brief":"Java Application Launcher.","MdText":"# java\n\n\u003e Java Application Launcher.\n\n- Execute a java .class file that contains a main method by using just the class name:\n\n`java {{classname}}`\n\n- Execute a .jar program:\n\n`java -jar {{filename.jar}}`\n\n- Display JDK, JRE and HotSpot versions:\n\n`java -version`\n"},"javac":{"Platform":"all","Class":"other cmds","Brief":"Java Application Compiler.","MdText":"# javac\n\n\u003e Java Application Compiler.\n\n- Compile a .java file:\n\n`javac {{file.java}}`\n\n- Compile several .java files:\n\n`javac {{file1.java}} {{file2.java}} {{file3.java}}`\n\n- Compile all .java files in current directory:\n\n`javac {{*.java}}`\n\n- Compile a .java file and place the resulting class file in a specific directory:\n\n`javac -d {{path/to/some/directory}} {{file.java}}`\n"},"jekyll":{"Platform":"all","Class":"other cmds","Brief":"A simple, blog-aware, static site generator.","MdText":"# jekyll\n\n\u003e A simple, blog-aware, static site generator.\n\n- Generate a development server that will run at http://localhost:4000/:\n\n`jekyll serve`\n\n- Enable incremental regeneration:\n\n`jekyll serve --incremental`\n\n- Generate the current directory into \"./_site\":\n\n`jekyll build`\n"},"jest":{"Platform":"all","Class":"other cmds","Brief":"A zero-configuration JavaScript testing platform.","MdText":"# jest\n\n\u003e A zero-configuration JavaScript testing platform.\n\n- Run all tests:\n\n`jest`\n\n- Run only tests with a name that matches the regex pattern:\n\n`jest -t {{spec_name}}`\n\n- Run only tests relating to uncommitted files:\n\n`jest --onlyChanged`\n\n- Watch files for changes and rerun related tests:\n\n`jest --watch`\n\n- Show help:\n\n`jest --help`\n"},"jhat":{"Platform":"all","Class":"other cmds","Brief":"Java Heap Analysis Tool.","MdText":"# jhat\n\n\u003e Java Heap Analysis Tool.\n\n- Analyze a heap dump (from jmap), view via http on port 7000:\n\n`jhat {{dump_file.bin}}`\n\n- Analyze a heap dump, specifying an alternate port for the http server:\n\n`jhat -p {{port}} {{dump_file.bin}}`\n\n- Analyze a dump letting jhat use up to 8GB RAM (2-4x dump size recommended):\n\n`jhat -J-mx8G {{dump_file.bin}}`\n"},"jobs":{"Platform":"all","Class":"system man","Brief":"Display status of jobs in the current session.","MdText":"# jobs\n\n\u003e Display status of jobs in the current session.\n\n- Show status of all jobs:\n\n`jobs`\n\n- Show status of a particular job:\n\n`jobs {{job_id}}`\n\n- Show status and process IDs of all jobs:\n\n`jobs -l`\n\n- Show process IDs of all jobs:\n\n`jobs -p`\n"},"join":{"Platform":"all","Class":"file editor","Brief":"Join lines of two sorted files on a common field.","MdText":"# join\n\n\u003e Join lines of two sorted files on a common field.\n\n- Join two files on the first (default) field:\n\n`join {{file1}} {{file2}}`\n\n- Join field3 of file1 with field1 of file2:\n\n`join -1 3 -2 1 {{file1}} {{file2}}`\n\n- Produce a line for each unpairable line for file1:\n\n`join -a 1 {{file1}} {{file2}}`\n"},"jpegoptim":{"Platform":"all","Class":"file editor","Brief":"Optimise JPEG images.","MdText":"# jpegoptim\n\n\u003e Optimise JPEG images.\n\n- Optimise a set of JPEG images, retaining all associated data:\n\n`jpegoptim {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}`\n\n- Optimise JPEG images, stripping all non-essential data:\n\n`jpegoptim --strip-all {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}`\n\n- Force the output images to be progressive:\n\n`jpegoptim --all-progressive {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}`\n\n- Force the output images to have a fixed maximum filesize:\n\n`jpegoptim --size={{250k}} {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}`\n"},"jps":{"Platform":"all","Class":"other cmds","Brief":"Show JVM Process Status of current user.","MdText":"# jps\n\n\u003e Show JVM Process Status of current user.\n\n- List all JVM processes:\n\n`jps`\n\n- List all JVM processes with only PID:\n\n`jps -q`\n\n- Display the arguments passed to the processes:\n\n`jps -m`\n\n- Display the full package name of all processes:\n\n`jps -l`\n\n- Display the arguments passed to the JVM:\n\n`jps -v`\n"},"jq":{"Platform":"all","Class":"file editor","Brief":"A lightweight and flexible command-line JSON processor.","MdText":"# jq\n\n\u003e A lightweight and flexible command-line JSON processor.\n\n- Output a JSON file, in pretty-print format:\n\n`jq . {{file.json}}`\n\n- Output all elements from arrays (or all key-value pairs from objects) in a JSON file:\n\n`jq .[] {{file.json}}`\n\n- Read JSON objects from a file into an array, and output it (inverse of `jq .[]`):\n\n`jq --slurp . {{file.json}}`\n\n- Output the first element in a JSON file:\n\n`jq .[0] {{file.json}}`\n\n- Output the value of a given key of the first element in a JSON text from stdin:\n\n`cat {{file.json}} | jq .[0].{{key_name}}`\n\n- Output the value of a given key of each element in a JSON text from stdin:\n\n`cat {{file.json}} | jq 'map(.{{key_name}})'`\n\n- Combine multiple filters:\n\n`cat {{file.json}} | jq 'unique | sort | reverse'`\n"},"jrnl":{"Platform":"all","Class":"other cmds","Brief":"A simple journal application for your command line.","MdText":"# jrnl\n\n\u003e A simple journal application for your command line.\n\n- Insert a new entry with your editor:\n\n`jrnl`\n\n- Quickly insert a new entry:\n\n`jrnl {{today at 3am}}: {{title}}. {{content}}`\n\n- View the last ten entries:\n\n`jrnl -n {{10}}`\n\n- View everything that happened from the start of last year to the start of last march:\n\n`jrnl -from {{\"last year\"}} -until {{march}}`\n\n- Edit all entries tagged with \"texas\" and \"history\":\n\n`jrnl {{@texas}} -and {{@history}} --edit`\n"},"json5":{"Platform":"all","Class":"file editor","Brief":"A command-line tool for converting JSON5 files to JSON.","MdText":"# json5\n\n\u003e A command-line tool for converting JSON5 files to JSON.\n\n- Convert JSON5 stdin to JSON stdout:\n\n`echo {{input}} | json5`\n\n- Convert a JSON5 file to JSON and output to stdout:\n\n`json5 {{path/to/input_file.json5}}`\n\n- Convert a JSON5 file to the specified JSON file:\n\n`json5 {{path/to/input_file.json5}} --out-file {{path/to/output_file.json}}`\n\n- Validate a JSON5 file:\n\n`json5 {{path/to/input_file.json5}} --validate`\n\n- Specify the number of spaces to indent by (or \"t\" for tabs):\n\n`json5 --space {{indent_amount}}`\n\n- View available options:\n\n`json5 --help`\n"},"julia":{"Platform":"all","Class":"other cmds","Brief":"A high-level, high-performance dynamic programming language for technical computing.","MdText":"# julia\n\n\u003e A high-level, high-performance dynamic programming language for technical computing.\n\n- Start a Julia REPL session:\n\n`julia`\n\n- Execute a Julia program and exit:\n\n`julia {{program.jl}}`\n\n- Execute a Julia program that takes arguments:\n\n`julia {{program.jl}} {{arguments}}`\n\n- Evaluate a string containing Julia code:\n\n`julia -e '{{julia_code}}'`\n\n- Evaluate a string of Julia code, passing arguments to it:\n\n`julia -e '{{for x in ARGS; println(x); end}}' {{arguments}}`\n\n- Start Julia in parallel mode, using N worker processes:\n\n`julia -p {{N}}`\n"},"k6":{"Platform":"all","Class":"other cmds","Brief":"A modern load testing tool, using Go and JavaScript.","MdText":"# k6\n\n\u003e A modern load testing tool, using Go and JavaScript.\n\n- Run load test locally:\n\n`k6 run {{script.js}}`\n\n- Run load test locally with a given number of virtual users and duration:\n\n`k6 run --vus {{10}} --duration {{30s}} {{script.js}}`\n\n- Run load test locally with a given environment variable:\n\n`k6 run -e {{HOSTNAME=example.com}} {{script.js}}`\n\n- Run load test locally using InfluxDB to store results:\n\n`k6 run --out influxdb={{http://localhost:8086/k6db}} {{script.js}}`\n\n- Login to cloud service using secret token:\n\n`k6 login cloud --token {{secret}}`\n\n- Run load test on cloud infrastructure:\n\n`k6 cloud {{script.js}}`\n"},"kafkacat":{"Platform":"all","Class":"other cmds","Brief":"Apache Kafka producer and consumer tool.","MdText":"# kafkacat\n\n\u003e Apache Kafka producer and consumer tool.\n\n- Consume messages starting with the newest offset:\n\n`kafkacat -C -t {{topic}} -b {{brokers}}`\n\n- Consume messages starting with the oldest offset and exit after the last message is received:\n\n`kafkacat -C -t {{topic}} -b {{brokers}} -o beginning -e`\n\n- Consume messages as a Kafka consumer group:\n\n`kafkacat -G {{group_id}} {{topic}} -b {{brokers}}`\n\n- Publish message by reading from stdin:\n\n` echo {{message}} | kafkacat -P -t {{topic}} -b {{brokers}}`\n\n- Publish messages by reading from a file:\n\n`kafkacat -P -t {{topic}} -b {{brokers}} {{path/to/file}}`\n\n- List metadata for all topics and brokers:\n\n`kafkacat -L -b {{brokers}}`\n\n- List metadata for a specific topic:\n\n`kafkacat -L -t {{topic}} -b {{brokers}}`\n\n- Get offset for a topic/partition for a specific point in time:\n\n`kafkacat -Q -t {{topic}:{{partition}}:{{unix_timestamp}} -b {{brokers}}`\n"},"keepass2":{"Platform":"all","Class":"other cmds","Brief":"A light-weight password manager.","MdText":"# keepass2\n\n\u003e A light-weight password manager.\n\n- Start KeePass 2, opening the most recently-opened password database:\n\n`keepass2`\n\n- Start KeePass 2, opening a specific password database:\n\n`keepass2 {{path/to/database.kbdx}}`\n\n- Use a specific key file to open a password database:\n\n`keepass2 {{path/to/database.kbdx}} -keyfile:{{path/to/key/file.key}}`\n"},"keybase":{"Platform":"all","Class":"other cmds","Brief":"Key directory that maps social media identities to encryption keys in a publicly auditable manner.","MdText":"# keybase\n\n\u003e Key directory that maps social media identities to encryption keys in a publicly auditable manner.\n\n- Follow another user:\n\n`keybase follow {{username}}`\n\n- Add a new proof:\n\n`keybase prove {{service}} {{service_username}}`\n\n- Sign a file:\n\n`keybase sign --infile {{input_file}} --outfile {{output_file}}`\n\n- Verify a signed file:\n\n`keybase verify --infile {{input_file}} --outfile {{output_file}}`\n\n- Encrypt a file:\n\n`keybase encrypt --infile {{input_file}} --outfile {{output_file}} {{receiver}}`\n\n- Decrypt a file:\n\n`keybase decrypt --infile {{input_file}} --outfile {{output_file}}`\n\n- Revoke current device, log out, and delete local data:\n\n`keybase deprovision`\n"},"kill":{"Platform":"all","Class":"system man","Brief":"Sends a signal to a process, usually related to stopping the process.","MdText":"# kill\n\n\u003e Sends a signal to a process, usually related to stopping the process.\n\u003e All signals except for SIGKILL and SIGSTOP can be intercepted by the process to perform a clean exit.\n\n- Terminate a program using the default SIGTERM (terminate) signal:\n\n`kill {{process_id}}`\n\n- List available signal names (to be used without the `SIG` prefix):\n\n`kill -l`\n\n- Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating:\n\n`kill -{{1|HUP}} {{process_id}}`\n\n- Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing `Ctrl + C`:\n\n`kill -{{2|INT}} {{process_id}}`\n\n- Signal the operating system to immediately terminate a program (which gets no chance to capture the signal):\n\n`kill -{{9|KILL}} {{process_id}}`\n\n- Signal the operating system to pause a program until a SIGCONT (\"continue\") signal is received:\n\n`kill -{{17|STOP}} {{process_id}}`\n\n- Send a `SIGUSR1` signal to all processes with the given GID (group id):\n\n`kill -{{SIGUSR1}} -{{group_id}}`\n"},"killall":{"Platform":"all","Class":"system man","Brief":"Send kill signal to all instances of a process by name (must be exact name).","MdText":"# killall\n\n\u003e Send kill signal to all instances of a process by name (must be exact name).\n\u003e All signals except SIGKILL and SIGSTOP can be intercepted by the process, allowing a clean exit.\n\n- Terminate a process using the default SIGTERM (terminate) signal:\n\n`killall {{process_name}}`\n\n- List available signal names (to be used without the 'SIG' prefix):\n\n`killall --list`\n\n- Interactively ask for confirmation before termination:\n\n`killall -i {{process_name}}`\n\n- Terminate a process using the SIGINT (interrupt) signal, which is the same signal sent by pressing `Ctrl + C`:\n\n`killall -INT {{process_name}}`\n\n- Force kill a process:\n\n`killall -KILL {{process_name}}`\n"},"knife":{"Platform":"all","Class":"other cmds","Brief":"CLI for interacting with a Chef server from a local Chef repo.","MdText":"# knife\n\n\u003e CLI for interacting with a Chef server from a local Chef repo.\n\n- Bootstrap a new node:\n\n`knife bootstrap {{fqdn_or_ip}}`\n\n- List all registered nodes:\n\n`knife node list`\n\n- Show a node:\n\n`knife node show {{node_name}}`\n\n- Edit a node:\n\n`knife node edit {{node_name}}`\n\n- Edit a role:\n\n`knife role edit {{role_name}}`\n\n- View a data bag:\n\n`knife data bag show {{data_bag_name}} {{data_bag_item}}`\n\n- Upload a local cookbook to the Chef server:\n\n`knife cookbook upload {{cookbook_name}}`\n"},"kompose":{"Platform":"all","Class":"other cmds","Brief":"A tool to convert docker-compose applications to Kubernetes.","MdText":"# kompose\n\n\u003e A tool to convert docker-compose applications to Kubernetes.\n\n- Deploy a dockerized application to Kubernetes:\n\n`kompose up -f {{docker-compose.yml}}`\n\n- Delete instantiated services/deployments from Kubernetes:\n\n`kompose down -f {{docker-compose.yml}}`\n\n- Convert a docker-compose file into Kubernetes resources file:\n\n`kompose convert -f {{docker-compose.yml}}`\n"},"ksh":{"Platform":"all","Class":"system man","Brief":"Korn Shell.","MdText":"# ksh\n\n\u003e Korn Shell.\n\u003e `bash` and `sh`-compatible command line interpreter.\n\n- Start interactive command line interpreter:\n\n`ksh`\n\n- Execute a command:\n\n`ksh -c {{command}}`\n\n- Run commands from a file:\n\n`ksh {{file}}`\n\n- Run commands from a file and print them as they are executed:\n\n`ksh -x {{file}}`\n"},"kube-capacity":{"Platform":"all","Class":"other cmds","Brief":"A simple CLI that provides an overview of the resource requests, limits, and utilization in a Kubernetes cluster.","MdText":"# kube-capacity\n\n\u003e A simple CLI that provides an overview of the resource requests, limits, and utilization in a Kubernetes cluster.\n\u003e Combine the best parts of `kubectl top` and `kubectl describe` into a CLI focused on cluster resources.\n\u003e Homepage: \u003chttps://github.com/robscott/kube-capacity\u003e.\n\n- Output a list of nodes with the total CPU and Memory resource requests and limits:\n\n`kube-capacity`\n\n- Include pods:\n\n`kube-capacity -p`\n\n- Include utilization:\n\n`kube-capacity -u`\n"},"kube-fzf":{"Platform":"all","Class":"other cmds","Brief":"Shell commands for command line fuzzy searching of Kubernetes Pods.","MdText":"# kube-fzf\n\n\u003e Shell commands for command line fuzzy searching of Kubernetes Pods.\n\u003e See also `kubectl` for related commands.\n\n- Get pod details (from current namespace):\n\n`findpod`\n\n- Get pod details (from all namespaces):\n\n`findpod -a`\n\n- Describe a pod:\n\n`describepod`\n\n- Tail pod logs:\n\n`tailpod`\n\n- Exec into a pod's container:\n\n`execpod {{shell_command}}`\n\n- Port-forward a pod:\n\n`pfpod {{port_number}}`\n"},"kubens":{"Platform":"all","Class":"other cmds","Brief":"Utility to switch between Kubernetes namespaces.","MdText":"# kubens\n\n\u003e Utility to switch between Kubernetes namespaces.\n\n- List the namespaces:\n\n`kubens`\n\n- Change the active namespace:\n\n`kubens {{name}}`\n\n- Switch to the previous namespace:\n\n`kubens -`\n"},"kubetail":{"Platform":"all","Class":"other cmds","Brief":"Utility to tail multiple Kubernetes pod logs at the same time.","MdText":"# kubetail\n\n\u003e Utility to tail multiple Kubernetes pod logs at the same time.\n\n- Tail the logs of multiple pods (whose name starts with \"my_app\") in one go:\n\n`kubetail {{my_app}}`\n\n- Tail only a specific container from multiple pods:\n\n`kubetail {{my_app}} -c {{my_container}}`\n\n- To tail multiple containers from multiple pods:\n\n`kubetail {{my_app}} -c {{my_container_1}} -c {{my_container_2}}`\n\n- To tail multiple applications at the same time separate them by comma:\n\n`kubetail {{my_app_1}},{{my_app_2}}`\n"},"laravel":{"Platform":"all","Class":"other cmds","Brief":"A command line installer for the Laravel framework.","MdText":"# laravel\n\n\u003e A command line installer for the Laravel framework.\n\n- Create a new Laravel application:\n\n`laravel new {{name}}`\n\n- Use the latest development release:\n\n`laravel new {{name}} --dev`\n\n- Overwrite if the directory already exists:\n\n`laravel new {{name}} --force`\n\n- List the available installer commands:\n\n`laravel list`\n"},"last":{"Platform":"all","Class":"system man","Brief":"View the last logged in users.","MdText":"# last\n\n\u003e View the last logged in users.\n\n- View last logins, their duration and other information as read from /var/log/wtmp:\n\n`last`\n\n- Specify how many of the last logins to show:\n\n`last -n {{login_count}}`\n\n- Print the full date and time for entries and then display the hostname column last to prevent truncation:\n\n`last -F -a`\n\n- View all logins by a specific user and show the ip address instead of the hostname:\n\n`last {{user_name}} -i`\n\n- View all recorded reboots (i.e., the last logins of the pseudo user \"reboot\"):\n\n`last reboot`\n\n- View all recorded shutdowns (i.e., the last logins of the pseudo user \"shutdown\"):\n\n`last shutdown`\n"},"lein":{"Platform":"all","Class":"other cmds","Brief":"Manage clojure projects with declarative configuration.","MdText":"# lein\n\n\u003e Manage clojure projects with declarative configuration.\n\n- Generate scaffolding for a new project based on a template:\n\n`lein new {{template_name}} {{project_name}}`\n\n- Start a REPL session either with the project or standalone:\n\n`lein repl`\n\n- Run the project's \"-main\" function with optional args:\n\n`lein run {{args}}`\n\n- Run the project's tests:\n\n`lein test`\n\n- Package up the project files and all its dependencies into a jar file:\n\n`lein uberjar`\n"},"less":{"Platform":"all","Class":"file man","Brief":"Open a file for interactive reading, allowing scrolling and search.","MdText":"# less\n\n\u003e Open a file for interactive reading, allowing scrolling and search.\n\n- Open a file:\n\n`less {{source_file}}`\n\n- Page down / up:\n\n`\u003cSpace\u003e (down), b (up)`\n\n- Go to end / start of file:\n\n`G (end), g (start)`\n\n- Forward search for a string (press `n`/`N` to go to next/previous match):\n\n`/{{something}}`\n\n- Backward search for a string (press `n`/`N` to go to next/previous match):\n\n`?{{something}}`\n\n- Follow the output of the currently opened file:\n\n`F`\n\n- Open the current file in an editor:\n\n`v`\n\n- Exit:\n\n`q`\n"},"lex":{"Platform":"all","Class":"other cmds","Brief":"Lexical analyser generator.","MdText":"# lex\n\n\u003e Lexical analyser generator.\n\u003e Given the specification for a lexical analyser, generates C code implementing it.\n\n- Generate an analyser from a Lex file:\n\n`lex {{analyser.l}}`\n\n- Specify the output file:\n\n`lex {{analyser.l}} --outfile {{analyser.c}}`\n\n- Compile a C file generated by Lex:\n\n`cc {{path/to/lex.yy.c}} --output {{executable}}`\n"},"link":{"Platform":"all","Class":"file man","Brief":"Create a hard link to an existing file.","MdText":"# link\n\n\u003e Create a hard link to an existing file.\n\u003e For more options, see the `ln` command.\n\n- Create a hard link from a new file to an existing file:\n\n`link {{path/to/existing_file}} {{path/to/new_file}}`\n"},"live-server":{"Platform":"all","Class":"network comm","Brief":"A simple development http server with live reload capability.","MdText":"# live-server\n\n\u003e A simple development http server with live reload capability.\n\n- Serve an index.html file and reload on changes:\n\n`live-server`\n\n- Specify a port (default is 8080) from which to serve a file:\n\n`live-server --port={{8081}}`\n\n- Specify a given file to serve:\n\n`live-server --open={{about.html}}`\n\n- Proxy all requests for ROUTE to URL:\n\n`live-server --proxy={{/}}:{{http:localhost:3000}}`\n"},"ln":{"Platform":"all","Class":"file man","Brief":"Creates links to files and directories.","MdText":"# ln\n\n\u003e Creates links to files and directories.\n\n- Create a symbolic link to a file or directory:\n\n`ln -s {{path/to/file_or_directory}} {{path/to/symlink}}`\n\n- Overwrite an existing symbolic to point to a different file:\n\n`ln -sf {{path/to/new_file}} {{path/to/symlink}}`\n\n- Create a hard link to a file:\n\n`ln {{path/to/file}} {{path/to/hardlink}}`\n"},"locust":{"Platform":"all","Class":"other cmds","Brief":"Load-testing tool to determine number of concurrent users a system can handle.","MdText":"# locust\n\n\u003e Load-testing tool to determine number of concurrent users a system can handle.\n\n- Load-test \"example.com\" with web interface using locustfile.py:\n\n`locust --host={{http://example.com}}`\n\n- Use a different test file:\n\n`locust --locustfile={{test_file.py}} --host={{http://example.com}}`\n\n- Run test without web interface, spawning 1 user a second until there are 100 users:\n\n`locust --no-web --clients={{100}} --hatch-rate={{1}} --host={{http://example.com}}`\n\n- Start locust in master mode:\n\n`locust --master --host={{http://example.com}}`\n\n- Connect locust slave to master:\n\n`locust --slave --host={{http://example.com}}`\n\n- Connect locust slave to master on a different machine:\n\n`locust --slave --master-host={{master_hostname}} --host={{http://example.com}}`\n"},"logname":{"Platform":"all","Class":"system man","Brief":"Shows the user's login name.","MdText":"# logname\n\n\u003e Shows the user's login name.\n\n- Display the currently logged in user's name:\n\n`logname`\n"},"lolcat":{"Platform":"all","Class":"file man","Brief":"Put a rainbow in everything you `cat` to the console.","MdText":"# lolcat\n\n\u003e Put a rainbow in everything you `cat` to the console.\n\n- Print a file to the console in rainbow colors:\n\n`lolcat {{path/to/file}}`\n\n- Print the result of a text-producing command in rainbow colors:\n\n`{{fortune}} | lolcat`\n\n- Print a file to the console with animated rainbow colors:\n\n`lolcat -a {{path/to/file}}`\n\n- Print a file to the console with 24-bit (truecolor) rainbow colors:\n\n`lolcat -t {{path/to/file}}`\n"},"lorem":{"Platform":"all","Class":"file editor","Brief":"Create more or less random lorem ipsum text.","MdText":"# lorem\n\n\u003e Create more or less random lorem ipsum text.\n\n- Print the specified number of words:\n\n`lorem -n {{20}}`\n\n- Print 10 lines of Goethe's Faust:\n\n`lorem -l {{10}} --faust`\n\n- Print 5 sentences of Poe's Raven:\n\n`lorem -s {{5}} --raven`\n\n- Print 40 random characters from Boccacio's Decameron:\n\n`lorem --randomize -c {{40}} --decamerone`\n"},"lpass":{"Platform":"all","Class":"system man","Brief":"Command line interface for the LastPass password manager.","MdText":"# lpass\n\n\u003e Command line interface for the LastPass password manager.\n\n- Login to your LastPass account, by entering your master password when prompted:\n\n`lpass login {{username}}`\n\n- Show login status:\n\n`lpass status`\n\n- List all sites grouped by category:\n\n`lpass ls`\n\n- Generate a new password for \"gmail.com\" with identifier \"myinbox\" and add to LastPass:\n\n`lpass generate --username {{username}} --url {{gmail.com}} {{myinbox}} {{password_length}}`\n\n- Show password for a specified entry:\n\n`lpass show {{myinbox}} --password`\n"},"lpstat":{"Platform":"all","Class":"system man","Brief":"Show status information about printers.","MdText":"# lpstat\n\n\u003e Show status information about printers.\n\n- List printers present on the machine and whether they are enabled for printing:\n\n`lpstat -p`\n\n- Show the default printer:\n\n`lpstat -d`\n\n- Display all available status information:\n\n`lpstat -t`\n\n- Show a list of print jobs queued by the specified user:\n\n`lpstat -u {{user}}`\n"},"ls":{"Platform":"all","Class":"file man","Brief":"List directory contents.","MdText":"# ls\n\n\u003e List directory contents.\n\n- List files one per line:\n\n`ls -1`\n\n- List all files, including hidden files:\n\n`ls -a`\n\n- Long format list (permissions, ownership, size and modification date) of all files:\n\n`ls -la`\n\n- Long format list with size displayed using human readable units (KB, MB, GB):\n\n`ls -lh`\n\n- Long format list sorted by size (descending):\n\n`ls -lS`\n\n- Long format list of all files, sorted by modification date (oldest first):\n\n`ls -ltr`\n"},"lwp-request":{"Platform":"all","Class":"network comm","Brief":"Simple command-line HTTP client.","MdText":"# lwp-request\n\n\u003e Simple command-line HTTP client.\n\u003e Built with libwww-perl.\n\n- Make a simple GET request:\n\n`lwp-request -m GET {{http://example.com/some/path}}`\n\n- Upload a file with a POST request:\n\n`cat {{/path/to/file}} | lwp-request -m POST {{http://example.com/some/path}}`\n\n- Make a request with a custom user agent:\n\n`lwp-request -H 'User-Agent: {{user_agent}} -m {{METHOD}} {{http://example.com/some/path}}`\n\n- Make a request with HTTP authentication:\n\n`lwp-request -C {{username}}:{{password}} -m {{METHOD}} {{http://example.com/some/path}}`\n\n- Make a request and print request headers:\n\n`lwp-request -U -m {{METHOD}} {{http://example.com/some/path}}`\n\n- Make a request and print response headers and status chain:\n\n`lwp-request -E -m {{METHOD}} {{http://example.com/some/path}}`\n"},"magento":{"Platform":"all","Class":"other cmds","Brief":"A CLI for managing the Magento PHP framework.","MdText":"# magento\n\n\u003e A CLI for managing the Magento PHP framework.\n\n- Enable one or more space-separated modules:\n\n`magento module:enable {{module(s)}}`\n\n- Disable one or more space-separated modules:\n\n`magento module:disable {{module(s)}}`\n\n- Update the database after enabling modules:\n\n`magento setup:upgrade`\n\n- Update code and dependency injection configuration:\n\n`magento setup:di:compile`\n\n- Deploy static assets:\n\n`magento setup:static-content:deploy`\n\n- Enable maintenance mode:\n\n`magento maintenance:enable`\n\n- Disable maintenance mode:\n\n`magento maintenance:disable`\n\n- List all available commands:\n\n`magento list`\n"},"mailx":{"Platform":"all","Class":"network comm","Brief":"Send and receive mail.","MdText":"# mailx\n\n\u003e Send and receive mail.\n\n- Send mail (the content should be typed after the command, and ended with `Ctrl+D`):\n\n`mailx -s \"{{subject}}\" {{to_addr}}`\n\n- Send mail with content passed from another command:\n\n`echo \"{{content}}\" | mailx -s \"{{subject}}\" {{to_addr}}`\n\n- Send mail with content read from a file:\n\n`mailx -s \"{{subject}}\" {{to_addr}} \u003c {{content.txt}}`\n\n- Send mail to a recipient and CC to another address:\n\n`mailx -s \"{{subject}}\" -c {{cc_addr}} {{to_addr}}`\n\n- Send mail specifying the sender address:\n\n`mailx -s \"{{subject}}\" -r {{from_addr}} {{to_addr}}`\n\n- Send mail with an attachment:\n\n`mailx -a {{file}} -s \"{{subject}}\" {{to_addr}}`\n"},"make":{"Platform":"all","Class":"other cmds","Brief":"Task runner for targets described in Makefile.","MdText":"# make\n\n\u003e Task runner for targets described in Makefile.\n\u003e Mostly used to control the compilation of an executable from source code.\n\n- Call the first target specified in the Makefile (usually named \"all\"):\n\n`make`\n\n- Call a specific target:\n\n`make {{target}}`\n\n- Call a specific target, executing 4 jobs at a time in parallel:\n\n`make -j{{4}} {{target}}`\n\n- Use a specific Makefile:\n\n`make --file {{file}}`\n\n- Execute make from another directory:\n\n`make --directory {{directory}}`\n\n- Force making of a target, even if source files are unchanged:\n\n`make --always-make {{target}}`\n"},"man":{"Platform":"all","Class":"system man","Brief":"Format and display manual pages.","MdText":"# man\n\n\u003e Format and display manual pages.\n\n- Display man page for a command:\n\n`man {{command}}`\n\n- Display man page for a command from section 7:\n\n`man {{command}}.{{7}}`\n\n- Display path searched for manpages:\n\n`man --path`\n\n- Display location of a manpage rather than the manpage itself:\n\n`man -w {{command}}`\n\n- Do a keyword search for manpages containing a search string:\n\n`man -k {{keyword}}`\n"},"mc":{"Platform":"all","Class":"other cmds","Brief":"Midnight Commander, a terminal based file manager.","MdText":"# mc\n\n\u003e Midnight Commander, a terminal based file manager.\n\u003e Navigate the directory structure using the arrow keys, the mouse or by typing the commands into the terminal.\n\n- Start mc:\n\n`mc`\n\n- Start in black and white:\n\n`mc -b`\n"},"mdp":{"Platform":"all","Class":"file editor","Brief":"A command-line based tool to make presentations from markdown files.","MdText":"# mdp\n\n\u003e A command-line based tool to make presentations from markdown files.\n\n- Launch a presentation in the terminal from a markdown file:\n\n`mdp {{presentation.md}}`\n\n- Disable fading transitions:\n\n`mdp --nofade {{presentation.md}}`\n\n- Invert font colors to use in terminals with light background:\n\n`mdp --invert {{presentation.md}}`\n\n- Disable transparency in transparent terminals:\n\n`mdp --notrans {{presentation.md}}`\n"},"mediainfo":{"Platform":"all","Class":"other cmds","Brief":"Display metadata from video and audio files.","MdText":"# mediainfo\n\n\u003e Display metadata from video and audio files.\n\n- Display metadata for a given file in the console:\n\n`mediainfo {{file}}`\n\n- Store the output to a given file along with displaying in the console:\n\n`mediainfo --Logfile={{out.txt}} {{file}}`\n\n- Display the list of metadata attributes that can be extracted:\n\n`mediainfo --Info-Parameters`\n"},"meshlabserver":{"Platform":"all","Class":"other cmds","Brief":"Command line interface for the MeshLab 3D mesh processing software.","MdText":"# meshlabserver\n\n\u003e Command line interface for the MeshLab 3D mesh processing software.\n\n- Convert an STL file to an OBJ file:\n\n`meshlabserver -i {{input.stl}} -o {{output.obj}}`\n\n- Convert a WRL file to a OFF file, including the vertex and face normals in the output mesh:\n\n`meshlabserver -i {{input.wrl}} -o {{output.off}} -om vn fn`\n\n- Dump a list of all the available processing filters into a file:\n\n`meshlabserver -d {{filename}}`\n\n- Process a 3D file using a filter script created in the MeshLab GUI (Filters \u003e Show current filter script \u003e Save Script):\n\n`meshlabserver -i {{input.ply}} -o {{output.ply}} -s {{filter_script.mlx}}`\n\n- Process a 3D file using a filter script, writing the output of the filters into a log file:\n\n`meshlabserver -i {{input.x3d}} -o {{output.x3d}} -s {{filter_script.mlx}} -l {{logfile}}`\n"},"meteor":{"Platform":"all","Class":"other cmds","Brief":"Full-stack javascript platform for building web applications.","MdText":"# meteor\n\n\u003e Full-stack javascript platform for building web applications.\n\n- Run a meteor project from its root directory in development mode:\n\n`meteor`\n\n- Create a project under the given directory:\n\n`meteor create {{path/to/directory}}`\n\n- Display the list of packages the project is currently using:\n\n`meteor list`\n\n- Add a package to the project:\n\n`meteor add {{package_name}}`\n\n- Remove a package from the project:\n\n`meteor remove {{package_name}}`\n\n- Create a production build of the project as a tarball under the given directory:\n\n`meteor build {{path/to/directory}}`\n"},"micro":{"Platform":"all","Class":"file editor","Brief":"Micro is a modern and intuitive terminal-based text editor.","MdText":"# micro\n\n\u003e Micro is a modern and intuitive terminal-based text editor.\n\u003e You can use your keyboard, but also your mouse to navigate and/or select text.\n\n- Open a file:\n\n`micro {{file}}`\n\n- Cut the entire line:\n\n`Ctrl + K`\n\n- Search for a pattern in the file (press `Ctrl + N`/`Ctrl + P` to go to next/previous match):\n\n`Ctrl + F \"{{pattern}}\" \u003cEnter\u003e`\n\n- Execute a command:\n\n`Ctrl + E {{command}} \u003cEnter\u003e`\n\n- Perform a substitution in the whole file:\n\n`Ctrl + E replaceall \"{{pattern}}\" \"{{replacement}}\" \u003cEnter\u003e`\n\n- Quit:\n\n`Ctrl + Q`\n"},"mitmdump":{"Platform":"all","Class":"network comm","Brief":"View, record, and programmatically transform HTTP traffic.","MdText":"# mitmdump\n\n\u003e View, record, and programmatically transform HTTP traffic.\n\u003e The command-line counterpart to mitmproxy.\n\n- Start a proxy and save all output to a file:\n\n`mitmdump -w {{filename}}`\n\n- Filter a saved traffic file to just POST requests:\n\n`mitmdump -nr {{input_filename}} -w {{output_filename}} {{\"~m post\"}}`\n\n- Replay a saved traffic file:\n\n`mitmdump -nc {{filename}}`\n"},"mitmproxy":{"Platform":"all","Class":"network comm","Brief":"An interactive man-in-the-middle HTTP proxy.","MdText":"# mitmproxy\n\n\u003e An interactive man-in-the-middle HTTP proxy.\n\n- Start mitmproxy with default settings:\n\n`mitmproxy`\n\n- Start mitmproxy bound to custom address and port:\n\n`mitmproxy -b {{ip_address}} -p {{port}}`\n"},"mix":{"Platform":"all","Class":"other cmds","Brief":"Mix is a build tool that provides tasks for creating, compiling, and testing Elixir projects, managing its dependencies, and more.","MdText":"# mix\n\n\u003e Mix is a build tool that provides tasks for creating, compiling, and testing Elixir projects, managing its dependencies, and more.\n\n- Execute a particular file:\n\n`mix run {{my_script.exs}}`\n\n- Create a new project:\n\n`mix new {{project_name}}`\n\n- Compile project:\n\n`mix compile`\n\n- Run project tests:\n\n`mix test`\n\n- List all mix commands:\n\n`mix help`\n"},"mkdir":{"Platform":"all","Class":"file man","Brief":"Creates a directory.","MdText":"# mkdir\n\n\u003e Creates a directory.\n\n- Create a directory in current directory or given path:\n\n`mkdir {{directory}}`\n\n- Create directories recursively (useful for creating nested dirs):\n\n`mkdir -p {{path/to/directory}}`\n"},"mkfifo":{"Platform":"all","Class":"file trans","Brief":"Makes FIFOs (named pipes).","MdText":"# mkfifo\n\n\u003e Makes FIFOs (named pipes).\n\n- Create a named pipe at a given path:\n\n`mkfifo {{path/to/pipe}}`\n"},"mlr":{"Platform":"all","Class":"file editor","Brief":"Miller is like `awk`, `sed`, `cut`, `join`, and `sort` for name-indexed data such as CSV, TSV, and tabular JSON.","MdText":"# mlr\n\n\u003e Miller is like `awk`, `sed`, `cut`, `join`, and `sort` for name-indexed data such as CSV, TSV, and tabular JSON.\n\n- Pretty-print a CSV file in a tabular format:\n\n`mlr --icsv --opprint cat {{example.csv}}`\n\n- Receive JSON data and pretty print the output:\n\n`echo '{\"hello\":\"world\"}' | mlr --ijson --opprint cat`\n\n- Sort alphabetically on a field:\n\n`mlr --icsv --opprint sort -f {{field}} {{example.csv}}`\n\n- Sort in descending numerical order on a field:\n\n`mlr --icsv --opprint sort -nr {{field}} {{example.csv}}`\n\n- Convert CSV to JSON, performing calculations and display those calculations:\n\n`mlr --icsv --ojson put '${{newField1}} = ${{oldFieldA}}/${{oldFieldB}}' {{example.csv}}`\n\n- Receive JSON and format the output as vertical JSON:\n\n`echo '{\"hello\":\"world\", \"foo\":\"bar\"}' | mlr --ijson --ojson --jvstack cat`\n"},"mmv":{"Platform":"all","Class":"file man","Brief":"Move and rename files in bulk.","MdText":"# mmv\n\n\u003e Move and rename files in bulk.\n\n- Rename all files with a certain extension to a different extension:\n\n`mmv \"*{{.old_extension}}\" \"#1{{.new_extension}}\"`\n\n- Copy report6part4.txt to ./french/rapport6partie4.txt along with all similarly named files:\n\n`mmv -c {{\"report*part*.txt\"}} {{\"./french/rapport#1partie#2.txt\"}}`\n\n- Append all .txt files into one file:\n\n`mmv -a {{\"*.txt\"}} {{\"all.txt\"}}`\n\n- Convert dates in filenames from \"M-D-Y\" format to \"D-M-Y\" format:\n\n`mmv {{\"[0-1][0-9]-[0-3][0-9]-[0-9][0-9][0-9][0-9].txt\"}} {{\"#3#4-#1#2-#5#6#7#8.txt\"}}`\n"},"mocha":{"Platform":"all","Class":"other cmds","Brief":"Execute Mocha JavaScript test runner.","MdText":"# mocha\n\n\u003e Execute Mocha JavaScript test runner.\n\n- Run tests with default configuration or as configured in `mocha.opts`:\n\n`mocha`\n\n- Run tests contained at a specific location:\n\n`mocha {{directory/with/tests}}`\n\n- Run tests that match a specific grep pattern:\n\n`mocha --grep {{^regex$}}`\n\n- Run tests on changes to JavaScript files in the current directory and once initially:\n\n`mocha --watch`\n\n- Run tests with a specific reporter:\n\n`mocha --reporter {{reporter}}`\n"},"mongo":{"Platform":"all","Class":"other cmds","Brief":"MongoDB interactive shell client.","MdText":"# mongo\n\n\u003e MongoDB interactive shell client.\n\n- Connect to a database:\n\n`mongo {{database}}`\n\n- Connect to a database running on a given host on a given port:\n\n`mongo --host {{host}} --port {{port}} {{database}}`\n\n- Connect to a database with a given username; user will be prompted for password:\n\n`mongo --username {{username}} {{database}} --password`\n\n- Evaluate a javascript expression on the database:\n\n`mongo --eval '{{JSON.stringify(db.foo.findOne())}}' {{database}}`\n"},"mongod":{"Platform":"all","Class":"other cmds","Brief":"The MongoDB database server.","MdText":"# mongod\n\n\u003e The MongoDB database server.\n\n- Specify a config file:\n\n`mongod --config {{filename}}`\n\n- Specify the port to listen on:\n\n`mongod --port {{port}}`\n\n- Specify database profiling level. 0 is off, 1 is only slow operations, 2 is all:\n\n`mongod --profile {{0|1|2}}`\n"},"mongodump":{"Platform":"all","Class":"other cmds","Brief":"Utility to export the contents of a MongoDB instance.","MdText":"# mongodump\n\n\u003e Utility to export the contents of a MongoDB instance.\n\n- Create a dump of all databases (this will place the files inside a directory called \"dump\"):\n\n`mongodump`\n\n- Specify an output location for the dump:\n\n`mongodump --out {{path/to/directory}}`\n\n- Create a dump of a given database:\n\n`mongodump --db {{database_name}}`\n\n- Create a dump of a given collection within a given database:\n\n`mongodump --collection {{collection_name}} --db {{database_name}}`\n\n- Connect to a given host running on a given port, and create a dump:\n\n`mongodump --host {{host}} --port {{port}}`\n\n- Create a dump of a given database with a given username; user will be prompted for password:\n\n`mongodump --username {{username}} {{database}} --password`\n"},"mongorestore":{"Platform":"all","Class":"other cmds","Brief":"Utility to import a collection or database from a binary dump into a MongoDB instance.","MdText":"# mongorestore\n\n\u003e Utility to import a collection or database from a binary dump into a MongoDB instance.\n\n- Import a bson data dump from a directory to a MongoDB database:\n\n`mongorestore --db {{database_name}} {{path/to/directory}}`\n\n- Import a bson data dump from a directory to a given database in a MongoDB server host, running at a given port, with user authentication (user will be prompted for password):\n\n`mongorestore --host {{database_host:port}} --db {{database_name}} --username {{username}} {{path/to/directory}} --password`\n\n- Import a collection from a bson file to a MongoDB database:\n\n`mongorestore --db {{database_name}} {{path/to/file}}`\n\n- Import a collection from a bson file to a given database in a MongoDB server host, running at a given port, with user authentication (user will be prompted for password):\n\n`mongorestore --host {{database_host:port}} --db {{database_name}} --username {{username}} {{path/to/file}} --password`\n"},"monodevelop":{"Platform":"all","Class":"other cmds","Brief":"Cross platform IDE for C#, F# and more.","MdText":"# monodevelop\n\n\u003e Cross platform IDE for C#, F# and more.\n\u003e Homepage: \u003chttps://www.monodevelop.com/\u003e.\n\n- Start Monodevelop:\n\n`monodevelop`\n\n- Open a specific file:\n\n`monodevelop {{path/to/file}}`\n\n- Open a specific file with the caret at a specific position:\n\n`monodevelop {{path/to/file}};{{line_number}};{{column_number}}`\n\n- Force opening a new window instead of switching to an existing one:\n\n`monodevelop --new-window`\n\n- Disable redirection of stdout and stderr to a log file:\n\n`monodevelop --no-redirect`\n\n- Enable performance monitoring:\n\n`monodevelop --perf-log`\n"},"monodis":{"Platform":"all","Class":"other cmds","Brief":"The Mono Common Intermediate Language (CIL) disassembler.","MdText":"# monodis\n\n\u003e The Mono Common Intermediate Language (CIL) disassembler.\n\u003e Homepage: \u003chttps://www.mono-project.com/docs/tools+libraries/tools/monodis/\u003e.\n\n- Disassemble an assembly to textual CIL:\n\n`monodis {{path/to/assembly.exe}}`\n\n- Save the output to a file:\n\n`monodis --output={{path/to/output.il}} {{path/to/assembly.exe}}`\n\n- Show information about an assembly:\n\n`monodis --assembly {{path/to/assembly.dll}}`\n\n- List the references of an assembly:\n\n`monodis --assemblyref {{path/to/assembly.exe}}`\n\n- List all the methods in an assembly:\n\n`monodis --method {{path/to/assembly.exe}}`\n\n- Show a list of resources embedded within an assembly:\n\n`monodis --manifest {{path/to/assembly.dll}}`\n\n- Extract all the embedded resources to the current directory:\n\n`monodis --mresources {{path/to/assembly.dll}}`\n"},"monop":{"Platform":"all","Class":"other cmds","Brief":"Finds and displays signatures of Types and methods inside .NET assemblies.","MdText":"# monop\n\n\u003e Finds and displays signatures of Types and methods inside .NET assemblies.\n\n- Show the structure of a Type built-in of the .NET Framework:\n\n`monop {{System.String}}`\n\n- List the types in an assembly:\n\n`monop -r:{{path/to/assembly.exe}}`\n\n- Show the structure of a Type in a specific assembly:\n\n`monop -r:{{path/to/assembly.dll}} {{Namespace.Path.To.Type}}`\n\n- Only show members defined in the specified Type:\n\n`monop -r:{{path/to/assembly.dll}} --only-declared {{Namespace.Path.To.Type}}`\n\n- Show private members:\n\n`monop -r:{{path/to/assembly.dll}} --private {{Namespace.Path.To.Type}}`\n\n- Hide obsolete members:\n\n`monop -r:{{path/to/assembly.dll}} --filter-obsolete {{Namespace.Path.To.Type}}`\n\n- List the other assemblies that a specified assembly references:\n\n`monop -r:{{path/to/assembly.dll}} --refs`\n"},"more":{"Platform":"all","Class":"file man","Brief":"Open a file for interactive reading, allowing scrolling and search (in forward direction only).","MdText":"# more\n\n\u003e Open a file for interactive reading, allowing scrolling and search (in forward direction only).\n\n- Open a file:\n\n`more {{source_file}}`\n\n- Page down:\n\n`\u003cSpace\u003e`\n\n- Search for a string (press `n` to go to the next match):\n\n`/{{something}}`\n\n- Exit:\n\n`q`\n"},"moro":{"Platform":"all","Class":"other cmds","Brief":"Track work time.","MdText":"# moro\n\n\u003e Track work time.\n\n- Invoke `moro` without parameters, to set the current time as the start of the working day:\n\n`moro`\n\n- Specify a custom time for the start of the working day:\n\n`moro hi {{09:30}}`\n\n- Invoke `moro` without parameters a second time, to set the current time at the end of the working day:\n\n`moro`\n\n- Specify a custom time for the end of the working day:\n\n`moro bye {{17:30}}`\n\n- Add a note on the current working day:\n\n`moro note {{3 hours on project Foo}}`\n\n- Show a report of time logs and notes for the current working day:\n\n`moro report`\n\n- Show a report of time logs and notes for all working days on record:\n\n`moro report --all`\n"},"mosh":{"Platform":"all","Class":"system man","Brief":"Mobile Shell (`mosh`) is a robust and responsive replacement for SSH.","MdText":"# mosh\n\n\u003e Mobile Shell (`mosh`) is a robust and responsive replacement for SSH.\n\u003e `mosh` persists connections to remote servers while roaming between networks.\n\n- Connect to a remote server:\n\n`mosh {{username}}@{{remote_host}}`\n\n- Connect to a remote server with a specific identity (private key):\n\n`mosh --ssh=\"ssh -i {{/path/to/key_file}}\" {{username}}@{{remote_host}}`\n\n- Connect to a remote server using a specific port:\n\n`mosh --ssh=\"ssh -p {{2222}}\" {{username}}@{{remote_host}}`\n\n- Run a command on a remote server:\n\n`mosh {{remote_host}} -- {{command -with -flags}}`\n\n- Select Mosh UDP port (useful when `{{remote_host}}` is behind a NAT):\n\n`mosh -p {{124}} {{username}}@{{remote_host}}`\n\n- Usage when `mosh-server` binary is outside standard path:\n\n`mosh --server={{/path/to/bin/}}mosh-server {{remote_host}}`\n"},"mosquitto_pub":{"Platform":"all","Class":"network comm","Brief":"A simple MQTT version 3.1.1 client that will publish a single message on a topic and exit.","MdText":"# mosquitto_pub\n\n\u003e A simple MQTT version 3.1.1 client that will publish a single message on a topic and exit.\n\n- Publish a temperature value of 32 on the topic `sensors/temperature` to 192.168.1.1 (defaults to `localhost`) with Quality of Service (`QoS`) set to 1:\n\n`mosquitto_pub -h {{192.168.1.1}} -t {{sensors/temperature}} -m {{32}} -q {{1}}`\n\n- Publish timestamp and temperature data on the topic `sensors/temperature` to a remote host on a non-standard port:\n\n`mosquitto_pub -h {{192.168.1.1}} -p {{1885}} -t {{sensors/temperature}} -m {{\"1266193804 32\"}}`\n\n- Publish light switch status and retain the message on the topic `switches/kitchen_lights/status` to a remote host because there may be a long period of time between light switch events:\n\n`mosquitto_pub -r -h {{\"iot.eclipse.org\"}} -t {{switches/kitchen_lights/status}} -m {{\"on\"}}`\n\n- Send the contents of a file (`data.txt`) as a message and publish it to `sensors/temperature` topic:\n\n`mosquitto_pub -t {{sensors/temperature}} -f {{data.txt}}`\n\n- Send the contents of a file (`data.txt`), by reading from `stdin` and send the entire input as a message and publish it to `sensors/temperature` topic:\n\n`mosquitto_pub -t {{sensors/temperature}} -s \u003c {{data.txt}}`\n\n- Read newline delimited data from `stdin` as a message and publish it to `sensors/temperature` topic:\n\n`{{echo data.txt}} | mosquitto_pub -t {{sensors/temperature}} -l`\n"},"most":{"Platform":"all","Class":"file man","Brief":"Open one or several files for interactive reading, allowing scrolling and search.","MdText":"# most\n\n\u003e Open one or several files for interactive reading, allowing scrolling and search.\n\n- Open a file:\n\n`most {{path/to/file}}`\n\n- Open several files:\n\n`most {{path/to/file1}} {{path/to/file2}}`\n\n- Open a file at the first occurrence of \"string\":\n\n`most {{file}} +/{{string}}`\n\n- Move through opened files:\n\n`:O n`\n\n- Jump to the 100th line:\n\n`{{100}}j`\n\n- Edit current file:\n\n`e`\n\n- Split the current window in half:\n\n`\u003cCTRL-x\u003e o`\n\n- Exit:\n\n`Q`\n"},"mount":{"Platform":"all","Class":"disk man","Brief":"Provides access to an entire filesystem in one directory.","MdText":"# mount\n\n\u003e Provides access to an entire filesystem in one directory.\n\n- Show all mounted filesystems:\n\n`mount`\n\n- Mount a device to a directory:\n\n`mount -t {{filesystem_type}} {{path/to/device_file}} {{path/to/target_directory}}`\n\n- Mount a CD-ROM device (with the filetype ISO9660) to /cdrom (readonly):\n\n`mount -t {{iso9660}} -o ro {{/dev/cdrom}} {{/cdrom}}`\n\n- Mount all the filesystem defined in /etc/fstab:\n\n`mount -a`\n\n- Mount a specific filesystem described in /etc/fstab (e.g. \"/dev/sda1 /my_drive ext2 defaults 0 2\"):\n\n`mount {{/my_drive}}`\n"},"mp4box":{"Platform":"all","Class":"other cmds","Brief":"MPEG-4 Systems Toolbox - Muxes streams into MP4 container.","MdText":"# mp4box\n\n\u003e MPEG-4 Systems Toolbox - Muxes streams into MP4 container.\n\n- Display information about an existing MP4 file:\n\n`mp4box -info {{filename}}`\n\n- Add an SRT subtitle file into an MP4 file:\n\n`mp4box -add {{input_subs.srt}}:lang=eng -add {{input.mp4}} {{output.mp4}}`\n\n- Combine audio from one file and video from another:\n\n`mp4box -add {{input1.mp4}}#audio -add {{input2.mp4}}#video {{output.mp4}`\n"},"mpc":{"Platform":"all","Class":"other cmds","Brief":"Music Player Client.","MdText":"# mpc\n\n\u003e Music Player Client.\n\u003e Program for controlling the Music Player Daemon (MPD).\n\n- Toggle play/pause:\n\n`mpc toggle`\n\n- Stop playing:\n\n`mpc stop`\n\n- Show information about the currently playing song:\n\n`mpc status`\n\n- Play next song:\n\n`mpc next`\n\n- Play previous song:\n\n`mpc prev`\n\n- Forward or rewind the currently playing song:\n\n`mpc [+-]{{seconds}}`\n"},"mr":{"Platform":"all","Class":"other cmds","Brief":"Myrepos manages all your version control repositories at once.","MdText":"# mr\n\n\u003e Myrepos manages all your version control repositories at once.\n\n- Register a repository:\n\n`mr register`\n\n- Update repositories in 5 concurent jobs:\n\n`mr -j{{5}} update`\n\n- Print the status of all repositories:\n\n`mr status`\n\n- Checkout all repositories to the latest version:\n\n`mr checkout`\n"},"msbuild":{"Platform":"all","Class":"other cmds","Brief":"The Microsoft build tool for Visual Studio project solutions.","MdText":"# msbuild\n\n\u003e The Microsoft build tool for Visual Studio project solutions.\n\n- Build the first project file in the current directory:\n\n`msbuild`\n\n- Build a specific project file:\n\n`msbuild {{path/to/project_file}}`\n\n- Set one or more semicolon-separated targets to build:\n\n`msbuild {{path/to/project_file}} /target:{{targets}}`\n\n- Set one or more semicolon-separated properties:\n\n`msbuild {{path/to/project_file}} /property:{{name=value}}`\n\n- Set the build tools version to use:\n\n`msbuild {{path/to/project_file}} /toolsversion:{{version}}`\n\n- Display detailed information at the end of the log about how the project was configured:\n\n`msbuild {{path/to/project_file}} /detailedsummary`\n\n- Display detailed help information:\n\n`msbuild /help`\n"},"mutt":{"Platform":"all","Class":"network comm","Brief":"Command-line email client.","MdText":"# mutt\n\n\u003e Command-line email client.\n\n- Open the specified mailbox:\n\n`mutt -f {{mailbox}}`\n\n- Send an email and specify a subject and a cc recipient:\n\n`mutt -s {{subject}} -c {{cc@example.com}} {{recipient@example.com}}`\n\n- Send an email with files attached:\n\n`mutt -a {{file1}} {{file2}} -- {{recipient@example.com}}`\n\n- Specify a file to include as the message body:\n\n`mutt -i {{file}} {{recipient@example.com}}`\n\n- Specify a draft file containing the header and the body of the message, in RFC 5322 format:\n\n`mutt -H {{file}} {{recipient@example.com}}`\n"},"mv":{"Platform":"all","Class":"file man","Brief":"Move or rename files and directories.","MdText":"# mv\n\n\u003e Move or rename files and directories.\n\n- Move files in arbitrary locations:\n\n`mv {{source}} {{target}}`\n\n- Do not prompt for confirmation before overwriting existing files:\n\n`mv -f {{source}} {{target}}`\n\n- Prompt for confirmation before overwriting existing files, regardless of file permissions:\n\n`mv -i {{source}} {{target}}`\n\n- Do not overwrite existing files at the target:\n\n`mv -n {{source}} {{target}}`\n\n- Move files in verbose mode, showing files after they are moved:\n\n`mv -v {{source}} {{target}}`\n"},"mvn":{"Platform":"all","Class":"other cmds","Brief":"Apache Maven.","MdText":"# mvn\n\n\u003e Apache Maven.\n\u003e Tool for building and managing Java-based projects.\n\n- Compile a project:\n\n`mvn compile`\n\n- Compile and package the compiled code in its distributable format, such as a `jar`:\n\n`mvn package`\n\n- Compile and package, skipping unit tests:\n\n`mvn package -Dmaven.test.skip=true`\n\n- Install the built package in local maven repository. (This will invoke the compile and package commands too):\n\n`mvn install`\n\n- Delete build artifacts from the target directory:\n\n`mvn clean`\n\n- Do a clean and then invoke the package phase:\n\n`mvn clean package`\n\n- Clean and then package the code with a given build profile:\n\n`mvn clean -P{{profile}} package`\n\n- Run a class with a main method:\n\n`mvn exec:java -Dexec.mainClass=\"{{com.example.Main}}\" -Dexec.args=\"{{arg1 arg2}}\"`\n"},"nano":{"Platform":"all","Class":"file editor","Brief":"Simple, easy to use editor. An enhanced, free Pico clone.","MdText":"# nano\n\n\u003e Simple, easy to use editor. An enhanced, free Pico clone.\n\n- Start nano in terminal with {filename}:\n\n`nano {{filename}}`\n\n- Enable smooth scrolling:\n\n`nano -S {{filename}}`\n\n- Indent new lines to the previous lines' indentation:\n\n`nano -i {{filename}}`\n"},"nasm":{"Platform":"all","Class":"other cmds","Brief":"The Netwide Assembler, a portable 80x86 assembler.","MdText":"# nasm\n\n\u003e The Netwide Assembler, a portable 80x86 assembler.\n\n- Assemble `source.asm` into a binary file `source`, in the (default) raw binary format:\n\n`nasm {{source.asm}}`\n\n- Assemble `source.asm` into a binary file `output_file`, in the specified format:\n\n`nasm -f {{format}} {{source.asm}} -o {{output_file}}`\n\n- List valid output formats (along with basic nasm help):\n\n`nasm -hf`\n\n- Assemble and generate an assembly listing file:\n\n`nasm -l {{list_file}} {{source.asm}}`\n\n- Add a directory (must be written with trailing slash) to the include file search path before assembling:\n\n`nasm -i {{/path/to/include_dir/}} {{source.asm}}`\n"},"nc":{"Platform":"all","Class":"file trans","Brief":"Netcat is a versatile utility for working with TCP or UDP data.","MdText":"# nc\n\n\u003e Netcat is a versatile utility for working with TCP or UDP data.\n\n- Listen on a specified port and print any data received:\n\n`nc -l {{port}}`\n\n- Connect to a certain port (you can then write to this port):\n\n`nc {{ip_address}} {{port}}`\n\n- Set a timeout:\n\n`nc -w {{timeout_in_seconds}} {{ipaddress}} {{port}}`\n\n- Serve a file:\n\n`nc -l {{port}} \u003c {{file}}`\n\n- Receive a file:\n\n`nc {{ip_address}} {{port}} \u003e {{file}}`\n\n- Server stay up after client detach:\n\n`nc -k -l {{port}}`\n\n- Client stay up after EOF:\n\n`nc -q {{timeout}} {{ip_address}}`\n\n- Scan the open ports of a specified host:\n\n`nc -v -z {{ip_address}} {{port}}`\n\n- Act as proxy and forward data from a local TCP port to the given remote host:\n\n`nc -l {{local_port}} | nc {{hostname}} {{remote_port}}`\n"},"ncmpcpp":{"Platform":"all","Class":"other cmds","Brief":"A command line music player client for the Music Player Daemon.","MdText":"# ncmpcpp\n\n\u003e A command line music player client for the Music Player Daemon.\n\n- Connect to a music player daemon on a given host and port:\n\n`ncmpcpp --host {{ip}} --port {{port}}`\n\n- Display metadata of the current song to console:\n\n`ncmpcpp --current-song`\n\n- Use a specified configuration file:\n\n`ncmpcpp --config {{file}}`\n\n- Use a different set of key bindings from a file:\n\n`ncmpcpp --bindings {{file}}`\n"},"ned":{"Platform":"all","Class":"file editor","Brief":"Is like `grep` but with powerful replace capabilities.","MdText":"# ned\n\n\u003e Is like `grep` but with powerful replace capabilities.\n\u003e Unlike `sed`, as it isn't restricted to line oriented editing.\n\n- Recursively search starting in the current directory, ignoring case:\n\n`ned --ignore-case --recursive '{{^[dl]og}}' {{.}}`\n\n- Search always showing colored output:\n\n`ned --colors '{{^[dl]og}}' {{.}}`\n\n- Search never showing colored output:\n\n`ned --colors=never '{{^[dl]og}}' {{.}}`\n\n- Search ignoring certain files:\n\n`ned --recursive --exclude '{{*.htm}}' '{{^[dl]og}}' {{.}}`\n\n- Simple replace:\n\n`ned '{{dog}}' --replace '{{cat}}' {{.}}`\n\n- Replace using numbered group references:\n\n`ned '{{the ([a-z]+) dog and the ([a-z]+) dog}}' --replace '{{the $2 dog and the $1 dog}}' {{.}}`\n\n- Replace changing case:\n\n`ned '{{([a-z]+) dog}}' --case-replacements --replace '{{\\U$1\\E! dog}}' --stdout {{.}}`\n\n- Preview results of a find and replace without updating the target files:\n\n`ned '{{^[sb]ad}}' --replace '{{happy}}' --stdout {{.}}`\n"},"neofetch":{"Platform":"all","Class":"system man","Brief":"CLI tool to display information about your operating system, software and hardware.","MdText":"# neofetch\n\n\u003e CLI tool to display information about your operating system, software and hardware.\n\n- Return the default config, and create it if it's the first time the program runs:\n\n`neofetch`\n\n- Trigger an info line from appearing in the output, where 'infoname' is the function name in the config file, e.g. memory:\n\n`neofetch --{{enable|disable}} {{infoname}}`\n\n- Hide/Show OS architecture:\n\n`neofetch --os_arch {{on|off}}`\n\n- Enable/Disable CPU brand in output:\n\n`neofetch --cpu_brand {{on|off}}`\n"},"ng":{"Platform":"all","Class":"other cmds","Brief":"Command Line Interface (CLI) for creating and managing Angular applications.","MdText":"# ng\n\n\u003e Command Line Interface (CLI) for creating and managing Angular applications.\n\n- Create a new Angular application inside a directory:\n\n`ng new {{project_name}}`\n\n- Add a new component to one's application:\n\n`ng generate component {{component_name}}`\n\n- Add a new class to one's application:\n\n`ng generate class {{class_name}}`\n\n- Add a new directive to one's application:\n\n`ng generate directive {{directive_name}}`\n\n- Run the application with the following command in its root directory:\n\n`ng serve`\n\n- Build the application:\n\n`ng build`\n\n- Run unit tests:\n\n`ng test`\n\n- Check the version of your current Angular installation:\n\n`ng version`\n"},"nginx":{"Platform":"all","Class":"network comm","Brief":"Nginx web server.","MdText":"# nginx\n\n\u003e Nginx web server.\n\u003e Homepage: \u003chttps://nginx.org/en/\u003e.\n\n- Start server with the default config file:\n\n`nginx`\n\n- Start server with a custom config file:\n\n`nginx -c {{config_file}}`\n\n- Start server with a prefix for all relative paths in the config file:\n\n`nginx -c {{config_file}} -p {{prefix/for/relative/paths}}`\n\n- Test the configuration without affecting the running server:\n\n`nginx -t`\n\n- Reload the configuration by sending a signal with no downtime:\n\n`nginx -s reload`\n"},"ngrep":{"Platform":"all","Class":"file editor","Brief":"Filter network traffic packets using regular expressions.","MdText":"# ngrep\n\n\u003e Filter network traffic packets using regular expressions.\n\n- Capture traffic of all interfaces:\n\n`ngrep -d any`\n\n- Capture traffic of a specific interface:\n\n`ngrep -d {{eth0}}`\n\n- Capture traffic crossing port 22 of interface eth0:\n\n`ngrep -d {{eth0}} port {{22}}`\n\n- Capture traffic from or to a host:\n\n`ngrep host {{www.example.com}}`\n\n- Filter keyword 'User-Agent:' of interface eth0:\n\n`ngrep -d {{eth0}} '{{User-Agent:}}'`\n"},"nice":{"Platform":"all","Class":"system settings","Brief":"Execute a program with a custom scheduling priority (niceness).","MdText":"# nice\n\n\u003e Execute a program with a custom scheduling priority (niceness).\n\u003e Niceness values range from -20 (the highest priority) to 19 (the lowest).\n\n- Launch a program with altered priority:\n\n`nice -n {{niceness_value}} {{command}}`\n"},"nimble":{"Platform":"all","Class":"other cmds","Brief":"Package manager for the Nim programming language.","MdText":"# nimble\n\n\u003e Package manager for the Nim programming language.\n\u003e Manage Nim projects and their dependencies.\n\n- Search for packages:\n\n`nimble search {{search_string}}`\n\n- Install a package:\n\n`nimble install {{package_name}}`\n\n- List installed packages:\n\n`nimble list -i`\n\n- Create a new Nimble package in the current directory:\n\n`nimble init`\n\n- Build a Nimble package:\n\n`nimble build`\n\n- Install a Nimble package:\n\n`nimble install`\n"},"nix-env":{"Platform":"all","Class":"other cmds","Brief":"Manipulate or query Nix user environments.","MdText":"# nix-env\n\n\u003e Manipulate or query Nix user environments.\n\n- List all installed packages:\n\n`nix-env -q`\n\n- Query installed packages:\n\n`nix-env -q {{search_term}}`\n\n- Query available packages:\n\n`nix-env -qa {{search_term}}`\n\n- Install package:\n\n`nix-env -i {{pkg_name}}`\n\n- Uninstall package:\n\n`nix-env -e {{pkg_name}}`\n\n- Upgrade one package:\n\n`nix-env -u {{pkg_name}}`\n\n- Upgrade all packages:\n\n`nix-env -u`\n"},"nl":{"Platform":"all","Class":"file editor","Brief":"A utility for numbering lines, either from a file, or from standard input.","MdText":"# nl\n\n\u003e A utility for numbering lines, either from a file, or from standard input.\n\n- Number non-blank lines in a file:\n\n`nl {{file}}`\n\n- Read from standard output:\n\n`cat {{file}} | nl {{options}} -`\n\n- Number only the lines with printable text:\n\n`nl -t {{file}}`\n\n- Number all lines including blank lines:\n\n`nl -b a {{file}}`\n\n- Number only the body lines that match a basic regular expression (BRE) pattern:\n\n`nl -b p'FooBar[0-9]' {{file}}`\n"},"nohup":{"Platform":"all","Class":"other cmds","Brief":"Allows for a process to live when the terminal gets killed.","MdText":"# nohup\n\n\u003e Allows for a process to live when the terminal gets killed.\n\n- Run process that can live beyond the terminal:\n\n`nohup {{command options}}`\n"},"noti":{"Platform":"all","Class":"other cmds","Brief":"Monitor a process and trigger a banner notification.","MdText":"# noti\n\n\u003e Monitor a process and trigger a banner notification.\n\n- Display a notification when tar finishes compressing files:\n\n`noti {{tar -cjf example.tar.bz2 example/}}`\n\n- Display a notification even when you put it after the command to watch:\n\n`{{command_to_watch}}; noti`\n\n- Monitor a process by PID and trigger a notification when the PID disappears:\n\n`noti -w {{process_id}}`\n"},"npm-why":{"Platform":"all","Class":"other cmds","Brief":"Identifies why an npm package is installed.","MdText":"# npm-why\n\n\u003e Identifies why an npm package is installed.\n\u003e Homepage: \u003chttps://www.npmjs.com/package/npm-why\u003e.\n\n- Show why an npm package is installed:\n\n`npm-why {{package-name}}`\n"},"nproc":{"Platform":"all","Class":"system settings","Brief":"Print the number of processing units (normally CPUs) available.","MdText":"# nproc\n\n\u003e Print the number of processing units (normally CPUs) available.\n\n- Display the number of available processing units:\n\n`nproc`\n\n- Display the number of installed processing units, including any inactive ones:\n\n`nproc --all`\n\n- If possible, subtract a given number of units from the returned value:\n\n`nproc --ignore {{count}}`\n"},"npx":{"Platform":"all","Class":"other cmds","Brief":"Execute binaries from `npm` packages.","MdText":"# npx\n\n\u003e Execute binaries from `npm` packages.\n\n- Execute the binary from a given npm module:\n\n`npx {{module_name}}`\n\n- In case a package has multiple binaries, specify the package name along with the binary:\n\n`npx -p {{package_name}} {{module_name}}`\n\n- View help contents:\n\n`npx --help`\n"},"nslookup":{"Platform":"all","Class":"other cmds","Brief":"Query name server(s) for various domain records.","MdText":"# nslookup\n\n\u003e Query name server(s) for various domain records.\n\n- Query your system's default name server for an IP address (A record) of the domain:\n\n`nslookup {{example.com}}`\n\n- Query a given name server for a NS record of the domain:\n\n`nslookup -type=NS {{example.com}} {{8.8.8.8}}`\n\n- Query for a reverse lookup (PTR record) of an IP address:\n\n`nslookup -type=PTR {{54.240.162.118}}`\n\n- Query for ANY available records using TCP protocol:\n\n`nslookup -vc -type=ANY {{example.com}} `\n\n- Query a given name server for the whole zone file (zone transfer) of the domain using TCP protocol:\n\n`nslookup -vc -type=AXFR {{example.com}} {{name_server}}`\n\n- Query for a mail server (MX record) of the domain, showing details of the transaction:\n\n`nslookup -type=MX -debug {{example.com}}`\n\n- Query a given name server on a specific port number for a TXT record of the domain:\n\n`nslookup -port={{port_number}} -type=TXT {{example.com}} {{name_server}}`\n"},"numfmt":{"Platform":"all","Class":"file editor","Brief":"Convert numbers to and from human-readable strings.","MdText":"# numfmt\n\n\u003e Convert numbers to and from human-readable strings.\n\n- Convert 1.5K (SI Units) to 1500:\n\n`numfmt --from={{si}} {{1.5K}}`\n\n- Convert 5th field (1-indexed) to IEC Units without converting header:\n\n`ls -l | numfmt --header={{1}} --field={{5}} --to={{iec}}`\n\n- Convert to IEC units, pad with 5 characters, left aligned:\n\n`du -s * | numfmt --to={{iec}} --format={{\"%-5f\"}}`\n"},"nvim":{"Platform":"all","Class":"file editor","Brief":"Neovim, a programmer's text editor based on Vim, provides several modes for different kinds of text manipulation.","MdText":"# nvim\n\n\u003e Neovim, a programmer's text editor based on Vim, provides several modes for different kinds of text manipulation.\n\u003e Pressing `i` enters edit mode. `\u003cEsc\u003e` goes back to normal mode, which doesn't allow regular text insertion.\n\n- Open a file:\n\n`nvim {{file}}`\n\n- Enter text editing mode (insert mode):\n\n`\u003cEsc\u003ei`\n\n- Copy (\"yank\") or cut (\"delete\") the current line (paste it with `P`):\n\n`\u003cEsc\u003e{{yy|dd}}`\n\n- Undo the last operation:\n\n`\u003cEsc\u003eu`\n\n- Search for a pattern in the file (press `n`/`N` to go to next/previous match):\n\n`\u003cEsc\u003e/{{search_pattern}}\u003cEnter\u003e`\n\n- Perform a regex substitution in the whole file:\n\n`\u003cEsc\u003e:%s/{{pattern}}/{{replacement}}/g\u003cEnter\u003e`\n\n- Save (write) the file, and quit:\n\n`\u003cEsc\u003e:wq\u003cEnter\u003e`\n\n- Quit without saving:\n\n`\u003cEsc\u003e:q!\u003cEnter\u003e`\n"},"nvm":{"Platform":"all","Class":"other cmds","Brief":"Install, uninstall or switch between Node.js versions.","MdText":"# nvm\n\n\u003e Install, uninstall or switch between Node.js versions.\n\u003e Supports version numbers like \"0.12\" or \"v4.2\", and labels like \"stable\", \"system\", etc.\n\u003e Homepage: \u003chttps://github.com/creationix/nvm\u003e.\n\n- Install a specific version of Node.js:\n\n`nvm install {{node_version}}`\n\n- Use a specific version of Node.js in the current shell:\n\n`nvm use {{node_version}}`\n\n- Set the default Node.js version:\n\n`nvm alias default {{node_version}}`\n\n- List all available Node.js versions and highlight the default one:\n\n`nvm list`\n\n- Uninstall a given Node.js version:\n\n`nvm uninstall {{node_version}}`\n\n- Launch the REPL of a specific version of Node.js:\n\n`nvm run {{node_version}} --version`\n\n- Execute a script in a specific version of Node.js:\n\n`nvm exec {{node_version}} node {{app.js}}`\n"},"objdump":{"Platform":"all","Class":"file editor","Brief":"View information about object files.","MdText":"# objdump\n\n\u003e View information about object files.\n\n- Display the file header information:\n\n`objdump -f {{binary}}`\n\n- Display the dis-assembled output of executable sections:\n\n`objdump -d {{binary}}`\n\n- Display a complete binary hex dump of all sections:\n\n`objdump -s {{binary}}`\n"},"odps":{"Platform":"all","Class":"other cmds","Brief":"Aliyun ODPS (Open Data Processing Service) command line tool.","MdText":"# odps\n\n\u003e Aliyun ODPS (Open Data Processing Service) command line tool.\n\n- Start the command line with a custom configuration file:\n\n`odpscmd --config={{odps_config.ini}}`\n\n- Switch current project:\n\n`use {{project_name}};`\n\n- Show tables in the current project:\n\n`show tables;`\n\n- Describe a table:\n\n`desc {{table_name}};`\n\n- Show table partitions:\n\n`show partitions {{table_name}};`\n\n- Describe a partition:\n\n`desc {{table_name}} partition ({{partition_spec}});`\n"},"odps-func":{"Platform":"all","Class":"other cmds","Brief":"Manage functions in ODPS (Open Data Processing Service).","MdText":"# odps func\n\n\u003e Manage functions in ODPS (Open Data Processing Service).\n\n- Show functions in the current project:\n\n`list functions;`\n\n- Create a Java function using a .jar resource:\n\n`create function {{func_name}} as {{path.to.package.Func}} using '{{package.jar}}';`\n\n- Create a Python function using a .py resource:\n\n`create function {{func_name}} as {{script.Func}} using '{{script.py}}';`\n\n- Delete a function:\n\n`drop function {{func_name}};`\n"},"odps-inst":{"Platform":"all","Class":"other cmds","Brief":"Manage instances in ODPS (Open Data Processing Service).","MdText":"# odps inst\n\n\u003e Manage instances in ODPS (Open Data Processing Service).\n\n- Show instances created by current user:\n\n`show instances;`\n\n- Describe the details of an instance:\n\n`desc instance {{instance_id}};`\n\n- Check the status of an instance:\n\n`status {{instance_id}};`\n\n- Wait on the termination of an instance, printing log and progress information until then:\n\n`wait {{instance_id}};`\n\n- Kill an instance:\n\n`kill {{instance_id}};`\n"},"odps-table":{"Platform":"all","Class":"other cmds","Brief":"Create and modify tables in ODPS (Open Data Processing Service).","MdText":"# odps table\n\n\u003e Create and modify tables in ODPS (Open Data Processing Service).\n\n- Create a table with partition and lifecycle:\n\n`create table {{table_name}} ({{col}} {{type}}) partitioned by ({{col}} {{type}}) lifecycle {{days}};`\n\n- Create a table based on the definition of another table:\n\n`create table {{table_name}} like {{another_table}};`\n\n- Add partition to a table:\n\n`alter table {{table_name}} add partition ({{partition_spec}});`\n\n- Delete partition from a table:\n\n`alter table {{table_name}} drop partition ({{partition_spec}});`\n\n- Delete table:\n\n`drop table {{table_name}};`\n"},"odps-tunnel":{"Platform":"all","Class":"other cmds","Brief":"Data tunnel in ODPS (Open Data Processing Service).","MdText":"# odps tunnel\n\n\u003e Data tunnel in ODPS (Open Data Processing Service).\n\n- Download table to local file:\n\n`tunnel download {{table_name}} {{file}};`\n\n- Upload local file to a table partition:\n\n`tunnel upload {{file}} {{table_name}}/{{partition_spec}};`\n\n- Upload table specifying field and record delimiters:\n\n`tunnel upload {{file}} {{table_name}} -fd {{field_delim}} -rd {{record_delim}};`\n\n- Upload table using multiple threads:\n\n`tunnel upload {{file}} {{table_name}} -threads {{num}};`\n"},"openssl":{"Platform":"all","Class":"network comm","Brief":"OpenSSL cryptographic toolkit.","MdText":"# openssl\n\n\u003e OpenSSL cryptographic toolkit.\n\n- Generate a 2048bit RSA private key and save it to a file:\n\n`openssl genrsa -out {{filename.key}} 2048`\n\n- Generate a certificate signing request to be sent to a certificate authority:\n\n`openssl req -new -sha256 -key {{filename.key}} -out {{filename.csr}}`\n\n- Generate a self-signed certificate from a certificate signing request valid for some number of days:\n\n`openssl x509 -req -days {{days}} -in {{filename.csr}} -signkey {{filename.key}} -out {{filename.crt}}`\n\n- Display certificate information:\n\n`openssl x509 -in {{filename.crt}} -noout -text`\n\n- Display the start and expiry dates for a domain's certificate:\n\n`openssl s_client -connect {{host}}:{{port}} 2\u003e/dev/null | openssl x509 -noout -dates`\n\n- Display the certificate presented by an SSL/TLS server:\n\n`openssl s_client -connect {{host}}:{{port}} \u003c/dev/null`\n\n- Display the complete certificate chain of an HTTPS server:\n\n`openssl s_client -connect {{host}}:443 -showcerts \u003c/dev/null`\n"},"opt":{"Platform":"all","Class":"other cmds","Brief":"A tool that takes LLVM source files and runs specified optimizations and/or analyses on them.","MdText":"# opt\n\n\u003e A tool that takes LLVM source files and runs specified optimizations and/or analyses on them.\n\n- Run an optimization or analysis on a bitcode file:\n\n`opt -{{passname}} {{path/to/file.bc}} -S -o {{file_opt.bc}}`\n\n- Output the Control Flow Graph of a function to a \"dot\" file:\n\n`opt {{-dot-cfg}} -S {{path/to/file.bc}} -disable-output`\n\n- Optimize the program at level 2 and output the result to another file:\n\n`opt -O2 {{path/to/file.bc}} -S -o {{path/to/output_file.bc}}`\n"},"optipng":{"Platform":"all","Class":"other cmds","Brief":"PNG image file optimization utility.","MdText":"# optipng\n\n\u003e PNG image file optimization utility.\n\n- Compress a PNG with default settings:\n\n`optipng {{path/to/file.png}}`\n\n- Compress a PNG with best compression:\n\n`optipng -o{{7}} {{path/to/file.png}}`\n\n- Compress a PNG with fastest compression:\n\n`optipng -o{{0}} {{path/to/file.png}}`\n\n- Compress a PNG and add interlacing:\n\n`optipng -i {{1}} {{path/to/file.png}}`\n\n- Compress a PNG and preserve all metadata (including file timestamps):\n\n`optipng -preserve {{path/to/file.png}}`\n\n- Compress a PNG and remove all metadata:\n\n`optipng -strip all {{path/to/file.png}}`\n"},"p4":{"Platform":"all","Class":"other cmds","Brief":"Perforce Version Control System.","MdText":"# p4\n\n\u003e Perforce Version Control System.\n\n- Log in to the Perforce service:\n\n`p4 login -a`\n\n- Create a client:\n\n`p4 client`\n\n- Copy files from depot into the client workspace:\n\n`p4 sync`\n\n- Create or edit changelist description:\n\n`p4 change`\n\n- Open a file to edit:\n\n`p4 edit -c {{changelist_number}} {{file_name}}`\n\n- Open a new file to add it to the depot:\n\n`p4 add`\n\n- Display list of files modified by changelist:\n\n`p4 describe -c {{changelist_number}}`\n\n- Submit a changelist to the depot:\n\n`p4 submit -c {{changelist_number}}`\n"},"p5":{"Platform":"all","Class":"other cmds","Brief":"P5js template builder and sketch manager.","MdText":"# p5\n\n\u003e P5js template builder and sketch manager.\n\n- Create a new p5 collection:\n\n`p5 new {{collection_name}}`\n\n- Generate a new p5 project (should be run from collection directory):\n\n`p5 generate {{project_name}}`\n\n- Run the p5 manager server:\n\n`p5 server`\n\n- Update libraries to their latest versions:\n\n`p5 update`\n"},"pandoc":{"Platform":"all","Class":"file editor","Brief":"Convert documents between various formats.","MdText":"# pandoc\n\n\u003e Convert documents between various formats.\n\n- Convert file to pdf (the output format is determined by file extension):\n\n`pandoc {{input.md}} -o {{output.pdf}}`\n\n- Force conversion to use a specific format:\n\n`pandoc {{input.docx}} --to {{markdown_github}} -o {{output.md}}`\n\n- Convert to a standalone file with the appropriate headers/footers (for LaTeX, HTML, etc.):\n\n`pandoc {{input.md}} -s -o {{output.tex}}`\n\n- List all supported input formats:\n\n`pandoc --list-input-formats`\n\n- List all supported output formats:\n\n`pandoc --list-output-formats`\n"},"parallel":{"Platform":"all","Class":"other cmds","Brief":"Run commands on multiple CPU cores.","MdText":"# parallel\n\n\u003e Run commands on multiple CPU cores.\n\n- Gzip several files at once, using all cores:\n\n`parallel gzip ::: {{file1}} {{file2}} {{file3}}`\n\n- Read arguments from stdin, run 4 jobs at once:\n\n`ls *.txt | parallel -j4 gzip`\n\n- Convert JPG images to PNG using replacement strings:\n\n`parallel convert {} {.}.png ::: *.jpg`\n\n- Parallel xargs, cram as many args as possible onto one command:\n\n`{{args}} | parallel -X {{command}}`\n\n- Break stdin into ~1M blocks, feed each block to stdin of new command:\n\n`cat {{big_file.txt}} | parallel --pipe --block 1M {{command}}`\n\n- Run on multiple machines via SSH:\n\n`parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}`\n"},"passwd":{"Platform":"all","Class":"system settings","Brief":"Passwd is a tool used to change a user's password.","MdText":"# passwd\n\n\u003e Passwd is a tool used to change a user's password.\n\n- Change the password of the current user:\n\n`passwd {{new_password}}`\n\n- Change the password of the specified user:\n\n`passwd {{username}} {{new_password}}`\n\n- Get the current status of the user:\n\n`passwd -S`\n\n- Make the password of the account blank (it will set the named account passwordless):\n\n`passwd -d`\n"},"patch":{"Platform":"all","Class":"system man","Brief":"Patch a file (or files) with a diff file.","MdText":"# patch\n\n\u003e Patch a file (or files) with a diff file.\n\u003e Note that diff files contain both the target filenames and list of changes.\n\n- Apply a patch:\n\n`patch \u003c {{patch_file}}.diff`\n\n- Apply a patch to current directory:\n\n`patch -p1 \u003c {{patch_file}}.diff`\n\n- Apply the reverse of a patch:\n\n`patch -R \u003c {{patch_file}}.diff`\n"},"pathchk":{"Platform":"all","Class":"system man","Brief":"Check the validity and portability of one or more pathnames.","MdText":"# pathchk\n\n\u003e Check the validity and portability of one or more pathnames.\n\n- Check pathames for validity in the current system:\n\n`pathchk {{path1 path2 …}}`\n\n- Check pathnames for validity on a wider range of POSIX compliant systems:\n\n`pathchk -p {{path1 path2 …}}`\n\n- Check pathnames for validity on all POSIX compliant systems:\n\n`pathchk --portability {{path1 path2 …}}`\n\n- Only check for empty pathnames or leading dashes (-):\n\n`pathchk -P {{path1 path2 …}}`\n"},"pax":{"Platform":"all","Class":"other cmds","Brief":"Archiving and copying utility.","MdText":"# pax\n\n\u003e Archiving and copying utility.\n\n- List the contents of an archive:\n\n`pax -f {{archive.tar}}`\n\n- List the contents of a gzipped archive:\n\n`pax -zf {{archive.tar.gz}}`\n\n- Create an archive from files:\n\n`pax -wf {{target.tar}} {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}`\n\n- Create an archive from files, using output redirection:\n\n`pax -w {{path/to/file1}} {{path/to/file2}} {{path/to/file3}} \u003e {{target.tar}}`\n\n- Extract an archive into the current directory:\n\n`pax -rf {{source.tar}}`\n\n- Copy to a directory, while keeping the original metadata; `target/` must exist:\n\n`pax -rw {{path/to/file1}} {{path/to/dir1}} {{path/to/dir2}} {{target/}}`\n"},"pdfjoin":{"Platform":"all","Class":"file editor","Brief":"PDF merging utility.","MdText":"# pdfjoin\n\n\u003e PDF merging utility.\n\n- Merge two PDFs:\n\n`pdfjoin {{file1}} {{file2}} --outfile {{output_file}}`\n\n- Save pages 3 to 5 followed by page 1 to a new PDF:\n\n`pdfjoin {{file 3-5,1}} --outfile {{output_file}}`\n\n- Merge subranges from two PDFs:\n\n`pdfjoin {{file1 3-5,1}} {{file2 4-6}} --outfile {{output_file}}`\n"},"pdfposter":{"Platform":"all","Class":"file editor","Brief":"Convert a large-sheeted pdf into multiple A4 pages for printing.","MdText":"# pdfposter\n\n\u003e Convert a large-sheeted pdf into multiple A4 pages for printing.\n\n- Convert an A2 poster into 4 A4 pages:\n\n`pdfposter --poster-size a2 {{input_file.pdf}} {{output_file.pdf}}`\n\n- Scale an A4 poster to A3 and then generate 2 A4 pages:\n\n`pdfposter --scale 2 {{input_file.pdf}} {{output_file.pdf}}`\n"},"pdftk":{"Platform":"all","Class":"file editor","Brief":"PDF toolkit.","MdText":"# pdftk\n\n\u003e PDF toolkit.\n\n- Extract pages 1-3, 5 and 6-10 from a PDF file and save them as another one:\n\n`pdftk {{input.pdf}} cat {{1-3 5 6-10}} output {{output.pdf}}`\n\n- Merge (concatenate) a list of PDF files and save the result as another one:\n\n`pdftk {{file1.pdf file2.pdf …}} cat output {{output.pdf}}`\n\n- Split each page of a PDF file into a separate file, with a given filename output pattern:\n\n`pdftk {{input.pdf}} burst output {{out_%d.pdf}}`\n\n- Rotate all pages by 180 degrees clockwise:\n\n`pdftk {{input.pdf}} cat {{1-endsouth}} output {{output.pdf}}`\n\n- Rotate third page by 90 degrees clockwise and leave others unchanged:\n\n`pdftk {{input.pdf}} cat {{1-2 3east 4-end}} output {{output.pdf}}`\n"},"pdftotext":{"Platform":"all","Class":"file editor","Brief":"Convert PDF files to plain text format.","MdText":"# pdftotext\n\n\u003e Convert PDF files to plain text format.\n\n- Convert filename.pdf to plain text and print it to standard output:\n\n`pdftotext {{filename.pdf}} -`\n\n- Convert filename.pdf to plain text and save it as filename.txt:\n\n`pdftotext {{filename.pdf}}`\n\n- Convert input.pdf to plain text and save it as output.txt:\n\n`pdftotext {{input.pdf}} {{output.txt}}`\n\n- Convert pages 2, 3 and 4 of input.pdf to plain text and save them as output.txt:\n\n`pdftotext -f {{2}} -l {{4}} {{input.pdf}} {{output.txt}}`\n"},"pdfunite":{"Platform":"all","Class":"file editor","Brief":"PDF merging utility.","MdText":"# pdfunite\n\n\u003e PDF merging utility.\n\n- Merge 2 PDFs into a single PDF:\n\n`pdfunite {{path/to/fileA.pdf}} {{path/to/fileB.pdf}} {{path/to/merged_output.pdf}}`\n\n- Merge a directory of PDFs into a single PDF:\n\n`pdfunite {{path/to/directory/*.pdf}} {{path/to/merged_output.pdf}}`\n"},"perl":{"Platform":"all","Class":"other cmds","Brief":"The Perl 5 language interpreter.","MdText":"# perl\n\n\u003e The Perl 5 language interpreter.\n\n- Parse and execute a Perl script:\n\n`perl {{script.pl}}`\n\n- Check syntax errors on a Perl script:\n\n`perl -c {{script.pl}}`\n\n- Parse and execute a perl statement:\n\n`perl -e {{perl_statement}}`\n\n- Run a Perl script in debug mode, using `perldebug`:\n\n`perl -d {{script.pl}}`\n\n- Loo[p] over all lines of a file, editing them [i]n-place using a find/replace [e]xpression:\n\n`perl -p -i -e 's/{{find}}/{{replace}}/g' {{filename}}`\n\n- Run a find/replace expression on a file, saving the original file with a given extension:\n\n`perl -p -i'.old' -e 's/{{find}}/{{replace}}/g' {{filename}}`\n\n- Run a multi-line find/replace expression on a file, and save the result in another file:\n\n`perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} \u003e {{output_file}}`\n"},"pg_ctl":{"Platform":"all","Class":"other cmds","Brief":"Utility for controlling a PostgreSQL server and database cluster.","MdText":"# pg_ctl\n\n\u003e Utility for controlling a PostgreSQL server and database cluster.\n\n- Start a PostgreSQL server:\n\n`pg_ctl -D {{data_directory}} -l {{log_file_name}}`\n\n- Initialize a PostgreSQL database cluster:\n\n`pg_ctl -D {{data_directory}} init`\n\n- Stop a PostgreSQL server:\n\n`pg_ctl -D {{data_directory}} stop`\n\n- Restart a PostgreSQL server:\n\n`pg_ctl -D {{data_directory}} restart`\n"},"pg_restore":{"Platform":"all","Class":"other cmds","Brief":"Restore a PostgreSQL database from an archive file created by pg_dump.","MdText":"# pg_restore\n\n\u003e Restore a PostgreSQL database from an archive file created by pg_dump.\n\n- Restore an archive into an existing database:\n\n`pg_restore -d {{db_name}} {{archive_file.dump}}`\n\n- Same as above, customize username:\n\n`pg_restore -U {{username}} -d {{db_name}} {{archive_file.dump}}`\n\n- Same as above, customize host and port:\n\n`pg_restore -h {{host}} -p {{port}} -d {{db_name}} {{archive_file.dump}}`\n\n- Clean database objects before creating them:\n\n`pg_restore --clean -d {{db_name}} {{archive_file.dump}}`\n\n- Use multiple jobs to do the restoring:\n\n`pg_restore -j {{2}} -d {{db_name}} {{archive_file.dump}}`\n"},"pgrep":{"Platform":"all","Class":"system man","Brief":"Find or signal process by name.","MdText":"# pgrep\n\n\u003e Find or signal process by name.\n\n- Return PIDs of any running processes with a matching command string:\n\n`pgrep {{process_name}}`\n\n- Search full command line with parameters instead of just the process name:\n\n`pgrep -f \"{{process_name}} {{parameter}}\"`\n\n- Search for process run by a specific user:\n\n`pgrep -u root {{process_name}}`\n"},"phing":{"Platform":"all","Class":"other cmds","Brief":"A PHP build tool based on Apache Ant.","MdText":"# phing\n\n\u003e A PHP build tool based on Apache Ant.\n\n- Perform the default task in the \"build.xml\" file:\n\n`phing`\n\n- Initialise a new build file:\n\n`phing -i {{path/to/build.xml}}`\n\n- Perform a specific task:\n\n`phing {{task_name}}`\n\n- Specify a custom build file path:\n\n`phing -f {{path/to/build.xml}} {{task_name}}`\n\n- Specify a log file to output to:\n\n`phing -b {{path/to/log_file}} {{task_name}}`\n\n- Specify custom properties to use in the build:\n\n`phing -D{{property}}={{value}} {{task_name}}`\n\n- Specify a custom listener class:\n\n`phing -listener {{class_name}} {{task_name}}`\n\n- Build using verbose output:\n\n`phing -verbose {{task_name}}`\n"},"phive":{"Platform":"all","Class":"other cmds","Brief":"The Phar Installation and Verification Environment for secure PHP application deployment.","MdText":"# phive\n\n\u003e The Phar Installation and Verification Environment for secure PHP application deployment.\n\n- Display a list of available aliased Phars:\n\n`phive list`\n\n- Install a specified Phar to the local directory:\n\n`phive install {{alias|url}}`\n\n- Install a specified Phar globally:\n\n`phive install {{alias|url}} --global`\n\n- Install a specified Phar to a target directory:\n\n`phive install {{alias|url}} --target {{path/to/directory}}`\n\n- Update all Phar files to the latest version:\n\n`phive update`\n\n- Remove a specified Phar file:\n\n`phive remove {{alias|url}}`\n\n- Remove unused Phar files:\n\n`phive purge`\n\n- List all available commands:\n\n`phive help`\n"},"php-artisan":{"Platform":"all","Class":"other cmds","Brief":"Laravel's Artisan command line interface.","MdText":"# php artisan\n\n\u003e Laravel's Artisan command line interface.\n\n- Start PHP's built-in web server for the current Laravel application:\n\n`php artisan serve`\n\n- Start an interactive PHP command line interface:\n\n`php artisan tinker`\n\n- Generate a new Eloquent model class with a migration, factory and resource controller:\n\n`php artisan make:model {{ModelName}} --all`\n\n- Display a list of all available commands:\n\n`php artisan help`\n"},"phpcpd":{"Platform":"all","Class":"other cmds","Brief":"A copy and paste detector for PHP code.","MdText":"# phpcpd\n\n\u003e A copy and paste detector for PHP code.\n\n- Analyse duplicated code for a specific file or directory:\n\n`phpcpd {{path/to/file_or_directory}}`\n\n- Analyse using fuzzy matching for variable names:\n\n`phpcpd --fuzzy {{path/to/file_or_directory}}`\n\n- Specify a minimum number of identical lines (defaults to 5):\n\n`phpcpd --min-lines {{number_of_lines}} {{path/to/file_or_directory}}`\n\n- Specify a minimum number of identical tokens (defaults to 70):\n\n`phpcpd --min-tokens {{number_of_tokens}} {{path/to/file_or_directory}}`\n\n- Exclude a directory from analysis (must be relative to the source):\n\n`phpcpd --exclude {{path/to/excluded_directory}} {{path/to/file_or_directory}}`\n\n- Output the results to a PHP-CPD XML file:\n\n`phpcpd --log-pmd {{path/to/log_file}} {{path/to/file_or_directory}}`\n"},"phpcs":{"Platform":"all","Class":"other cmds","Brief":"Tokenize PHP, JavaScript and CSS files to detect violations of a defined set of coding standards.","MdText":"# phpcs\n\n\u003e Tokenize PHP, JavaScript and CSS files to detect violations of a defined set of coding standards.\n\n- Sniff the specified directory for issues (defaults to the PEAR standard):\n\n`phpcs {{path/to/directory}}`\n\n- Display a list of installed coding standards:\n\n`phpcs -i`\n\n- Specify a coding standard to validate against:\n\n`phpcs {{path/to/directory}} --standard {{standard}}`\n\n- Specify file extension(s) to include when sniffing:\n\n`phpcs {{path/to/directory}} --extensions {{file_extension(s)}}`\n\n- Specify the format of the output report (e.g. `full`, `xml`, `json`, `summary`):\n\n`phpcs {{path/to/directory}} --report {{format}}`\n\n- Set config variables to be used during the process:\n\n`phpcs {{path/to/directory}} --config-set {{key}} {{value}}`\n\n- A comma-separated list of files to load before processing:\n\n`phpcs {{path/to/directory}} --bootstrap {{file(s)}}`\n\n- Don't recurse into subdirectories:\n\n`phpcs {{path/to/directory}} -l`\n"},"phploc":{"Platform":"all","Class":"other cmds","Brief":"A tool for quickly measuring the size and analyzing the structure of a PHP project.","MdText":"# phploc\n\n\u003e A tool for quickly measuring the size and analyzing the structure of a PHP project.\n\n- Analyse a directory and print the result:\n\n`phploc {{path/to/directory}}`\n\n- Include only specific files from a comma-separated list (globs are allowed):\n\n`phploc {{path/to/directory}} --names {{files}}`\n\n- Exclude specific files from a comma-separated list (globs are allowed):\n\n`phploc {{path/to/directory}} --names-exclude {{files}}`\n\n- Exclude a specific directory from analysis:\n\n`phploc {{path/to/directory}} --exclude {{path/to/exclude_directory}}`\n\n- Log the results to a specific CSV file:\n\n`phploc {{path/to/directory}} --log-csv {{path/to/file}}`\n\n- Log the results to a specific XML file:\n\n`phploc {{path/to/directory}} --log-xml {{path/to/file}}`\n\n- Count PHPUnit test case classes and test methods:\n\n`phploc {{path/to/directory}} --count-tests`\n"},"phpmd":{"Platform":"all","Class":"other cmds","Brief":"A PHP mess detector that checks for common potential problems.","MdText":"# phpmd\n\n\u003e A PHP mess detector that checks for common potential problems.\n\n- Display a list of available rulesets and formats:\n\n`phpmd`\n\n- Scan a file or directory for problems using comma-separated rulesets:\n\n`phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}}`\n\n- Specify the minimum priority threshold for rules:\n\n`phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --minimumpriority {{priority}}`\n\n- Include only the specified extensions in analysis:\n\n`phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --suffixes {{extensions}}`\n\n- Exclude the specified comma-separated directories:\n\n`phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --exclude {{directory_patterns}}`\n\n- Output the results to a file instead of stdout:\n\n`phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --reportfile {{path/to/report_file}}`\n\n- Ignore the use of warning-suppressive PHPDoc comments:\n\n`phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --strict`\n"},"phpstan":{"Platform":"all","Class":"other cmds","Brief":"A PHP static analysis tool to discover bugs in code.","MdText":"# phpstan\n\n\u003e A PHP static analysis tool to discover bugs in code.\n\n- Display available options for analysis:\n\n`phpstan analyse --help`\n\n- Analyse the specified space-separated directories:\n\n`phpstan analyse {{path/to/directory}}`\n\n- Analyse a directory using a configuration file:\n\n`phpstan analyse {{path/to/directory}} --configuration {{path/to/config}}`\n\n- Analyse using a specific rule level (0-7, higher is stricter):\n\n`phpstan analyse {{path/to/directory}} --level {{level}}`\n\n- Specify an autoload file to load before analysing:\n\n`phpstan analyse {{path/to/directory}} --autoload-file {{path/to/autoload_file}}`\n\n- Specify a memory limit during analysis:\n\n`phpstan analyse {{path/to/directory}} --memory-limit {{memory_limit}}`\n"},"pigz":{"Platform":"all","Class":"file compress","Brief":"Multithreaded zlib compression utility.","MdText":"# pigz\n\n\u003e Multithreaded zlib compression utility.\n\n- Compress a file with default options:\n\n`pigz {{filename}}`\n\n- Compress a file using the best compression method:\n\n`pigz -9 {{filename}}`\n\n- Compress a file using no compression and 4 processors:\n\n`pigz -0 -p{{4}} {{filename}}`\n\n- Decompress a file:\n\n`pigz -d {{archive.gz}}`\n\n- List the contents of an archive:\n\n`pigz -l {{archive.tar.gz}}`\n"},"pinky":{"Platform":"all","Class":"file man","Brief":"Print user information using the `finger` protocol.","MdText":"# pinky\n\n\u003e Print user information using the `finger` protocol.\n\n- Display details about the current user:\n\n`pinky`\n\n- Display details for a specific user:\n\n`pinky {{user}}`\n\n- Display details in the long format:\n\n`pinky {{user}} -l`\n\n- Omit the user's home directory and shell in long format:\n\n`pinky {{user}} -lb`\n\n- Omit the user's project file in long format:\n\n`pinky {{user}} -lh`\n\n- Omit the column headings in short format:\n\n`pinky {{user}} -f`\n"},"pip":{"Platform":"all","Class":"file trans","Brief":"Python package manager.","MdText":"# pip\n\n\u003e Python package manager.\n\u003e Homepage: \u003chttps://pip.pypa.io\u003e.\n\n- Install a package:\n\n`pip install {{package_name}}`\n\n- Install a specific version of a package:\n\n`pip install {{package_name}}=={{package_version}}`\n\n- Upgrade a package:\n\n`pip install -U {{package_name}}`\n\n- Uninstall a package:\n\n`pip uninstall {{package_name}}`\n\n- Save installed packages to file:\n\n`pip freeze \u003e {{requirements.txt}}`\n\n- Install packages from file:\n\n`pip install -r {{requirements.txt}}`\n\n- Show installed package info:\n\n`pip show {{package_name}}`\n"},"pipenv":{"Platform":"all","Class":"file trans","Brief":"Simple and unified Python development workflow.","MdText":"# pipenv\n\n\u003e Simple and unified Python development workflow.\n\u003e Manages packages and the virtual environment for a project.\n\u003e Homepage: \u003chttps://pypi.org/project/pipenv\u003e.\n\n- Create a new project:\n\n`pipenv`\n\n- Create a new project using Python 3:\n\n`pipenv --three`\n\n- Install a package:\n\n`pipenv install {{package_name}}`\n\n- Install all the dependencies for a project (including dev):\n\n`pipenv install --dev`\n\n- Uninstall a package:\n\n`pipenv uninstall {{package_name}}`\n\n- Start a shell within the created virtual environment:\n\n`pipenv shell`\n\n- Generate a requirements.txt for a project:\n\n`pipenv lock --requirements`\n"},"pm2":{"Platform":"all","Class":"other cmds","Brief":"Process manager for Node.js.","MdText":"# pm2\n\n\u003e Process manager for Node.js.\n\u003e Used for log management, monitoring and configuring processes.\n\n- Start a process with a name that can be used for later operations:\n\n`pm2 start {{app.js}} --name {{myapp}}`\n\n- List processes:\n\n`pm2 list`\n\n- Monitor all processes:\n\n`pm2 monit`\n\n- Stop a process:\n\n`pm2 stop {{myapp}}`\n\n- Restart a process:\n\n`pm2 restart {{myapp}}`\n"},"printenv":{"Platform":"all","Class":"system settings","Brief":"Print values of all or specific environment variables.","MdText":"# printenv\n\n\u003e Print values of all or specific environment variables.\n\n- Display key-value pairs of all environment variables:\n\n`printenv`\n\n- Display the value of a specific variable:\n\n`printenv {{HOME}}`\n\n- Display the value of a variable and end with NUL instead of newline:\n\n`printenv --null {{HOME}}`\n"},"printf":{"Platform":"all","Class":"file editor","Brief":"Format and print text.","MdText":"# printf\n\n\u003e Format and print text.\n\n- Print a text message:\n\n`printf {{\"%s\\n\"}} {{\"Hello world\"}}`\n\n- Print an integer in bold blue:\n\n`printf {{\"\\e[1;34m%.3d\\e[0m\\n\"}} {{42}}`\n\n- Print a float number with the unicode Euro sign:\n\n`printf {{\"\\u20AC %.2f\\n\"}} {{123.4}}`\n\n- Print a text message composed with environment variables:\n\n`printf {{\"var1: %s\\tvar2: %s\\n\"}} {{\"$VAR1\"}} {{\"$VAR2\"}}`\n\n- Store a formatted message in a variable (does not work on zsh):\n\n`printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}`\n"},"prosodyctl":{"Platform":"all","Class":"other cmds","Brief":"The control tool for the Prosody XMPP server.","MdText":"# prosodyctl\n\n\u003e The control tool for the Prosody XMPP server.\n\u003e Homepage: \u003chttps://prosody.im/doc/prosodyctl/\u003e.\n\n- Show the status of the Prosody server:\n\n`sudo prosodyctl status`\n\n- Reload the server's configuration files:\n\n`sudo prosodyctl reload`\n\n- Add a user to the Prosody XMPP server:\n\n`sudo prosodyctl adduser {{user@example.com}}`\n\n- Set a user's password:\n\n`sudo prosodyctl passwd {{user@example.com}}`\n\n- Permanently delete a user:\n\n`sudo prosodyctl deluser {{user@example.com}}`\n"},"protoc":{"Platform":"all","Class":"other cmds","Brief":"Parse Google Protobuf `.proto` files and generate output in the specified language.","MdText":"# protoc\n\n\u003e Parse Google Protobuf `.proto` files and generate output in the specified language.\n\n- Generate Python code from a `.proto` file:\n\n`protoc --python_out={{path/to/output_directory}} {{input_file.proto}}`\n\n- Generate Java code from a `.proto` file that imports other `.proto` files:\n\n`protoc --java_out={{path/to/output_directory}} --proto_path={{path/to/import_search_path}} {{input_file.proto}}`\n\n- Generate code for multiple languages:\n\n`protoc --csharp_out={{path/to/c#_output_directory}} --js_out={{path/to/js_output_directory}} {{input_file.proto}}`\n"},"ps":{"Platform":"all","Class":"system man","Brief":"Information about running processes.","MdText":"# ps\n\n\u003e Information about running processes.\n\n- List all running processes:\n\n`ps aux`\n\n- List all running processes including the full command string:\n\n`ps auxww`\n\n- Search for a process that matches a string:\n\n`ps aux | grep {{string}}`\n\n- List all processes of the current user in extra full format:\n\n`ps --user $(id -u) -F`\n\n- List all processes of the current user as a tree:\n\n`ps --user $(id -u) f`\n\n- Get the parent pid of a process:\n\n`ps -o ppid= -p {{pid}}`\n"},"psql":{"Platform":"all","Class":"other cmds","Brief":"PostgreSQL command-line client.","MdText":"# psql\n\n\u003e PostgreSQL command-line client.\n\n- Connect to database. It connects to localhost using default port 5432 with default user as currently logged in user:\n\n`psql {{database}}`\n\n- Connect to database on given server host running on given port with given username, without a password prompt:\n\n`psql -h {{host}} -p {{port}} -U {{username}} {{database}}`\n\n- Connect to database; user will be prompted for password:\n\n`psql -h {{host}} -p {{port}} -U {{username}} -W {{database}}`\n\n- Execute a single SQL query or PostgreSQL command on the given database (useful in shell scripts):\n\n`psql -c '{{query}}' {{database}}`\n\n- Execute commands from a file on the given database:\n\n`psql {{database}} -f {{file.sql}}`\n"},"pt":{"Platform":"all","Class":"file man","Brief":"Platinum Searcher.","MdText":"# pt\n\n\u003e Platinum Searcher.\n\u003e A code search tool similar to `ag`.\n\n- Find files containing \"foo\" and print the files with highlighted matches:\n\n`pt {{foo}}`\n\n- Find files containing \"foo\" and display count of matches in each file:\n\n`pt -c {{foo}}`\n\n- Find files containing \"foo\" as a whole word and ignore its case:\n\n`pt -wi {{foo}}`\n\n- Find \"foo\" in files with a given extension using a regular expression:\n\n`pt -G='{{\\.bar$}}' {{foo}}`\n\n- Find files whose contents match the regular expression, up to 2 directories deep:\n\n`pt --depth={{2}} -e '{{^ba[rz]*$}}'`\n"},"pv":{"Platform":"all","Class":"file man","Brief":"Monitor the progress of data through a pipe.","MdText":"# pv\n\n\u003e Monitor the progress of data through a pipe.\n\n- Print the contents of the file and display a progress bar:\n\n`pv {{file}}`\n\n- Measure the speed and amount of data flow between pipes (`-s` is optional):\n\n`command1 | pv -s {{expected_amount_of_data_for_eta}} | command2`\n\n- Filter a file, see both progress and amount of output data:\n\n`pv -cN in {{big_text_file}} | grep {{pattern}} | pv -cN out \u003e {{filtered_file}}`\n\n- Attach to an already running process and see its file reading progress:\n\n`pv -d {{PID}}`\n\n- Read an erroneous file, skip errors as `dd conv=sync,noerror` would:\n\n`pv -EE {{path/to/faulty_media}} \u003e image.img`\n\n- Stop reading after reading specified amount of data, rate limit to 1K/s:\n\n`pv -L 1K -S {{maximum_file_size_to_be_read}}`\n"},"pycodestyle":{"Platform":"all","Class":"other cmds","Brief":"A tool to check Python code against PEP 8 style conventions.","MdText":"# pycodestyle\n\n\u003e A tool to check Python code against PEP 8 style conventions.\n\n- Check the style of a single file:\n\n`pycodestyle {{file.py}}`\n\n- Check the style of multiple files:\n\n`pycodestyle {{file1.py}} {{file2.py}} {{file3.py}}`\n\n- Show only the first occurrence of an error:\n\n`pycodestyle --first {{file.py}}`\n\n- Show the source code for each error:\n\n`pycodestyle --show-source {{file.py}}`\n\n- Show the specific PEP 8 text for each error:\n\n`pycodestyle --show-pep8 {{file.py}}`\n"},"pyenv":{"Platform":"all","Class":"other cmds","Brief":"Switch between multiple versions of Python easily.","MdText":"# pyenv\n\n\u003e Switch between multiple versions of Python easily.\n\n- List all available commands:\n\n`pyenv commands`\n\n- List all Python versions under the ${PYENV_ROOT}/versions directory:\n\n`pyenv versions`\n\n- Install a Python version under the ${PYENV_ROOT}/versions directory:\n\n`pyenv install {{2.7.10}}`\n\n- Uninstall a Python version under the ${PYENV_ROOT}/versions directory:\n\n`pyenv uninstall {{2.7.10}}`\n\n- Set Python version to be used globally in the current machine:\n\n`pyenv global {{2.7.10}}`\n\n- Set Python version to be used in the current directory and all directories below it:\n\n`pyenv local {{2.7.10}}`\n"},"pyenv-virtualenv":{"Platform":"all","Class":"other cmds","Brief":"Create virtual environments based on one's installed Python distributions.","MdText":"# pyenv virtualenv\n\n\u003e Create virtual environments based on one's installed Python distributions.\n\n- Create a new Python 3.6.6 virtual environment:\n\n`pyenv virtualenv {{3.6.6}} {{my-virtual-env-3.6.6}}`\n\n- List all existing virtual environments:\n\n`pyenv virtualenvs`\n"},"pyflakes":{"Platform":"all","Class":"other cmds","Brief":"Checks Python source code files for errors.","MdText":"# pyflakes\n\n\u003e Checks Python source code files for errors.\n\n- Check a single Python file:\n\n`pyflakes check {{path/to/file}}.py`\n\n- Check Python files in a specific directory:\n\n`pyflakes checkPath {{path/to/directory}}`\n\n- Check Python files in a directory recursively:\n\n`pyflakes checkRecursive {{path/to/directory}}`\n\n- Check all Python files found in multiple directories:\n\n`pyflakes iterSourceCode {{path/to/directory_1}} {{path/to/directory_2}}`\n"},"pygmentize":{"Platform":"all","Class":"other cmds","Brief":"Python-based syntax highlighter.","MdText":"# pygmentize\n\n\u003e Python-based syntax highlighter.\n\n- Highlight file syntax and print to standard output (language is inferred from the file extension):\n\n`pygmentize {{file.py}}`\n\n- Explicitly set the language for syntax highlighting:\n\n`pygmentize -l {{javascript}} {{input_file}}`\n\n- List available lexers (processors for input languages):\n\n`pygmentize -L lexers`\n\n- Save output to a file in HTML format:\n\n`pygmentize -f html -o {{output_file.html}} {{input_file.py}}`\n\n- List available output formats:\n\n`pygmentize -L formatters`\n\n- Output an HTML file, with additional formatter options (full page, with line numbers):\n\n`pygmentize -f html -O \"full,linenos=True\" -o {{output_file.html}} {{input_file}}`\n"},"python":{"Platform":"all","Class":"other cmds","Brief":"Python language interpreter.","MdText":"# python\n\n\u003e Python language interpreter.\n\n- Call a Python interactive shell (REPL):\n\n`python`\n\n- Execute script in a given Python file:\n\n`python {{script.py}}`\n\n- Execute script as part of an interactive shell:\n\n`python -i {{script.py}}`\n\n- Execute a Python expression:\n\n`python -c \"{{expression}}\"`\n\n- Run library module as a script (terminates option list):\n\n`python -m {{module}} {{arguments}}`\n\n- Interactively debug a Python script:\n\n`python -m pdb {{script.py}}`\n"},"q":{"Platform":"all","Class":"other cmds","Brief":"Execute SQL-like queries on .csv and .tsv files.","MdText":"# q\n\n\u003e Execute SQL-like queries on .csv and .tsv files.\n\n- Query .csv file by specifying the delimiter as ',':\n\n`q -d',' \"SELECT * from {{path/to/file}}\"`\n\n- Query .tsv file:\n\n`q -t \"SELECT * from {{path/to/file}}\"`\n\n- Query file with header row:\n\n`q -d{{delimiter}} -H \"SELECT * from {{path/to/file}}\"`\n\n- Read data from stdin; '-' in the query represents the data from stdin:\n\n`{{output}} | q \"select * from -\"`\n\n- Join two files (aliased as `f1` and `f2` in the example) on column `c1`, a common column:\n\n`q \"SELECT * FROM {{path/to/file}} f1 JOIN {{path/to/other_file}} f2 ON (f1.c1 = f2.c1)\"`\n\n- Format output using an output delimiter with an output header line (note: command will output column names based on the input file header or the column aliases overridden in the query):\n\n`q -D{{delimiter}} -O \"SELECT {{column}} as {{alias}} from {{path/to/file}}\"`\n"},"qemu":{"Platform":"all","Class":"other cmds","Brief":"Generic machine emulator and virtualizer.","MdText":"# qemu\n\n\u003e Generic machine emulator and virtualizer.\n\u003e Supports a large variety of CPU architectures.\n\u003e Homepage: \u003chttps://www.qemu.org\u003e.\n\n- Boot from image emulating i386 architecture:\n\n`qemu-system-i386 -hda {{image_name.img}}`\n\n- Boot from image emulating x64 architecture:\n\n`qemu-system-x86_64 -hda {{image_name.img}}`\n\n- Boot QEMU instance with a live ISO image:\n\n`qemu-system-i386 -hda {{image_name.img}} -cdrom {{os_image.iso}} -boot d`\n\n- Specify amount of RAM for instance:\n\n`qemu-system-i386 -m 256 -hda image_name.img -cdrom os-image.iso -boot d`\n\n- Boot from physical device (e.g. from USB to test bootable medium):\n\n`qemu-system-i386 -hda /dev/{{storage_device}}`\n"},"qemu-img":{"Platform":"all","Class":"other cmds","Brief":"Tool for Quick Emulator Virtual HDD image creation and manipulation.","MdText":"# qemu-img\n\n\u003e Tool for Quick Emulator Virtual HDD image creation and manipulation.\n\n- Create disk image with a specific size (in gigabytes):\n\n`qemu-img create {{image_name.img}} {{gigabites}}G`\n\n- Show information about a disk image:\n\n`qemu-img info {{image_name.img}}`\n\n- Increase or decrease image size:\n\n`qemu-img resize {{image_name.img}} {{gigabites}}G`\n\n- Dump the allocation state of every sector of the specified disk image:\n\n`qemu-img map {{image_name.img}}`\n"},"qpdf":{"Platform":"all","Class":"other cmds","Brief":"Versatile PDF transformation software.","MdText":"# qpdf\n\n\u003e Versatile PDF transformation software.\n\n- Extract pages 1-3, 5 and 6-10 from a PDF file and save them as another one:\n\n`qpdf --empty --pages {{input.pdf}} {{1-3,5,6-10}} -- {{output.pdf}}`\n\n- Merge (concatenate) a list of PDF files and save the result as another one:\n\n`qpdf --empty --pages {{file1.pdf}} {{1,6-8}} --pages {{file2.pdf}} {{3,4,5}} -- {{output.pdf}}`\n\n- Write each group of n pages to a separate output file with a given filename pattern:\n\n`qpdf --split-pages=n {{input.pdf}} {{out_%d.pdf}}`\n\n- Rotate certain pages of a pdf with a given angle:\n\n`qpdf --rotate={{90:2,4,6}} --rotate={{180:7-8}} {{input.pdf}} {{output.pdf}}`\n\n- Remove the password from a password protected file:\n\n`qpdf --password={{password}} --decrypt {{input.pdf}} {{output.pdf}}`\n"},"quota":{"Platform":"all","Class":"disk maint","Brief":"Display users' disk space usage and allocated limits.","MdText":"# quota\n\n\u003e Display users' disk space usage and allocated limits.\n\n- Show disk quotas in human readable units for the current user:\n\n`quota -s`\n\n- Verbose output (also display quotas on filesystems where no storage is allocated):\n\n`quota -v`\n\n- Quiet output (only display quotas on filesystems where usage is over quota):\n\n`quota -q`\n\n- Print quotas for the groups of which the current user is a member:\n\n`quota -g`\n\n- Show disk quotas for another user:\n\n`sudo quota -u {{username}}`\n"},"rabin2":{"Platform":"all","Class":"other cmds","Brief":"Get information about binary files (ELF, PE, Java CLASS, Mach-O) - symbols, sections, linked libraries, etc.","MdText":"# rabin2\n\n\u003e Get information about binary files (ELF, PE, Java CLASS, Mach-O) - symbols, sections, linked libraries, etc.\n\u003e Comes bundled with `radare2`.\n\n- Display general information about a binary (architecture, type, endianness):\n\n`rabin2 -I {{path/to/binary}}`\n\n- Display linked libraries:\n\n`rabin2 -l {{path/to/binary}}`\n\n- Display symbols imported from libraries:\n\n`rabin2 -i {{path/to/binary}}`\n\n- Display strings contained in the binary:\n\n`rabin2 -z {{path/to/binary}}`\n\n- Display the output in JSON:\n\n`rabin2 -j -I {{path/to/binary}}`\n"},"rails-generate":{"Platform":"all","Class":"other cmds","Brief":"Generate new Rails templates in an existing project.","MdText":"# rails generate\n\n\u003e Generate new Rails templates in an existing project.\n\n- List all available generators:\n\n`rails generate`\n\n- Generate a new model:\n\n`rails generate model {{model_name}}`\n\n- Generate a new controller:\n\n`rails generate controller {{controller_name}}`\n\n- Generate a scaffold for a new model:\n\n`rails generate scaffold {{model_name}}`\n"},"rainbowstream":{"Platform":"all","Class":"other cmds","Brief":"Terminal-based Twitter client supporting realtime tweetstream, trends, sending, search, favorites and user management.","MdText":"# rainbowstream\n\n\u003e Terminal-based Twitter client supporting realtime tweetstream, trends, sending, search, favorites and user management.\n\u003e Online help with `h`, up and down arrows for history, tab to auto-complete and 2-tab for suggestion.\n\n- Open rainbowstream:\n\n`rainbowstream`\n\n- Show your timeline (optional number of tweets to display, default is 5):\n\n`home [{{num_of_last_tweets}}]`\n\n- Show profile of a given user:\n\n`whois @{{user}}`\n\n- Tweet the message as-is:\n\n`t {{message}}`\n\n- Retweet the tweet with given id (id is beside the time):\n\n`rt {{tweet_id}}`\n\n- Favorite the tweet with given id:\n\n`fav {{tweet_id}}`\n\n- Perform a search for a given word (with or without hashtag):\n\n`s {{word}}`\n"},"rbash":{"Platform":"all","Class":"system man","Brief":"Restricted Bash shell.","MdText":"# rbash\n\n\u003e Restricted Bash shell.\n\u003e Similar to the `bash` shell with some restrictions like changing directories with `cd`, setting/unsetting of PATH, ENV variables and others.\n\n- Start rbash:\n\n`rbash`\n\n- Execute a command:\n\n`rbash -c \"{{command}}\"`\n\n- Run commands from a file:\n\n`rbash {{file.sh}}`\n\n- Print the version information of rbash:\n\n`rbash --version`\n"},"rbenv":{"Platform":"all","Class":"other cmds","Brief":"A tool to easily install Ruby versions and manage application environments.","MdText":"# rbenv\n\n\u003e A tool to easily install Ruby versions and manage application environments.\n\n- Install one or more space-separated versions of Ruby:\n\n`rbenv install {{version(s)}}`\n\n- Display a list of installed versions:\n\n`rbenv versions`\n\n- Use a specific version of Ruby across the whole system:\n\n`rbenv global {{version}}`\n\n- Use a specific version of Ruby for an application/project directory:\n\n`rbenv local {{version}}`\n\n- Show the currently selected Ruby version:\n\n`rbenv version`\n\n- Uninstall a version of Ruby:\n\n`rbenv uninstall {{version}}`\n\n- Display all ruby versions that contain the specified executable:\n\n`rbenv whence {{executable}}`\n"},"rclone":{"Platform":"all","Class":"file trans","Brief":"CLI program to copy/sync/move files and directories to and from many cloud services.","MdText":"# rclone\n\n\u003e CLI program to copy/sync/move files and directories to and from many cloud services.\n\n- List contents of a directory on an rclone remote:\n\n`rclone lsf {{remote_name}}:{{path/to/directory}}`\n\n- Copy file or directory from local source to remote destination:\n\n`rclone copy {{path/to/source_file_or_directory}} {{remote_name}}:{{path/to/destination_directory}}`\n\n- Copy file or directory from remote source to local destination:\n\n`rclone copy {{remote_name}}:{{path/to/source_file_or_directory}} {{path/to/destination_directory}}`\n\n- Sync local source to remote destination, changing the destination only:\n\n`rclone sync {{path/to/file_or_directory}} {{remote_name}}:{{path/to/directory}}`\n\n- Move file or directory from local source to remote destination:\n\n`rclone move {{path/to/file_or_directory}} {{remote_name}}:{{path/to/directory}}`\n\n- Delete remote file or directory (use `--dry-run` to test, remove it to actually delete):\n\n`rclone --dry-run delete {{remote_name}}:{{path/to/file_or_directory}}`\n\n- Mount rclone remote (experimental):\n\n`rclone mount {{remote_name}}:{{path/to/directory}} {{path/to/mount_point}}`\n\n- Unmount rclone remote if CTRL-C fails (experimental):\n\n`fusermount -u {{path/to/mount_point}}`\n"},"read":{"Platform":"all","Class":"other cmds","Brief":"BASH builtin for retrieving data from standard input.","MdText":"# read\n\n\u003e BASH builtin for retrieving data from standard input.\n\n- Store data that you type from the keyboard:\n\n`read {{variable}}`\n\n- Store each of the next lines you enter as values of an array:\n\n`read -a {{array}}`\n\n- Enable backspace and GNU readline hotkeys when entering input with read:\n\n`read -e {{variable}}`\n\n- Specify the number of maximum characters to be read:\n\n`read -n {{character_count}} {{variable}}`\n\n- Use a specific character as a delimiter instead of a new line:\n\n`read -d {{new_delimiter}} {{variable}}`\n\n- Do not let backslash (\\) act as an escape character:\n\n`read -r {{variable}}`\n\n- Display a prompt before the input:\n\n`read -p {{\"Enter your input here: \"}} {{variable}}`\n\n- Do not echo typed characters (silent mode):\n\n`read -s {{variable}}`\n"},"realpath":{"Platform":"all","Class":"file man","Brief":"Display the resolved absolute path for a file or directory.","MdText":"# realpath\n\n\u003e Display the resolved absolute path for a file or directory.\n\n- Display the absolute path for a file or directory:\n\n`realpath {{path/to/file_or_directory}}`\n\n- Require all path components to exist:\n\n`realpath --canonicalize-existing {{path/to/file_or_directory}}`\n\n- Resolve \"..\" components before symlinks:\n\n`realpath --logical {{path/to/file_or_directory}}`\n\n- Disable symlink expansion:\n\n`realpath --no-symlinks {{path/to/file_or_directory}}`\n\n- Suppress error messages:\n\n`realpath --quiet {{path/to/file_or_directory}}`\n"},"redis-cli":{"Platform":"all","Class":"other cmds","Brief":"Opens a connection to a Redis server.","MdText":"# redis-cli\n\n\u003e Opens a connection to a Redis server.\n\n- Connect to the local server:\n\n`redis-cli`\n\n- Connect to a remote server on the default port (6379):\n\n`redis-cli -h {{host}}`\n\n- Connect to a remote server specifying a port number:\n\n`redis-cli -h {{host}} -p {{port}}`\n\n- Specify a password:\n\n`redis-cli -a {{password}}`\n\n- Execute Redis command:\n\n`redis-cli {{redis_command}}`\n"},"redshift":{"Platform":"all","Class":"other cmds","Brief":"Adjust the color temperature of your screen according to your surroundings.","MdText":"# redshift\n\n\u003e Adjust the color temperature of your screen according to your surroundings.\n\n- Turn on Redshift with 5700K temperature during day and 3600K at night:\n\n`redshift -t {{5700}}:{{3600}}`\n\n- Turn on Redshift with a manually-specified custom location:\n\n`redshift -l {{latitude}}:{{longitude}}`\n\n- Turn on Redshift with 70% screen brightness during day and 40% brightness at night:\n\n`redshift -b {{0.7}}:{{0.4}}`\n\n- Turn on Redshift with custom gamma levels (between 0 and 1):\n\n`redshift -g {{red}}:{{green}}:{{blue}}`\n\n- Turn on Redshift with a constant unchanging color temperature:\n\n`redshift -O {{temperature}}`\n"},"renice":{"Platform":"all","Class":"system man","Brief":"Alters the scheduling priority/nicenesses of one or more running processes. Niceness values range from -20 (most favorable to the process) to 19 (least favorable to the process).","MdText":"# renice\n\n\u003e Alters the scheduling priority/nicenesses of one or more running processes. Niceness values range from -20 (most favorable to the process) to 19 (least favorable to the process).\n\n- Change priority of a running process:\n\n`renice -n {{niceness_value}} -p {{pid}}`\n\n- Change priority of all processes owned by a user:\n\n`renice -n {{niceness_value}} -u {{user}}`\n\n- Change priority of all processes that belong to a process group:\n\n`renice -n {{niceness_value}} --pgrp {{process_group}}`\n"},"rev":{"Platform":"all","Class":"file editor","Brief":"Reverse a line of text.","MdText":"# rev\n\n\u003e Reverse a line of text.\n\n- Reverse the text string \"hello\":\n\n`echo \"hello\" | rev`\n\n- Reverse an entire file and print to stdout:\n\n`rev {{file}}`\n"},"rg":{"Platform":"all","Class":"file man","Brief":"A fast command-line search tool.","MdText":"# ripgrep\n\n\u003e A fast command-line search tool.\n\n- Recursively search the current directory for a regex pattern:\n\n`rg {{pattern}}`\n\n- Search for pattern including all .gitignored and hidden files:\n\n`rg -uu {{pattern}}`\n\n- Search for a pattern only in a certain filetype (e.g., html, css, etc.):\n\n`rg -t {{filetype}} {{pattern}}`\n\n- Search for a pattern only in a subset of directories:\n\n`rg {{pattern}} {{set_of_subdirs}}`\n\n- Search for a pattern in files matching a glob (e.g., `README.*`):\n\n`rg {{pattern}} -g {{glob}}`\n\n- Only list matched files -- useful when piping to other commands:\n\n`rg --files-with-matches {{pattern}}`\n\n- Show lines that do not match the given pattern:\n\n`rg --invert-match {{pattern}}`\n"},"rm":{"Platform":"all","Class":"file man","Brief":"Remove files or directories.","MdText":"# rm\n\n\u003e Remove files or directories.\n\n- Remove files from arbitrary locations:\n\n`rm {{path/to/file}} {{path/to/another/file}}`\n\n- Recursively remove a directory and all its subdirectories:\n\n`rm -r {{path/to/directory}}`\n\n- Forcibly remove a directory, without prompting for confirmation or showing error messages:\n\n`rm -rf {{path/to/directory}}`\n\n- Interactively remove multiple files, with a prompt before every removal:\n\n`rm -i {{file(s)}}`\n\n- Remove files in verbose mode, printing a message for each removed file:\n\n`rm -v {{path/to/directory/*}}`\n"},"rmdir":{"Platform":"all","Class":"file man","Brief":"Removes a directory.","MdText":"# rmdir\n\n\u003e Removes a directory.\n\n- Remove directory, provided it is empty. Use `rm` to remove not empty directories:\n\n`rmdir {{path/to/directory}}`\n\n- Remove directories recursively (useful for nested dirs):\n\n`rmdir -p {{path/to/directory}}`\n"},"roll":{"Platform":"all","Class":"file editor","Brief":"Rolls a user-defined dice sequence.","MdText":"# roll\n\n\u003e Rolls a user-defined dice sequence.\n\n- Roll 3 6-sided dice and sums the results:\n\n`roll {{3d}}`\n\n- Roll 1 8-sided die, add 3 and sum the results:\n\n`roll {{d8 + 3}}`\n\n- Roll 4 6-sided dice, keep the 3 highest results and sum the results:\n\n`roll {{4d6h3}}`\n\n- Roll 2 12-sided dice 2 times and show every roll:\n\n`roll --verbose {{2{2d12}}}`\n\n- Roll 2 20-sided dice until the result is bigger than 10:\n\n`roll \"{{2d20\u003e10}}\"`\n\n- Roll 2 5-sided dice 3 times and show the total sum:\n\n`roll --sum-series {{3{2d5}}}`\n"},"route":{"Platform":"all","Class":"network comm","Brief":"Use route cmd to set the route table .","MdText":"# route\n\n\u003e Use route cmd to set the route table .\n\n- Display the information of route table:\n\n`route -n`\n\n- Add route rule:\n\n`sudo route add -net {{ip_address}} netmask {{netmask_address}} gw {{gw_address}}`\n\n- Delete route rule:\n\n`sudo route del -net {{ip_address}} netmask {{netmask_address}} dev {{gw_address}}`\n"},"rsync":{"Platform":"all","Class":"file trans","Brief":"Transfer files either to or from a remote host (not between two remote hosts).","MdText":"# rsync\n\n\u003e Transfer files either to or from a remote host (not between two remote hosts).\n\u003e Can transfer single files, or multiple files matching a pattern.\n\n- Transfer file from local to remote host:\n\n`rsync {{path/to/file}} {{remote_host_name}}:{{remote_host_location}}`\n\n- Transfer file from remote host to local:\n\n`rsync {{remote_host_name}}:{{remote_file_location}} {{local_file_location}}`\n\n- Transfer file in archive (to preserve attributes) and compressed (zipped) mode with verbose and human-readable progress:\n\n`rsync -azvhP {{path/to/file}} {{remote_host_name}}:{{remote_host_location}}`\n\n- Transfer a directory and all its children from a remote to local:\n\n`rsync -r {{remote_host_name}}:{{remote_directory_location}} {{local_directory_location}}`\n\n- Transfer directory contents (but not the directory itself) from a remote to local:\n\n`rsync -r {{remote_host_name}}:{{remote_folder_location}}/ {{local_folder_location}}`\n\n- Transfer only updated files from remote host:\n\n`rsync -ru {{remote_host_name}}:{{remote_directory_location}} {{local_directory_location}}`\n\n- Transfer file over SSH and delete local files that do not exist on remote host:\n\n`rsync -e ssh --delete {{remote_host_name}}:{{remote_file}} {{local_file}}`\n\n- Transfer file over SSH and show global progress:\n\n`rsync -e ssh --info=progress2 {{remote_host_name}}:{{remote_file}} {{local_file}}`\n"},"ruby":{"Platform":"all","Class":"other cmds","Brief":"Ruby programming language interpreter.","MdText":"# ruby\n\n\u003e Ruby programming language interpreter.\n\n- Open an Interactive Ruby Shell (REPL):\n\n`irb`\n\n- Execute a Ruby script:\n\n`ruby {{script.rb}}`\n\n- Execute a single Ruby command in the command line:\n\n`ruby -e {{command}}`\n\n- Check for syntax errors on a given Ruby script:\n\n`ruby -c {{script.rb}}`\n\n- Show the version of Ruby you are using:\n\n`ruby -v`\n"},"rustc":{"Platform":"all","Class":"other cmds","Brief":"The Rust compiler.","MdText":"# rustc\n\n\u003e The Rust compiler.\n\u003e Processes, compiles and links Rust language source files.\n\n- Compile a single file:\n\n`rustc {{file.rs}}`\n\n- Compile with high optimization:\n\n`rustc -O {{file.rs}}`\n\n- Compile with debugging information:\n\n`rustc -g {{file.rs}}`\n"},"rustfmt":{"Platform":"all","Class":"other cmds","Brief":"Tool for formatting Rust source code.","MdText":"# rustfmt\n\n\u003e Tool for formatting Rust source code.\n\n- Format a file, overwriting the original file in-place:\n\n`rustfmt {{source.rs}}`\n\n- Check a file for formatting and display any changes on the console:\n\n`rustfmt --check {{source.rs}}`\n\n- Backup any modified files before formatting (the original file is renamed with a `.bk` extension):\n\n`rustfmt --backup {{source.rs}}`\n"},"rustup":{"Platform":"all","Class":"other cmds","Brief":"Rust toolchain installer.","MdText":"# rustup\n\n\u003e Rust toolchain installer.\n\u003e Install, manage, and update Rust toolchains.\n\n- Install the nightly toolchain for your system:\n\n`rustup install nightly`\n\n- Switch the default toolchain to nightly so that the `cargo` and `rustc` commands will use it:\n\n`rustup default nightly`\n\n- Use the nightly toolchain when inside the current project, but leave global settings unchanged:\n\n`rustup override set nightly`\n\n- Update all toolchains:\n\n`rustup update`\n\n- List installed toolchains:\n\n`rustup show`\n\n- Run cargo build with a certain toolchain:\n\n`rustup run {{toolchain_name}} cargo build`\n"},"s":{"Platform":"all","Class":"other cmds","Brief":"Web search from the terminal.","MdText":"# s\n\n\u003e Web search from the terminal.\n\n- Search for a query on Google(default provider):\n\n`s {{query}}`\n\n- List all providers:\n\n`s --list-providers`\n\n- Search for a query with a given provider:\n\n`s --provider {{provider}} {{query}}`\n\n- Use a specified binary to perform the search query:\n\n`s --binary \"{{binary}} {{arguments}}\" {{query}}`\n"},"sails":{"Platform":"all","Class":"other cmds","Brief":"Sails.js is a realtime enterprise level MVC framework built on top of Node.js.","MdText":"# sails\n\n\u003e Sails.js is a realtime enterprise level MVC framework built on top of Node.js.\n\n- Start Sails:\n\n`sails lift`\n\n- Create new Sails project:\n\n`sails new {{projectName}}`\n\n- Generate Sails API:\n\n`sails generate {{name}}`\n\n- Generate Sails Controller:\n\n`sails generate controller {{name}}`\n\n- Generate Sails Model:\n\n`sails generate model {{name}}`\n"},"salt":{"Platform":"all","Class":"other cmds","Brief":"Execute commands and assert state on remote salt minions.","MdText":"# salt\n\n\u003e Execute commands and assert state on remote salt minions.\n\n- List connected minions:\n\n`salt '*' test.ping`\n\n- Execute a highstate on all connected minions:\n\n`salt '*' state.highstate`\n\n- Upgrade packages using the OS package manager (apt, yum, brew) on a subset of minions:\n\n`salt '*.domain.com' pkg.upgrade`\n\n- Execute an arbitrary command on a particular minion:\n\n`salt '{{minion_id}}' cmd.run \"ls \"`\n"},"salt-key":{"Platform":"all","Class":"other cmds","Brief":"Manages salt minion keys on the salt master.","MdText":"# salt-key\n\n\u003e Manages salt minion keys on the salt master.\n\u003e Needs to be run on the salt master, likely as root or with sudo.\n\n- List all accepted, unaccepted and rejected minion keys:\n\n`salt-key -L`\n\n- Accept a minion key by name:\n\n`salt-key -a {{MINION_ID}}`\n\n- Reject a minion key by name:\n\n`salt-key -r {{MINION_ID}}`\n\n- Print fingerprints of all public keys:\n\n`salt-key -F`\n"},"sass":{"Platform":"all","Class":"other cmds","Brief":"Converts SCSS or Sass files to CSS.","MdText":"# sass\n\n\u003e Converts SCSS or Sass files to CSS.\n\n- Convert a SCSS or Sass file to CSS and print out the result:\n\n`sass {{inputfile.scss|inputfile.sass}}`\n\n- Convert a SCSS or Sass file to CSS and save the result to a file:\n\n`sass {{inputfile.scss|inputfile.sass}} {{outputfile.css}}`\n\n- Watch a SCSS or Sass file for changes and output or update the CSS file with same filename:\n\n`sass --watch {{inputfile.scss|inputfile.sass}}`\n\n- Watch a SCSS or Sass file for changes and output or update the CSS file with the given filename:\n\n`sass --watch {{inputfile.scss|inputfile.sass}}:{{outputfile.css}}`\n"},"satis":{"Platform":"all","Class":"other cmds","Brief":"The command-line utility for the Satis static Composer repository.","MdText":"# satis\n\n\u003e The command-line utility for the Satis static Composer repository.\n\n- Initialise a Satis configuration:\n\n`satis init {{satis.json}}`\n\n- Add a VCS repository to the Satis configuration:\n\n`satis add {{repository_url}}`\n\n- Build the static output from the configuration:\n\n`satis build {{satis.json}} {{path/to/output_directory}}`\n\n- Build the static output by updating only the specified repository:\n\n`satis build --repository-url {{repository_url}} {{satis.json}} {{path/to/output_directory}}`\n\n- Remove useless archive files:\n\n`satis purge {{satis.json}} {{path/to/output_directory}}`\n"},"screen":{"Platform":"all","Class":"system man","Brief":"Hold a session open on a remote server. Manage multiple windows with a single SSH connection.","MdText":"# screen\n\n\u003e Hold a session open on a remote server. Manage multiple windows with a single SSH connection.\n\n- Start a new screen session:\n\n`screen`\n\n- Start a new named screen session:\n\n`screen -S {{session_name}}`\n\n- Start a new daemon and log the output to screenlog.x:\n\n`screen -dmLS {{session_name}} {{command}}`\n\n- Show open screen sessions:\n\n`screen -ls`\n\n- Reattach to an open screen:\n\n`screen -r {{session_name}}`\n\n- Detach from inside a screen:\n\n`Ctrl + A, D`\n\n- Kill a detached screen:\n\n`screen -X -S {{session_name}} quit`\n"},"screenfetch":{"Platform":"all","Class":"system man","Brief":"Display system information.","MdText":"# screenfetch\n\n\u003e Display system information.\n\n- Start screenfetch:\n\n`screenfetch`\n\n- Take a screenshot (requires 'scrot'):\n\n`screenfetch -s`\n\n- Specify distribution logo:\n\n`screenfetch -A '{{distribution_name}}'`\n\n- Specify distribution logo and text:\n\n`screenfetch -D '{{distribution_name}}'`\n\n- Strip all color:\n\n`screenfetch -N`\n"},"script":{"Platform":"all","Class":"other cmds","Brief":"Make a typescript file of a terminal session.","MdText":"# script\n\n\u003e Make a typescript file of a terminal session.\n\n- Start recording in file named \"typescript\":\n\n`script`\n\n- Stop recording:\n\n`exit`\n\n- Start recording in a given file:\n\n`script {{logfile.log}}`\n\n- Append to an existing file:\n\n`script -a {{logfile.log}}`\n\n- Execute quietly without start and done messages:\n\n`script -q {{logfile.log}}`\n"},"sed":{"Platform":"all","Class":"file editor","Brief":"Edit text in a scriptable manner.","MdText":"# sed\n\n\u003e Edit text in a scriptable manner.\n\n- Replace the first occurrence of a regular expression in each line of a file, and print the result:\n\n`sed 's/{{regex}}/{{replace}}/' {{filename}}`\n\n- Replace all occurrences of an extended regular expression in a file, and print the result:\n\n`sed -r 's/{{regex}}/{{replace}}/g' {{filename}}`\n\n- Replace all occurrences of a string in a file, overwriting the file (i.e. in-place):\n\n`sed -i 's/{{find}}/{{replace}}/g' {{filename}}`\n\n- Replace only on lines matching the line pattern:\n\n`sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}`\n\n- Delete lines matching the line pattern:\n\n`sed '/{{line_pattern}}/d' {{filename}}`\n\n- Print only text between n-th line till the next empty line:\n\n`sed -n '{{n}},/^$/p' {{filename}}`\n\n- Apply multiple find-replace expressions to a file:\n\n`sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}`\n\n- Replace separator / by any other character not used in the find or replace patterns, e.g., #:\n\n`sed 's#{{find}}#{{replace}}#' {{filename}}`\n\n- Print only the n-th line of a file:\n\n`sed '{{n}}q;d' {{filename}}`\n"},"sendmail":{"Platform":"all","Class":"network comm","Brief":"Send email from the command line.","MdText":"# sendmail\n\n\u003e Send email from the command line.\n\n- Send a message with the content of message.txt to the mail directory of local user `user_name`:\n\n`sendmail {{user_name}} \u003c {{message.txt}}`\n\n- Send an email from you@yourdomain.com (assuming the mail server is configured for this) to test@gmail.com containing the message in `message.txt`:\n\n`sendmail -f {{you@yourdomain.com}} {{test@gmail.com}} \u003c {{message.txt}}`\n\n- Send an email from you@yourdomain.com (assuming the mail server is configured for this) to test@gmail.com containing the file `file.zip`:\n\n`sendmail -f {{you@yourdomain.com}} {{test@gmail.com}} \u003c {{file.zip}}`\n"},"serverless":{"Platform":"all","Class":"network comm","Brief":"Toolkit for deploying and operating serverless architectures on AWS, Google Cloud, Azure and IBM OpenWhisk.","MdText":"# serverless\n\n\u003e Toolkit for deploying and operating serverless architectures on AWS, Google Cloud, Azure and IBM OpenWhisk.\n\u003e Commands can be run either using the `serverless` command or it's alias, `sls`.\n\u003e Homepage: \u003chttps://serverless.com/\u003e.\n\n- Create a serverless project:\n\n`serverless create`\n\n- Create a serverless project from a template:\n\n`serverless create --template {{template_name}}`\n\n- Deploy to a cloud provider:\n\n`serverless deploy`\n\n- Display information about a serverless project:\n\n`serverless info`\n\n- Invoke a deployed function:\n\n`serverless invoke -f {{function_name}}`\n\n- Follow the logs for a project:\n\n`serverless logs -t`\n"},"set":{"Platform":"all","Class":"system settings","Brief":"Display, set or unset values of shell attributes and positional parameters.","MdText":"# set\n\n\u003e Display, set or unset values of shell attributes and positional parameters.\n\n- Display the names and values of shell variables:\n\n`set`\n\n- Mark variables that are modified or created for export:\n\n`set -a`\n\n- Notify of job termination immediately:\n\n`set -b`\n\n- Set various options, e.g. enable `vi` style line editing:\n\n`set -o {{vi}}`\n"},"sftp":{"Platform":"all","Class":"file trans","Brief":"Secure File Transfer Program.","MdText":"# sftp\n\n\u003e Secure File Transfer Program.\n\u003e Interactive program to copy files between hosts over SSH.\n\u003e For non-interactive file transfers, see `scp` or `rsync`.\n\n- Connect to a remote server and enter an interactive command mode:\n\n`sftp {{remote_user}}@{{remote_host}}`\n\n- Connect using an alternate port:\n\n`sftp -P {{remote_port}} {{remote_user}}@{{remote_host}}`\n\n- Transfer remote file to the local system:\n\n`get {{/path/remote_file}}`\n\n- Transfer local file to the remote system:\n\n`put {{/path/local_file}}`\n\n- Transfer remote directory to the local system recursively (works with `put` too):\n\n`get -R {{/path/remote_directory}}`\n\n- Get list of files on local machine:\n\n`lls`\n\n- Get list of files on remote machine:\n\n`ls`\n"},"sh":{"Platform":"all","Class":"system man","Brief":"Bourne shell.","MdText":"# sh\n\n\u003e Bourne shell.\n\u003e The standard command language interpreter.\n\n- Start interactive shell:\n\n`sh`\n\n- Execute a command:\n\n`sh -c {{command}}`\n\n- Run commands from a file:\n\n`sh {{file.sh}}`\n\n- Run commands from STDIN:\n\n`sh -s`\n"},"sha256sum":{"Platform":"all","Class":"file man","Brief":"Calculate SHA256 cryptographic checksums.","MdText":"# sha256sum\n\n\u003e Calculate SHA256 cryptographic checksums.\n\n- Calculate the SHA256 checksum for a file:\n\n`sha256sum {{filename1}}`\n\n- Calculate SHA256 checksums for multiple files:\n\n`sha256sum {{filename1}} {{filename2}}`\n\n- Read a file of SHA256 sums and verify all files have matching checksums:\n\n`sha256sum -c {{filename.sha256}}`\n"},"sha384sum":{"Platform":"all","Class":"file man","Brief":"Calculate SHA384 cryptographic checksums.","MdText":"# sha384sum\n\n\u003e Calculate SHA384 cryptographic checksums.\n\n- Calculate the SHA384 checksum for a file:\n\n`sha384sum {{filename1}}`\n\n- Calculate SHA384 checksums for multiple files:\n\n`sha384sum {{filename1}} {{filename2}}`\n\n- Read a file of SHA384 sums and verify all files have matching checksums:\n\n`sha384sum -c {{filename.sha384}}`\n"},"shellcheck":{"Platform":"all","Class":"system man","Brief":"Shell script static analysis tool.","MdText":"# shellcheck\n\n\u003e Shell script static analysis tool.\n\u003e Homepage: \u003chttps://www.shellcheck.net/\u003e.\n\n- Check a shell script:\n\n`shellcheck {{file.sh}}`\n\n- Override script's shebang:\n\n`shellcheck --shell {{sh|bash|ksh}} {{file.sh}}`\n\n- Ignore certain errors:\n\n`shellcheck --exclude {{SC1009}} {{file.sh}}`\n\n- Ignore multiple errors:\n\n`shellcheck --exclude {{SC1009,SC1073}} {{file.sh}}`\n"},"shopt":{"Platform":"all","Class":"system man","Brief":"Manage Bash shell options: variables (stored in `$BASHOPTS`) that control behavior specific to the Bash shell.","MdText":"# shopt\n\n\u003e Manage Bash shell options: variables (stored in `$BASHOPTS`) that control behavior specific to the Bash shell.\n\u003e Generic POSIX shell variables (stored in `$SHELLOPTS`) are managed with the `set` command instead.\n\n- List of all settable options and whether they are set:\n\n`shopt`\n\n- Set an option:\n\n`shopt -s {{option_name}}`\n\n- Unset an option:\n\n`shopt -u {{option_name}}`\n\n- Print a list of all options and their status formatted as runnable `shopt` commands:\n\n`shopt -p`\n\n- Show help for the command:\n\n`help shopt`\n"},"skicka":{"Platform":"all","Class":"other cmds","Brief":"Manage your Google Drive.","MdText":"# skicka\n\n\u003e Manage your Google Drive.\n\n- Upload a file/folder to Google Drive:\n\n`skicka upload {{path/to/local}} {{path/to/remote}}`\n\n- Download a file/folder from Google Drive:\n\n`skicka download {{path/to/remote}} {{path/to/local}}`\n\n- List files:\n\n`skicka ls {{path/to/folder}}`\n\n- Show amount of space used by children folders:\n\n`skicka du {{path/to/parent/folder}}`\n\n- Create a folder:\n\n`skicka mkdir {{path/to/folder}}`\n\n- Delete a file:\n\n`skicka rm {{path/to/file}}`\n"},"sleep":{"Platform":"all","Class":"system settings","Brief":"Delay for a specified amount of time.","MdText":"# sleep\n\n\u003e Delay for a specified amount of time.\n\n- Delay in seconds:\n\n`sleep {{seconds}}`\n\n- Delay in minutes:\n\n`sleep {{minutes}}m`\n\n- Delay in hours:\n\n`sleep {{hours}}h`\n"},"sn":{"Platform":"all","Class":"other cmds","Brief":"Mono StrongName utility for signing and verifying IL assemblies.","MdText":"# sn\n\n\u003e Mono StrongName utility for signing and verifying IL assemblies.\n\n- Generate a new StrongNaming key:\n\n`sn -k {{path/to/key.snk}}`\n\n- Re-sign an assembly with the specified private key:\n\n`sn -R {{path/to/assembly.dll}} {{path/to/keypair.snk}}`\n\n- Show the public key of the private key that was used to sign an assembly:\n\n`sn -T {{path/to/assembly.exe}}`\n\n- Extract the public key to a file:\n\n`sn -e {{path/to/assembly.dll}} {{path/to/output.pub}}`\n"},"socat":{"Platform":"all","Class":"other cmds","Brief":"Multipurpose relay (SOcket CAT).","MdText":"# socat\n\n\u003e Multipurpose relay (SOcket CAT).\n\n- Listen to a port, wait for an incoming connection and transfer data to STDIO:\n\n`socat - TCP-LISTEN:8080,fork`\n\n- Create a connection to a host and port, transfer data in STDIO to connected host:\n\n`socat - TCP4:www.domain.com:80`\n\n- Forward incoming data of a local port to another host and port:\n\n`socat TCP-LISTEN:80,fork TCP4:www.domain.com:80`\n"},"sort":{"Platform":"all","Class":"file editor","Brief":"Sort lines of text files.","MdText":"# sort\n\n\u003e Sort lines of text files.\n\n- Sort a file in ascending order:\n\n`sort {{filename}}`\n\n- Sort a file in descending order:\n\n`sort -r {{filename}}`\n\n- Sort a file in case-insensitive way:\n\n`sort --ignore-case {{filename}}`\n\n- Sort a file using numeric rather than alphabetic order:\n\n`sort -n {{filename}}`\n\n- Sort the passwd file by the 3rd field, numerically:\n\n`sort -t: -k 3n /etc/passwd`\n\n- Sort a file preserving only unique lines:\n\n`sort -u {{filename}}`\n\n- Sort human-readable numbers (in this case the 5th field of `ls -lh`):\n\n`ls -lh | sort -h -k 5`\n"},"sox":{"Platform":"all","Class":"file editor","Brief":"Sound eXchange: play, record and convert audio files.","MdText":"# sox\n\n\u003e Sound eXchange: play, record and convert audio files.\n\u003e Audio formats are identified by the extension.\n\n- Merge two audio files into one:\n\n`sox -m {{input_audiofile1}} {{input_audiofile2}} {{output_audiofile}}`\n\n- Trim an audio file to the specified times:\n\n`sox {{input_audiofile}} {{output_audiofile}} trim {{start}} {{end}}`\n\n- Normalize an audio file (adjust volume to the maximum peak level, without clipping):\n\n`sox --norm {{input_audiofile}} {{output_audiofile}}`\n\n- Reverse and save an audio file:\n\n`sox {{input_audiofile}} {{output_audiofile}} reverse`\n\n- Print statistical data of an audio file:\n\n`sox {{input_audiofile}} -n stat`\n\n- Increase the volume of an audio file by 2x:\n\n`sox -v 2.0 {{input_audiofile}} {{output_audiofile}}`\n"},"speedtest-cli":{"Platform":"all","Class":"network comm","Brief":"Command line interface for testing internet bandwidth using speedtest.net.","MdText":"# speedtest-cli\n\n\u003e Command line interface for testing internet bandwidth using speedtest.net.\n\n- Run a speed test:\n\n`speedtest-cli`\n\n- Run a speed test and generate a shareable result picture:\n\n`speedtest-cli --share`\n\n- Print a list of all speedtest.net servers, sorted by distance, to file:\n\n`speedtest-cli --list \u003e speedtest_servers.txt`\n\n- Run a speed test to the given speedtest.net server id:\n\n`speedtest-cli --server {{server_id}}`\n"},"split":{"Platform":"all","Class":"file editor","Brief":"Split a file into pieces.","MdText":"# split\n\n\u003e Split a file into pieces.\n\n- Split a file, each split having 10 lines (except the last split):\n\n`split -l {{10}} {{filename}}`\n\n- Split a file into 5 files. File is split such that each split has same size (except the last split):\n\n`split -n {{5}} {{filename}}`\n\n- Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes):\n\n`split -b {{512}} {{filename}}`\n\n- Split a file with at most 512 bytes in each split without breaking lines:\n\n`split -C {{512}} {{filename}}`\n"},"sqlite3":{"Platform":"all","Class":"other cmds","Brief":"The command-line interface to SQLite 3, which is a self-contained file-based embedded SQL engine.","MdText":"# sqlite3\n\n\u003e The command-line interface to SQLite 3, which is a self-contained file-based embedded SQL engine.\n\n- Start an interactive shell with a new database:\n\n`sqlite3`\n\n- Open an interactive shell against an existing database:\n\n`sqlite3 {{path/to/database.sqlite3}}`\n\n- Execute an SQL statement against a database and then exit:\n\n`sqlite3 {{path/to/database.sqlite3}} '{{SELECT * FROM some_table;}}'`\n"},"sqsc":{"Platform":"all","Class":"other cmds","Brief":"A command line AWS Simple Queue Service client.","MdText":"# sqsc\n\n\u003e A command line AWS Simple Queue Service client.\n\n- List all queues:\n\n`sqsc lq {{queue_prefix}}`\n\n- List all messages in a queue:\n\n`sqsc ls {{queue_name}}`\n\n- Copy all messages from one queue to another:\n\n`sqsc cp {{source_queue}} {{destination_queue}}`\n\n- Move all messages from one queue to another:\n\n`sqsc mv {{source_queue}} {{destination_queue}}`\n\n- Describe a queue:\n\n`sqsc describe {{queue_name}}`\n\n- Query a queue with SQL syntax:\n\n`sqsc query \"SELECT body FROM {{queue_name}} WHERE body LIKE '%user%'\"`\n\n- Pull all messages from a queue into a local sqlite database in your present working directory:\n\n`sqsc pull {{queue_name}}`\n"},"srm":{"Platform":"all","Class":"file man","Brief":"Securely remove files or directories.","MdText":"# srm\n\n\u003e Securely remove files or directories.\n\u003e Overwrites the existing data one or multiple times. Drop in replacement for rm.\n\n- Remove a file after a single-pass overwriting with random data:\n\n`srm -s {{/path/to/file}}`\n\n- Remove a file after seven passes of overwriting with random data:\n\n`srm -m {{/path/to/file}}`\n\n- Recursively remove a directory and its contents overwriting each file with a single-pass of random data:\n\n`srm -r -s {{/path/to/directory}}`\n\n- Prompt before every removal:\n\n`srm -i {{\\*}}`\n"},"sshfs":{"Platform":"all","Class":"file man","Brief":"Filesystem client based on ssh.","MdText":"# sshfs\n\n\u003e Filesystem client based on ssh.\n\n- Mount remote directory:\n\n`sshfs {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}`\n\n- Unmount remote directory:\n\n`umount {{mountpoint}}`\n\n- Mount remote directory from server with specific port:\n\n`sshfs {{username}}@{{remote_host}}:{{remote_directory}} -p {{2222}}`\n\n- Use compression:\n\n`sshfs {{username}}@{{remote_host}}:{{remote_directory}} -C`\n\n- Follow symbolic links:\n\n`sshfs -o follow_symlinks {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}`\n"},"st-flash":{"Platform":"all","Class":"other cmds","Brief":"Flash binary files to STM32 ARM Cortex microcontrollers.","MdText":"# st-flash\n\n\u003e Flash binary files to STM32 ARM Cortex microcontrollers.\n\n- Read 4096 bytes from the device starting from 0x8000000:\n\n`st-flash read {{firmware}}.bin {{0x8000000}} {{4096}}`\n\n- Write firmware to device starting from 0x8000000:\n\n`st-flash write {{firmware}}.bin {{0x8000000}}`\n\n- Erase firmware from device:\n\n`st-flash erase`\n"},"st-info":{"Platform":"all","Class":"other cmds","Brief":"Provides information about connected STLink and STM32 devices.","MdText":"# st-info\n\n\u003e Provides information about connected STLink and STM32 devices.\n\n- Display amount of program memory available:\n\n`st-info --flash`\n\n- Display amount of sram memory available:\n\n`st-info --sram`\n\n- Display summarized information of the device:\n\n`st-info --probe`\n"},"stack":{"Platform":"all","Class":"other cmds","Brief":"Tool for managing Haskell projects.","MdText":"# stack\n\n\u003e Tool for managing Haskell projects.\n\n- Create a new project:\n\n`stack new {{project_name}}`\n\n- Install all packages needed by a project:\n\n`stack install`\n\n- Compile a project:\n\n`stack build`\n\n- Run tests inside a project:\n\n`stack test`\n\n- Compile a project and re-compile every time a file changes:\n\n`stack build --file-watch`\n\n- Compile a project and execute a command after compilation:\n\n`stack build --exec \"{{command}}\"`\n\n- Run a program and pass an argument to it:\n\n`stack exec {{program_name}} -- {{argument}}`\n"},"stat":{"Platform":"all","Class":"file man","Brief":"Display file and filesystem information.","MdText":"# stat\n\n\u003e Display file and filesystem information.\n\n- Show file properties such as size, permissions, creation and access dates among others:\n\n`stat {{file}}`\n\n- Same as above but in a more concise way:\n\n`stat -t {{file}}`\n\n- Show filesystem information:\n\n`stat -f {{file}}`\n\n- Show only octal file permissions:\n\n`stat -c \"%a %n\" {{file}}`\n\n- Show owner and group of the file:\n\n`stat -c \"%U %G\" {{file}}`\n\n- Show the size of the file in bytes:\n\n`stat -c \"%s %n\" {{file}}`\n"},"stdbuf":{"Platform":"all","Class":"file man","Brief":"Run a command with modified buffering operations for its standard streams.","MdText":"# stdbuf\n\n\u003e Run a command with modified buffering operations for its standard streams.\n\n- Change the standard input buffer size to 512 KiB:\n\n`stdbuf --input={{512K}} {{command}}`\n\n- Change the standard output buffer to line-buffered:\n\n`stdbuf --output={{L}} {{command}}`\n\n- Change the standard error buffer to unbuffered:\n\n`stdbuf --error={{0}} {{command}}`\n"},"stolonctl":{"Platform":"all","Class":"file man","Brief":"A cloud native PostgreSQL manager for PostgreSQL high availability.","MdText":"# Stolon\n\n\u003e A cloud native PostgreSQL manager for PostgreSQL high availability.\n\n- Get cluster status:\n\n`stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} status`\n\n- Get cluster data:\n\n`stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} clusterdata`\n\n- Get cluster specification:\n\n`stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} spec`\n\n- Update cluster specification with a patch in json format:\n\n`stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} update --patch '{{cluster_spec}}'`\n"},"strings":{"Platform":"all","Class":"file editor","Brief":"Find printable strings in an object file or binary.","MdText":"# strings\n\n\u003e Find printable strings in an object file or binary.\n\n- Print all strings in a binary:\n\n`strings {{file}}`\n\n- Limit results to strings at least *length* characters long:\n\n`strings -n {{length}} {{file}}`\n\n- Prefix each result with its offset within the file:\n\n`strings -t d {{file}}`\n\n- Prefix each result with its offset within the file in hexadecimal:\n\n`strings -t x {{file}}`\n"},"su":{"Platform":"all","Class":"system man","Brief":"Switch shell to another user.","MdText":"# su\n\n\u003e Switch shell to another user.\n\n- Switch to superuser (admin password required):\n\n`su`\n\n- Switch to user {{username}} (password required):\n\n`su {{username}}`\n\n- Switch to user {{username}} and simulate a full login shell:\n\n`su - {{username}}`\n"},"subl":{"Platform":"all","Class":"file editor","Brief":"Sublime Text editor.","MdText":"# subl\n\n\u003e Sublime Text editor.\n\n- Open the current directory in Sublime Text:\n\n`subl {{.}}`\n\n- Open a file or directory in Sublime Text:\n\n`subl {{path/to/file_or_directory}}`\n\n- Open a file and jump to a specific line number:\n\n`subl {{path/to/file}}:{{line_number}}`\n\n- Open a file or directory in the currently open window:\n\n`subl -a {{path/to/file}}`\n\n- Open a file or directory in a new window:\n\n`subl -n {{path/to/file}}`\n"},"sudo":{"Platform":"all","Class":"system man","Brief":"Executes a single command as the superuser or another user.","MdText":"# sudo\n\n\u003e Executes a single command as the superuser or another user.\n\n- Run a command as the superuser:\n\n`sudo {{less /var/log/syslog}}`\n\n- Edit a file as the superuser with your default editor:\n\n`sudo -e {{/etc/fstab}}`\n\n- Run a command as another user and/or group:\n\n`sudo -u {{user}} -g {{group}} {{id -a}}`\n\n- Repeat the last command prefixed with \"sudo\" (only in bash, zsh, etc.):\n\n`sudo !!`\n\n- Launch the default shell with superuser privileges:\n\n`sudo -i`\n"},"surge":{"Platform":"all","Class":"network comm","Brief":"Simple command line web publishing.","MdText":"# surge\n\n\u003e Simple command line web publishing.\n\n- Upload a new site to surge.sh:\n\n`surge {{path/to/my_project}}`\n\n- Deploy site to custom domain (note that the DNS records must point to the surge.sh subdomain):\n\n`surge {{path/to/my_project}} {{my_custom_domain.com}}`\n\n- List your surge projects:\n\n`surge list`\n\n- Remove a project:\n\n`surge teardown {{my_custom_domain.com}}`\n"},"svgcleaner":{"Platform":"all","Class":"other cmds","Brief":"SVG image optimizing utility.","MdText":"# svgcleaner\n\n\u003e SVG image optimizing utility.\n\n- Optimize an SVG image:\n\n`svgcleaner {{input.svg}} {{output.svg}}`\n\n- Optimize an SVG image multiple times:\n\n`svgcleaner --multipass {{input.svg}} {{output.svg}}`\n"},"svgo":{"Platform":"all","Class":"other cmds","Brief":"SVG Optimizer: a Node.js-based tool for optimizing Scalable Vector Graphics files.","MdText":"# svgo\n\n\u003e SVG Optimizer: a Node.js-based tool for optimizing Scalable Vector Graphics files.\n\u003e It applies a series of transformation rules (plugins), which can be toggled individually.\n\n- Optimize a file using the default plugins (overwrites the original file):\n\n`svgo {{test.svg}}`\n\n- Optimize a file and save the result to another file:\n\n`svgo {{test.svg}} {{test.min.svg}}`\n\n- Optimize all SVG files within a directory (overwrites the original files):\n\n`svgo -f {{path/to/directory/with/svg/files}}`\n\n- Optimize all SVG files within a directory and save the resulting files to another directory:\n\n`svgo -f {{path/to/input/directory}} -o {{path/to/output/directory}}`\n\n- Optimize SVG content passed from another command, and save the result to a file:\n\n`{{cat test.svg}} | svgo -i - -o {{test.min.svg}}`\n\n- Optimize a file and print out the result:\n\n`svgo {{test.svg}} -o -`\n\n- Optimize a file making sure a given plugin is enabled:\n\n`svgo --enable={{plugin_name}}`\n\n- Show available plugins:\n\n`svgo --show-plugins`\n"},"svn":{"Platform":"all","Class":"other cmds","Brief":"Subversion command line client tool.","MdText":"# svn\n\n\u003e Subversion command line client tool.\n\n- Check out a working copy from a repository:\n\n`svn co {{url/to/repository}}`\n\n- Bring changes from the repository into the working copy:\n\n`svn up`\n\n- Put files and directories under version control, scheduling them for addition to repository. They will be added in next commit:\n\n`svn add {{PATH}}`\n\n- Send changes from your working copy to the repository:\n\n`svn ci -m {{commit log message}} [{{PATH}}]`\n\n- Display changes from the last 10 revisions, showing modified files for each revision:\n\n`svn log -vl {{10}}`\n\n- Show detailed help:\n\n`svn help`\n"},"swagger-codegen":{"Platform":"all","Class":"other cmds","Brief":"Generate code and documentation for your REST api from a OpenAPI/swagger definition.","MdText":"# swagger-codegen\n\n\u003e Generate code and documentation for your REST api from a OpenAPI/swagger definition.\n\n- Generate documentation and code from an OpenAPI/swagger file:\n\n`swagger-codegen generate -i {{swagger_file}} -l {{language}}`\n\n- Generate java code using the library retrofit2 and the option useRxJava2:\n\n`swagger-codegen generate -i {{http://petstore.swagger.io/v2/swagger.json}} -l {{java}} --library {{retrofit2}} -D{{useRxJava2}}={{true}}`\n\n- List available languages:\n\n`swagger-codegen langs`\n\n- Display help options for the generate command:\n\n`swagger-codegen help {{generate}}`\n"},"swift":{"Platform":"all","Class":"other cmds","Brief":"Create, run and build Swift projects.","MdText":"# swift\n\n\u003e Create, run and build Swift projects.\n\n- Invoke the interactive interpreter (REPL):\n\n`swift`\n\n- Execute a program:\n\n`swift {{file.swift}}`\n\n- Start a new project with the package manager:\n\n`swift package init`\n\n- Generate an Xcode project file:\n\n`swift package generate-xcodeproj`\n\n- Update dependencies:\n\n`swift package update`\n\n- Compile project for release:\n\n`swift build -c release`\n"},"symfony":{"Platform":"all","Class":"other cmds","Brief":"The console component for the Symfony framework.","MdText":"# symfony\n\n\u003e The console component for the Symfony framework.\n\n- Create a new Symfony project:\n\n`symfony new {{name}}`\n\n- Run a local web server:\n\n`symfony serve`\n\n- Stop the local web server:\n\n`symfony server:stop`\n\n- Check for security issues in the project's dependencies:\n\n`symfony security:check`\n"},"tabula":{"Platform":"all","Class":"other cmds","Brief":"Extract tables from PDF files.","MdText":"# tabula\n\n\u003e Extract tables from PDF files.\n\n- Extract all tables from a PDF to a CSV file:\n\n`tabula -o {{file.csv}} {{file.pdf}}`\n\n- Extract all tables from a PDF to a JSON file:\n\n`tabula --format JSON -o {{file.json}} {{file.pdf}}`\n\n- Extract tables from pages 1, 2, 3, and 6 of a PDF:\n\n`tabula --pages {{1-3,6}} {{file.pdf}}`\n\n- Extract tables from page 1 of a PDF, guessing which portion of the page to examine:\n\n`tabula --guess --pages {{1}} {{file.pdf}}`\n\n- Extract all tables from a PDF, using ruling lines to determine cell boundaries:\n\n`tabula --spreadsheet {{file.pdf}}`\n\n- Extract all tables from a PDF, using blank space to determine cell boundaries:\n\n`tabula --no-spreadsheet {{file.pdf}}`\n"},"tac":{"Platform":"all","Class":"file man","Brief":"Print and concatenate files in reverse.","MdText":"# tac\n\n\u003e Print and concatenate files in reverse.\n\n- Print the contents of *file1* reversed to the standard output:\n\n`tac {{file1}}`\n\n- Concatenate several files reversed into the target file:\n\n`tac {{file1}} {{file2}} \u003e {{target_file}}`\n"},"task":{"Platform":"all","Class":"system man","Brief":"TODO list manager.","MdText":"# task\n\n\u003e TODO list manager.\n\n- Add new task:\n\n`task add {{thing_to_do}}`\n\n- List tasks:\n\n`task list`\n\n- Mark task as completed:\n\n`task {{task_id}} done`\n\n- Modify task:\n\n`task {{task_id}} modify {{new_thing_to_do}}`\n\n- Delete task:\n\n`task {{task_id}} delete`\n"},"tb":{"Platform":"all","Class":"system man","Brief":"CLI for managing tasks and notes across multiple boards.","MdText":"# tb\n\n\u003e CLI for managing tasks and notes across multiple boards.\n\n- Add a new task to a board:\n\n`tb --task {{task description}} @{{board_name}}`\n\n- Add a new note to a board:\n\n`tb --note {{note description}} @{{board_name}}`\n\n- Edit item's priority:\n\n`tb --priority @{{item_id}} {{priority}}`\n\n- Check/uncheck item:\n\n`tb --check {{item_id}}`\n\n- Archive all checked items:\n\n`tb --clear`\n\n- Move item to a board:\n\n`tb --move @{{item_id}} {{board_name}}`\n"},"tee":{"Platform":"all","Class":"file editor","Brief":"Read from standard input and write to standard output and files (or commands).","MdText":"# tee\n\n\u003e Read from standard input and write to standard output and files (or commands).\n\n- Copy standard input to each FILE, and also to standard output:\n\n`echo \"example\" | tee {{FILE}}`\n\n- Append to the given FILEs, do not overwrite:\n\n`echo \"example\" | tee -a {{FILE}}`\n\n- Print standard input to the terminal, and also pipe it into another program for further processing:\n\n`echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}`\n\n- Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal:\n\n`echo \"example\" | tee \u003e(xargs mkdir) \u003e(wc -c)`\n"},"tesseract":{"Platform":"all","Class":"other cmds","Brief":"OCR (Optical Character Recognition) engine.","MdText":"# tesseract\n\n\u003e OCR (Optical Character Recognition) engine.\n\n- Recognize text in an image and save it to `output.txt` (the '.txt' extension is added automatically):\n\n`tesseract {{image.png}} {{output}}`\n\n- Specify a custom language (default is English) with an ISO 639-2 code (e.g. deu = Deutsch = German):\n\n`tesseract -l deu {{image.png}} {{output}}`\n\n- List the ISO 639-2 codes of available languages:\n\n`tesseract --list-langs`\n\n- Specify a custom page segmentation mode (default is 3):\n\n`tesseract -psm {{0_to_10}} {{image.png}} {{output}}`\n\n- List page segmentation modes and their descriptions:\n\n`tesseract --help-psm`\n"},"test":{"Platform":"all","Class":"other cmds","Brief":"Evaluate condition.","MdText":"# test\n\n\u003e Evaluate condition.\n\u003e If it is true, returns 0 exit status, otherwise returns 1.\n\n- Test if given variable is equal to given string:\n\n`test $MY_VAR == '/bin/zsh'`\n\n- Test if given variable is empty:\n\n`test -z $GIT_BRANCH`\n\n- Test if file exists:\n\n`test -e {{filename}}`\n\n- Test if directory not exists:\n\n`test ! -d {{path/to/directory}}`\n\n- If-else statement:\n\n`test {{condition}} \u0026\u0026 echo \"true\" || echo \"false\"`\n"},"time":{"Platform":"all","Class":"system settings","Brief":"See how long a command takes.","MdText":"# time\n\n\u003e See how long a command takes.\n\n- Time \"ls\":\n\n`time ls`\n"},"timew":{"Platform":"all","Class":"system settings","Brief":"A time tracking tool used to measure the duration of activities.","MdText":"# timew\n\n\u003e A time tracking tool used to measure the duration of activities.\n\n- Start a new stopwatch, giving a tag name to the activity being tracked:\n\n`timew start {{activity_tag}}`\n\n- View running stopwatches:\n\n`timew`\n\n- Stop the stopwatch with a given tag name:\n\n`timew stop {{activity_tag}}`\n\n- Stop all running stopwatches:\n\n`timew stop`\n\n- View tracked items:\n\n`timew summary`\n"},"tldr":{"Platform":"all","Class":"other cmds","Brief":"Simplified man pages.","MdText":"# tldr\n\n\u003e Simplified man pages.\n\n- Get typical usages of a command (hint: this is how you got here!):\n\n`tldr {{command}}`\n\n- Show the tar tldr page for linux:\n\n`tldr -p {{linux}} {{tar}}`\n\n- Get help for a git subcommand:\n\n`tldr {{git checkout}}`\n"},"tldrl":{"Platform":"all","Class":"other cmds","Brief":"Lint and format TLDR pages.","MdText":"# tldrl\n\n\u003e Lint and format TLDR pages.\n\n- Lint all pages:\n\n`tldrl {{pages_directory}}`\n\n- Format a specific page to stdout:\n\n`tldrl -f {{page.md}}`\n\n- Format all pages in place:\n\n`tldrl -fi {{pages_directory}}`\n"},"tmux":{"Platform":"all","Class":"system man","Brief":"Multiplex several virtual consoles.","MdText":"# tmux\n\n\u003e Multiplex several virtual consoles.\n\n- Start a new tmux session:\n\n`tmux`\n\n- Start a new named tmux session:\n\n`tmux new -s {{name}}`\n\n- List sessions:\n\n`tmux ls`\n\n- Attach to a session:\n\n`tmux a`\n\n- Attach to a named session:\n\n`tmux a -t {{name}}`\n\n- Detach from session:\n\n`Ctrl + B, D`\n\n- Kill session:\n\n`tmux kill-session -t {{name}}`\n\n- Kill session when attached:\n\n`Ctrl + B, x (then hit 'y' for yes)`\n"},"tokei":{"Platform":"all","Class":"other cmds","Brief":"A program that prints out statistics about code.","MdText":"# tokei\n\n\u003e A program that prints out statistics about code.\n\n- Get a report on the code in a directory and all subdirectories:\n\n`tokei {{path/to/directory}}`\n\n- Get a report for a directory excluding `.min.js` files:\n\n`tokei {{path/to/directory}} -e {{*.min.js}}`\n\n- Print out statistics for individual files in a directory:\n\n`tokei {{path/to/directory}} --files`\n\n- Get a report for all files of type Rust and Markdown:\n\n`tokei {{path/to/directory}} -t={{Rust}},{{Markdown}}`\n"},"touch":{"Platform":"all","Class":"file man","Brief":"Change a file access and modification times (atime, mtime).","MdText":"# touch\n\n\u003e Change a file access and modification times (atime, mtime).\n\n- Create a new empty file(s) or change the times for existing file(s) to current time:\n\n`touch {{filename}}`\n\n- Set the times on a file to a specific date and time:\n\n`touch -t {{YYYYMMDDHHMM.SS}} {{filename}}`\n\n- Use the times from a file to set the times on a second file:\n\n`touch -r {{filename}} {{filename2}}`\n"},"tox":{"Platform":"all","Class":"other cmds","Brief":"Automate Python testing across multiple Python versions.","MdText":"# tox\n\n\u003e Automate Python testing across multiple Python versions.\n\u003e Use tox.ini to configure environments and test command.\n\n- Run tests on all test environments:\n\n`tox`\n\n- Create a tox.ini configuration:\n\n`tox-quickstart`\n\n- List the available environments:\n\n`tox --listenvs-all`\n\n- Run tests on a specific environment (e.g. python 3.6):\n\n`tox -e {{py36}}`\n\n- Force the virtual environment to be recreated:\n\n`tox --recreate -e {{py27}}`\n"},"tpp":{"Platform":"all","Class":"other cmds","Brief":"Command-Line based presentation tool.","MdText":"# tpp\n\n\u003e Command-Line based presentation tool.\n\n- View a presentation:\n\n`tpp {{filename}}`\n\n- Output a presentation:\n\n`tpp -t {{type}} -o {{outputname}} {{filename}}`\n"},"transcode":{"Platform":"all","Class":"other cmds","Brief":"Transcode video and audio codecs, and convert between media formats.","MdText":"# transcode\n\n\u003e Transcode video and audio codecs, and convert between media formats.\n\n- Create stabilisation file to be able to remove camera shakes:\n\n`transcode -J stabilize -i {{input_file}}`\n\n- Remove camera shakes after creating stabilisation file, transform video using xvid:\n\n`transcode -J transform -i {{input_file}} -y xvid -o {{output_file}}`\n\n- Resize the video to 640x480 pixels and convert to MPEG4 codec using xvid:\n\n`transcode -Z 640x480 -i {{input_file}} -y xvid -o {{output_file}}`\n"},"trash-cli":{"Platform":"all","Class":"other cmds","Brief":"A command line interface to the trashcan APIs.","MdText":"# trash-cli\n\n\u003e A command line interface to the trashcan APIs.\n\n- Trash files and directories:\n\n`trash-put {{file_name}}`\n\n- Empty the trashcan:\n\n`trash-empty`\n\n- List trashed files:\n\n`trash-list`\n\n- Restore a trashed file by choosing a number from the list that results from this command:\n\n`trash-restore`\n\n- Remove individual files from the trashcan:\n\n`trash-rm {{file_name}}`\n"},"trawl":{"Platform":"all","Class":"network comm","Brief":"Prints out network interface information to the console, much like ifconfig/ipconfig/ip/ifdata.","MdText":"# trawl\n\n\u003e Prints out network interface information to the console, much like ifconfig/ipconfig/ip/ifdata.\n\u003e Homepage: \u003chttps://github.com/robphoenix/trawl\u003e.\n\n- Show column names:\n\n`trawl -n`\n\n- Filter interface names using a case insensitive regular expression:\n\n`trawl -f wi`\n\n- Get a list of available interfaces:\n\n`trawl -i`\n\n- Include the loopback interface:\n\n`trawl -l`\n"},"true":{"Platform":"all","Class":"other cmds","Brief":"Returns a successful exit status code of 0.","MdText":"# true\n\n\u003e Returns a successful exit status code of 0.\n\u003e Use this with the || operator to make a command always exit with 0.\n\n- Return a successful exit code:\n\n`true`\n"},"truncate":{"Platform":"all","Class":"file man","Brief":"Shrink or extend the size of a file to the specified size.","MdText":"# truncate\n\n\u003e Shrink or extend the size of a file to the specified size.\n\n- Set a size of 10 GB to an exsting file, or create a new file with the specified size:\n\n`truncate -s {{10G}} {{filename}}`\n\n- Extend the file size by 50M, fill with holes (which reads as zero bytes):\n\n`truncate -s +{{50M}} {{filename}}`\n\n- Shrink the file by 2GiB, by removing data from the end of file:\n\n`truncate -s -{{2G}} {{filename}`\n"},"tslint":{"Platform":"all","Class":"other cmds","Brief":"A pluggable linting utility for TypeScript.","MdText":"# tslint\n\n\u003e A pluggable linting utility for TypeScript.\n\n- Create tslint config:\n\n`tslint --init`\n\n- Lint on a given set of files:\n\n`tslint {{filename}}.js {{filename1}}.js`\n\n- Fix lint issues:\n\n`tslint --fix`\n\n- Lint with the config file in the project root:\n\n`tslint --project {{path/to/project_root}}`\n"},"tty":{"Platform":"all","Class":"system man","Brief":"Returns terminal name.","MdText":"# tty\n\n\u003e Returns terminal name.\n\n- Print the file name of this terminal:\n\n`tty`\n"},"ufraw-batch":{"Platform":"all","Class":"other cmds","Brief":"Convert RAW files from cameras into standard image files.","MdText":"# ufraw-batch\n\n\u003e Convert RAW files from cameras into standard image files.\n\n- Simply convert RAW files to jpg:\n\n`ufraw-batch --out-type=jpg {{input_file(s)}}`\n\n- Simply convert RAW files to png:\n\n`ufraw-batch --out-type=png {{input_file(s)}}`\n\n- Extract the preview image from the raw file:\n\n`ufraw-batch --embedded-image {{input_file(s)}}`\n\n- Save the file with size up to the given maximums MAX1 and MAX2:\n\n`ufraw-batch --size=MAX1,MAX2 {{input_file(s)}}`\n"},"umount":{"Platform":"all","Class":"disk man","Brief":"Unlink a filesystem from its mount point, making it no longer accessible.","MdText":"# umount\n\n\u003e Unlink a filesystem from its mount point, making it no longer accessible.\n\u003e A filesystem cannot be unmounted when it is busy.\n\n- Unmount a filesystem, by passing the path to the source it is mounted from:\n\n`umount {{path/to/device_file}}`\n\n- Unmount a filesystem, by passing the path to the target where it is mounted:\n\n`umount {{path/to/mounted_directory}}`\n\n- Unmount all mounted filesystems (except the `proc` filesystem):\n\n`umount -a`\n"},"uname":{"Platform":"all","Class":"system settings","Brief":"Print details about the current machine and the operating system running on it.","MdText":"# uname\n\n\u003e Print details about the current machine and the operating system running on it.\n\u003e Note: for additional information about the operating system, try the `lsb_release` command.\n\n- Print hardware-related information: machine and processor:\n\n`uname -mp`\n\n- Print software-related information: operating system, release number, and version:\n\n`uname -srv`\n\n- Print the nodename (hostname) of the system:\n\n`uname -n`\n\n- Print all available system information (hardware, software, nodename):\n\n`uname -a`\n"},"unar":{"Platform":"all","Class":"file compress","Brief":"Extract contents from archive files.","MdText":"# unar\n\n\u003e Extract contents from archive files.\n\n- Extract an archive to the current directory:\n\n`unar {{archive}}`\n\n- Extract an archive to the specified directory:\n\n`unar -o {{path/to/directory}} {{archive}}`\n\n- Force overwrite if files to be unpacked already exist:\n\n`unar -f {{archive}}`\n\n- Force rename if files to be unpacked already exist:\n\n`unar -r {{archive}}`\n\n- Force skip if files to be unpacked already exist:\n\n`unar -s {{archive}}`\n"},"unexpand":{"Platform":"all","Class":"file editor","Brief":"Convert spaces to tabs.","MdText":"# unexpand\n\n\u003e Convert spaces to tabs.\n\n- Convert blanks in each file to tabs, writing to standard output:\n\n`unexpand {{file}}`\n\n- Convert blanks to tabs, reading from standard output:\n\n`unexpand`\n\n- Convert all blanks, instead of just initial blanks:\n\n`unexpand -a {{file}}`\n\n- Convert only leading sequences of blanks (overrides -a):\n\n`unexpand --first-only {{file}}`\n\n- Have tabs a certain number of characters apart, not 8 (enables -a):\n\n`unexpand -t {{number}} {{file}}`\n"},"uniq":{"Platform":"all","Class":"file man","Brief":"Output the unique lines from the given input or file.","MdText":"# uniq\n\n\u003e Output the unique lines from the given input or file.\n\u003e Since it does not detect repeated lines unless they are adjacent, we need to sort them first.\n\n- Display each line once:\n\n`sort {{file}} | uniq`\n\n- Display only unique lines:\n\n`sort {{file}} | uniq -u`\n\n- Display only duplicate lines:\n\n`sort {{file}} | uniq -d`\n\n- Display number of occurrences of each line along with that line:\n\n`sort {{file}} | uniq -c`\n\n- Display number of occurrences of each line, sorted by the most frequent:\n\n`sort {{file}} | uniq -c | sort -nr`\n"},"unrar":{"Platform":"all","Class":"file compress","Brief":"Extract RAR archives.","MdText":"# unrar\n\n\u003e Extract RAR archives.\n\n- Extract files with original directory structure:\n\n`unrar x {{compressed.rar}}`\n\n- Extract files into current directory, losing directory structure in the archive:\n\n`unrar e {{compressed.rar}}`\n\n- Test integrity of each file inside the archive file:\n\n`unrar t {{compressed.rar}}`\n\n- List files inside the archive file without decompressing it:\n\n`unrar l {{compressed.rar}}`\n"},"uptime":{"Platform":"all","Class":"system man","Brief":"Tell how long the system has been running and other information.","MdText":"# uptime\n\n\u003e Tell how long the system has been running and other information.\n\n- Print current time, uptime, number of logged-in users and other information:\n\n`uptime`\n\n- Show only the amount of time the system has been booted for:\n\n`uptime --pretty`\n\n- Print the date and time the system booted up at:\n\n`uptime --since`\n\n- Show version information:\n\n`uptime --version`\n"},"users":{"Platform":"all","Class":"system man","Brief":"Display a list of logged in users.","MdText":"# users\n\n\u003e Display a list of logged in users.\n\n- Display a list of logged in users:\n\n`users`\n\n- Display a list of logged in users according to a specific file:\n\n`users {{/var/log/wmtp}}`\n"},"valgrind":{"Platform":"all","Class":"other cmds","Brief":"Wrapper for a set of expert tools for profiling, optimizing and debugging programs.","MdText":"# valgrind\n\n\u003e Wrapper for a set of expert tools for profiling, optimizing and debugging programs.\n\u003e Commonly used tools include `memcheck`, `cachegrind`, `callgrind`, `massif`, `helgrind`, and `drd`.\n\n- Use the (default) Memcheck tool to show a diagnostic of memory usage by `program`:\n\n`valgrind {{program}}`\n\n- Use Memcheck to report all possible memory leaks of `program` in full detail:\n\n`valgrind --leak-check=full --show-leak-kinds=all {{program}}`\n\n- Use the Cachegrind tool to profile and log CPU cache operations of `program`:\n\n`valgrind --tool=cachegrind {{program}}`\n\n- Use the Massif tool to profile and log heap memory and stack usage of `program`:\n\n`valgrind --tool=massif --stacks=yes {{program}}`\n"},"vault":{"Platform":"all","Class":"other cmds","Brief":"A CLI to interact with HashiCorp Vault.","MdText":"# vault\n\n\u003e A CLI to interact with HashiCorp Vault.\n\n- Connect to a Vault server and initialize a new encrypted data store:\n\n`vault init`\n\n- Unseal (unlock) the vault, by providing one of the key shares needed to access the encrypted data store:\n\n`vault unseal {{key-share-x}}`\n\n- Authenticate the CLI client against the Vault server, using an authentication token:\n\n`vault auth {{authentication_token}}`\n\n- Store a new secret in the vault, using the generic back-end called \"secret\":\n\n`vault write secret/{{hello}} value={{world}}`\n\n- Read a value from the vault, using the generic back-end called \"secret\":\n\n`vault read secret/{{hello}}`\n\n- Seal (lock) the Vault server, by removing the encryption key of the data store from memory:\n\n`vault seal`\n"},"vim":{"Platform":"all","Class":"file editor","Brief":"Vi IMproved, a programmer's text editor, provides several modes for different kinds of text manipulation.","MdText":"# vim\n\n\u003e Vi IMproved, a programmer's text editor, provides several modes for different kinds of text manipulation.\n\u003e Pressing `i` enters edit mode. `\u003cEsc\u003e` goes back to normal mode, which doesn't allow regular text insertion.\n\n- Open a file:\n\n`vim {{file}}`\n\n- Enter text editing mode (insert mode):\n\n`\u003cEsc\u003ei`\n\n- Copy (\"yank\") or cut (\"delete\") the current line (paste it with `P`):\n\n`\u003cEsc\u003e{{yy|dd}}`\n\n- Undo the last operation:\n\n`\u003cEsc\u003eu`\n\n- Search for a pattern in the file (press `n`/`N` to go to next/previous match):\n\n`\u003cEsc\u003e/{{search_pattern}}\u003cEnter\u003e`\n\n- Perform a regex substitution in the whole file:\n\n`\u003cEsc\u003e:%s/{{pattern}}/{{replacement}}/g\u003cEnter\u003e`\n\n- Save (write) the file, and quit:\n\n`\u003cEsc\u003e:wq\u003cEnter\u003e`\n\n- Quit without saving:\n\n`\u003cEsc\u003e:q!\u003cEnter\u003e`\n"},"vimdiff":{"Platform":"all","Class":"file editor","Brief":"Open up to four files in vim and show the differences between them.","MdText":"# vimdiff\n\n\u003e Open up to four files in vim and show the differences between them.\n\u003e See `vim` documentation for working with files and navigating within a window.\n\n- Open two files and show the differences (up to four files can be compared):\n\n`vimdiff {{file1}} {{file2}}`\n\n- Open two files using a horizontal window split instead of the default vertical split:\n\n`vimdiff -o {{file1}} {{file2}}`\n\n- Move the cursor to the window on the left|right|up|down:\n\n`Ctrl + w {{h|l|k|j}}`\n"},"virtualboxvm":{"Platform":"all","Class":"other cmds","Brief":"The VirtualBox virtual machine management CLI.","MdText":"# virtualboxvm\n\n\u003e The VirtualBox virtual machine management CLI.\n\n- Start a virtual machine:\n\n`virtualboxvm --startvm {{name|uuid}}`\n\n- Start a virtual machine in fullscreen mode:\n\n`virtualboxvm --startvm {{name|uuid}} --fullscreen`\n\n- Mount the specified DVD image file:\n\n`virtualboxvm --startvm {{name|uuid}} --dvd {{path/to/image_file}}`\n\n- Display a command line window with debug information:\n\n`virtualboxvm --startvm {{name|uuid}} --debug-command-line`\n\n- Start a virtual machine in a paused state:\n\n`virtualboxvm --startvm {{name|uuid}} --start-paused`\n"},"virtualenv":{"Platform":"all","Class":"other cmds","Brief":"Create virtual isolated Python environments.","MdText":"# virtualenv\n\n\u003e Create virtual isolated Python environments.\n\u003e Homepage: \u003chttps://virtualenv.pypa.io/\u003e.\n\n- Create a new environment:\n\n`virtualenv {{path/to/venv}}`\n\n- Customize the prompt prefix:\n\n`virtualenv --prompt={{prompt_prefix}} {{path/to/venv}}`\n\n- Use a different version of Python with virtualenv:\n\n`virtualenv --python={{path/to/pythonbin}} {{path/to/venv}}`\n\n- Start (select) the environment:\n\n`source {{path/to/venv}}/bin/activate`\n\n- Stop the environment:\n\n`deactivate`\n"},"visudo":{"Platform":"all","Class":"other cmds","Brief":"Safely edit the sudoers file.","MdText":"# visudo\n\n\u003e Safely edit the sudoers file.\n\n- Edit sudoers file:\n\n`sudo visudo`\n\n- Check sudoers file for errors:\n\n`sudo visudo -c`\n"},"vue":{"Platform":"all","Class":"other cmds","Brief":"Simple CLI for scaffolding Vue.js projects.","MdText":"# vue-cli\n\n\u003e Simple CLI for scaffolding Vue.js projects.\n\u003e Official templates include: webpack, webpack-simple, browserify, browserify-simple, simple.\n\n- Create a new vue project:\n\n`vue init {{template}} {{project_name}}`\n\n- Create a new project with a local template:\n\n`vue init {{path/to/template_directory}} {{project_name}}`\n\n- Create project using template on GitHub:\n\n`vue init {{username}}/{{repo}} {{project_name}}`\n"},"w":{"Platform":"all","Class":"system man","Brief":"Show who is logged on and what they are doing.","MdText":"# w\n\n\u003e Show who is logged on and what they are doing.\n\u003e Print user login, TTY, remote host, login time, idle time, current process.\n\n- Show logged-in users info:\n\n`w`\n\n- Show logged-in users info without a header:\n\n`w -h`\n"},"w3m":{"Platform":"all","Class":"network comm","Brief":"A text-based web browser.","MdText":"# w3m\n\n\u003e A text-based web browser.\n\n- Open an URL:\n\n`w3m {{http://example.com}}`\n\n- Quit w3m:\n\n`'q' then 'y'`\n"},"wasm2c":{"Platform":"all","Class":"network comm","Brief":"Convert a file from the WebAssembly binary format to a C source file and header.","MdText":"# wasm2c\n\n\u003e Convert a file from the WebAssembly binary format to a C source file and header.\n\n- Convert a file to a C source file and header and display it to the console:\n\n`wasm2c {{file.wasm}}`\n\n- Write the output to a given file (file.h gets additionally generated):\n\n`wasm2c {{file.wasm}} -o {{file.c}}`\n"},"wasm2wat":{"Platform":"all","Class":"network comm","Brief":"Convert a file from the WebAssembly binary format to the text format.","MdText":"# wasm2wat\n\n\u003e Convert a file from the WebAssembly binary format to the text format.\n\n- Convert a file to the text format and display it to the console:\n\n`wasm2wat {{file.wasm}}`\n\n- Write the output to a given file:\n\n`wasm2wat {{file.wasm}} -o {{file.wat}}`\n"},"wat2wasm":{"Platform":"all","Class":"network comm","Brief":"Convert a file from the WebAssembly text format to the binary format.","MdText":"# wat2wasm\n\n\u003e Convert a file from the WebAssembly text format to the binary format.\n\n- Parse and check a file for errors:\n\n`wat2wasm {{file.wat}}`\n\n- Write the output binary to a given file:\n\n`wat2wasm {{file.wat}} -o {{file.wasm}}`\n\n- Display simplified representation of every byte:\n\n`wat2wasm -v {{file.wat}}`\n"},"watch":{"Platform":"all","Class":"other cmds","Brief":"Execute a program periodically, showing output fullscreen.","MdText":"# watch\n\n\u003e Execute a program periodically, showing output fullscreen.\n\n- Repeatedly run a command and show the result:\n\n`watch {{command}}`\n\n- Re-run a command every 60 seconds:\n\n`watch -n {{60}} {{command}}`\n\n- Monitor the contents of a directory, highlighting differences as they appear:\n\n`watch -d {{ls -l}}`\n"},"wc":{"Platform":"all","Class":"file editor","Brief":"Count words, bytes, or lines.","MdText":"# wc\n\n\u003e Count words, bytes, or lines.\n\n- Count lines in file:\n\n`wc -l {{file}}`\n\n- Count words in file:\n\n`wc -w {{file}}`\n\n- Count characters (bytes) in file:\n\n`wc -c {{file}}`\n\n- Count characters in file (taking multi-byte character sets into account):\n\n`wc -m {{file}}`\n"},"weasyprint":{"Platform":"all","Class":"other cmds","Brief":"Render HTML to PDF or PNG.","MdText":"# weasyprint\n\n\u003e Render HTML to PDF or PNG.\n\u003e Homepage: \u003chttps://weasyprint.org/\u003e.\n\n- Render a HTML file to PDF:\n\n`weasyprint {{path/to/input.html}} {{path/to/output}}.pdf`\n\n- Render a HTML file to PNG, including an additional user stylesheet:\n\n`weasyprint {{path/to/input.html}} {{path/to/output}}.png --stylesheet {{path/to/stylesheet.css}}`\n\n- Output additional debugging information when rendering:\n\n`weasyprint {{path/to/input.html}} {{path/to/output}}.pdf --verbose`\n\n- Specify a custom resolution when outputting to PNG:\n\n`weasyprint {{path/to/input.html}} {{path/to/output}}.png --resolution {{300}}`\n\n- Specify a base url for relative urls in the input HTML file:\n\n`weasyprint {{path/to/input.html}} {{path/to/output}}.png --base-url {{url_or_filename}}`\n"},"web-ext":{"Platform":"all","Class":"other cmds","Brief":"A command line tool for managing web extension development.","MdText":"# web-ext\n\n\u003e A command line tool for managing web extension development.\n\u003e Homepage: \u003chttps://www.npmjs.com/package/web-ext\u003e.\n\n- Run the web extension in the current directory in Firefox:\n\n`web-ext run`\n\n- Run a web extension from a specific directory in Firefox:\n\n`web-ext run --source-dir {{path/to/directory}}`\n\n- Display verbose execution output:\n\n`web-ext run --verbose`\n\n- Run a web extension in Firefox Android:\n\n`web-ext run --target firefox-android`\n\n- Lint the manifest and source files for errors:\n\n`web-ext lint`\n\n- Build and package the extension:\n\n`web-ext build`\n\n- Display verbose build output:\n\n`web-ext build --verbose`\n\n- Sign a package for self-hosting:\n\n`web-ext sign --api-key {{api_key}} --api-secret {{api_secret}}`\n"},"webpack":{"Platform":"all","Class":"other cmds","Brief":"Bundle a web project's js files and other assets into a single output file.","MdText":"# webpack\n\n\u003e Bundle a web project's js files and other assets into a single output file.\n\n- Create a single output file from an entry point file:\n\n`webpack {{app.js}} {{bundle.js}}`\n\n- Load css files too from the js file (this uses the css loader for .css files):\n\n`webpack {{app.js}} {{bundle.js}} --module-bind 'css=css'`\n\n- Pass a config file (with eg. the entry script and the output filename) and show compilation progress:\n\n`webpack --config {{webpack.config.js}} --progress`\n\n- Automatically recompile on changes to project files:\n\n`webpack --watch {{app.js}} {{bundle.js}}`\n"},"webtorrent":{"Platform":"all","Class":"other cmds","Brief":"The command line interface for WebTorrent.","MdText":"# webtorrent\n\n\u003e The command line interface for WebTorrent.\n\u003e Supports magnets, urls, info hashes and .torrent files.\n\n- Download a torrent:\n\n`webtorrent download \"{{torrent_id}}\"`\n\n- Stream a torrent to VLC media player:\n\n`webtorrent download \"{{torrent_id}}\" --vlc`\n\n- Stream a torrent to a Digital Living Network Alliance (DLNA) device:\n\n`webtorrent download \"{{torrent_id}}\" --dlna`\n\n- Display a list of files for a specific torrent:\n\n`webtorrent download \"{{torrent_id}}\" --select`\n\n- Specify a file index from the torrent to download:\n\n`webtorrent download \"{{torrent_id}}\" --select {{index}}`\n\n- Seed a specific file or directory:\n\n`webtorrent seed {{path/to/file_or_directory}}`\n\n- Create a new torrent file for the specified file path:\n\n`webtorrent create {{path/to/file}}`\n\n- Display information for a magnet uri or .torrent file:\n\n`webtorrent info {{path/to/file_or_magnet}}`\n"},"wget":{"Platform":"all","Class":"network comm","Brief":"Download files from the Web.","MdText":"# wget\n\n\u003e Download files from the Web.\n\u003e Supports HTTP, HTTPS, and FTP.\n\n- Download the contents of an URL to a file (named \"foo\" in this case):\n\n`wget {{https://example.com/foo}}`\n\n- Download the contents of an URL to a file (named \"bar\" in this case):\n\n`wget -O {{bar}} {{https://example.com/foo}}`\n\n- Download a single web page and all its resources with 3-second intervals between requests (scripts, stylesheets, images, etc.):\n\n`wget --page-requisites --convert-links --wait=3 {{https://example.com/somepage.html}}`\n\n- Download all listed files within a directory and its sub-directories (does not download embedded page elements):\n\n`wget --mirror --no-parent {{https://example.com/somepath/}}`\n\n- Limit the download speed and the number of connection retries:\n\n`wget --limit-rate={{300k}} --tries={{100}} {{https://example.com/somepath/}}`\n\n- Download a file from an HTTP server using Basic Auth (also works for FTP):\n\n`wget --user={{username}} --password={{password}} {{https://example.com}}`\n\n- Continue an incomplete download:\n\n`wget -c {{https://example.com}}`\n\n- Download all URLs stored in a text file to a specific directory:\n\n`wget -P {{path/to/directory}} -i {{URLs.txt}}`\n"},"where":{"Platform":"all","Class":"system man","Brief":"Reports all known instances of a command.","MdText":"# where\n\n\u003e Reports all known instances of a command.\n\u003e It could be an executable in the PATH environment variable, an alias, or a shell builtin.\n\n- Find all instances of a command:\n\n`where {{command}}`\n"},"which":{"Platform":"all","Class":"system man","Brief":"Locate a program in the user's path.","MdText":"# which\n\n\u003e Locate a program in the user's path.\n\n- Search the PATH environment variable and display the location of any matching executables:\n\n`which {{executable}}`\n\n- If there are multiple executables which match, display all:\n\n`which -a {{executable}}`\n"},"while":{"Platform":"all","Class":"system man","Brief":"Simple shell loop.","MdText":"# while\n\n\u003e Simple shell loop.\n\n- Read stdin and perform an action on every line:\n\n`while read line; do echo \"$line\"; done`\n\n- Execute a command forever once every second:\n\n`while :; do {{command}}; sleep 1; done`\n"},"who":{"Platform":"all","Class":"system man","Brief":"Display who is logged in and related data (processes, boot time).","MdText":"# who\n\n\u003e Display who is logged in and related data (processes, boot time).\n\n- Display the username, line, and time of all currently logged-in sessions:\n\n`who`\n\n- Display information only for the current terminal session:\n\n`who am i`\n\n- Display all available information:\n\n`who -a`\n\n- Display all available information with table headers:\n\n`who -a -H`\n"},"wordgrinder":{"Platform":"all","Class":"file editor","Brief":"Command-line word processor.","MdText":"# wordgrinder\n\n\u003e Command-line word processor.\n\n- Start wordgrinder (loads a blank document by default):\n\n`wordgrinder`\n\n- Open a given file:\n\n`wordgrinder {{filename}}`\n\n- Show the menu:\n\n`Alt + M`\n"},"wpa_supplicant":{"Platform":"all","Class":"other cmds","Brief":"Manage protected wireless networks.","MdText":"# wpa_supplicant\n\n\u003e Manage protected wireless networks.\n\n- Join a protected wireless network:\n\n`wpa_supplicant -i {{interface}} -c {{path/to/wpa_supplicant_conf.conf}}`\n\n- Join a protected wireless network and run it in a daemon:\n\n`wpa_supplicant -B -i {{interface}} -c {{path/to/wpa_supplicant_conf.conf}}`\n"},"xmllint":{"Platform":"all","Class":"file editor","Brief":"XML parser and linter that supports XPath, a syntax for navigating XML trees.","MdText":"# xmllint\n\n\u003e XML parser and linter that supports XPath, a syntax for navigating XML trees.\n\n- Return all nodes (tags) named \"foo\":\n\n`xmllint --xpath \"//{{foo}}\" {{source_file.xml}}`\n\n- Return the contents of the first node named \"foo\" as a string:\n\n`xmllint --xpath \"string(//{{foo}})\" {{source_file.xml}}`\n\n- Return the href attribute of the second anchor element in an html file:\n\n`xmllint --html --xpath \"string(//a[2]/@href)\" webpage.xhtml`\n\n- Return human-readable (indented) XML from file:\n\n`xmllint --format {{source_file.xml}}`\n\n- Check that a XML file meets the requirements of its DOCTYPE declaration:\n\n`xmllint --valid {{source_file.xml}}`\n\n- Validate XML against DTD schema hosted online:\n\n`xmllint --dtdvalid {{URL}} {{source_file.xml}}`\n"},"xo":{"Platform":"all","Class":"other cmds","Brief":"A pluggable zero configuration linting utility for JavaScript.","MdText":"# xo\n\n\u003e A pluggable zero configuration linting utility for JavaScript.\n\n- Lint files in \"src\":\n\n`xo`\n\n- Lint on a gives set of files:\n\n`xo {{filename}}.js {{filename1}}.js`\n\n- Fix lint issues:\n\n`xo --fix`\n\n- Lint with spaces as indentation instead of tabs:\n\n`xo --space`\n\n- Lint with prettier code style:\n\n`xo --prettier`\n"},"xxd":{"Platform":"all","Class":"file editor","Brief":"Create a hexadecimal representation (hexdump) from a binary file, or vice-versa.","MdText":"# xxd\n\n\u003e Create a hexadecimal representation (hexdump) from a binary file, or vice-versa.\n\n- Generate a hexdump from a binary file and display the output:\n\n`xxd {{input_file}}`\n\n- Generate a hexdump from a binary file and save it as a text file:\n\n`xxd {{input_file}} {{output_file}}`\n\n- Display the output with 10 columns of one octet (byte) each:\n\n`xxd -c {{10}} {{input_file}}`\n\n- Display output only up to a length of 32 bytes:\n\n`xxd -l {{32}} {{input_file}}`\n\n- Display the output in plain mode, without any gaps between the columns:\n\n`xxd -p {{input_file}}`\n\n- Revert a plaintext hexdump back into binary, and save it as a binary file:\n\n`xxd -r -p {{input_file}} {{output_file}}`\n"},"yarn":{"Platform":"all","Class":"other cmds","Brief":"JavaScript and Node.js package manager alternative.","MdText":"# yarn\n\n\u003e JavaScript and Node.js package manager alternative.\n\u003e Homepage: \u003chttps://yarnpkg.com\u003e.\n\n- Install a module globally:\n\n`yarn global add {{module_name}}`\n\n- Install all dependencies referenced in the `package.json` file (the `install` is optional):\n\n`yarn install`\n\n- Install a module and save it as a dependency to the `package.json` file (add `--dev` to save as a dev dependency):\n\n`yarn add {{module_name}}@{{version}}`\n\n- Uninstall a module and remove it from the `package.json` file:\n\n`yarn remove {{module_name}}`\n\n- Interactively create a `package.json` file:\n\n`yarn init`\n\n- Identify whether a module is a dependency and list other modules that depend upon it:\n\n`yarn why {{module_name}}`\n"},"zbarimg":{"Platform":"all","Class":"other cmds","Brief":"Scan and decode bar codes from image file(s).","MdText":"# zbarimg\n\n\u003e Scan and decode bar codes from image file(s).\n\n- Process an image file:\n\n`zbarimg {{image_file}}`\n"},"zcat":{"Platform":"all","Class":"file man","Brief":"Print data from gzip compressed files.","MdText":"# zcat\n\n\u003e Print data from gzip compressed files.\n\n- Print the uncompressed contents of a gzipped file to the standard output:\n\n`zcat {{file.txt.gz}}`\n\n- Print compression details of a gzipped file to the standard output:\n\n`zcat -l {{file.txt.gz}}`\n"},"zfs":{"Platform":"all","Class":"file man","Brief":"Manage ZFS filesystems.","MdText":"# zfs\n\n\u003e Manage ZFS filesystems.\n\n- List all available zfs filesystems:\n\n`zfs list`\n\n- Create a new ZFS filesystem:\n\n`zfs create {{pool_name/filesystem_name}}`\n\n- Delete a ZFS filesystem:\n\n`zfs destroy {{pool_name/filesystem_name}}`\n\n- Create a Snapshot of a ZFS filesystem:\n\n`zfs snapshot {{pool_name/filesystem_name}}@{{snapshot_name}}`\n\n- Enable compression on a filesystem:\n\n`zfs set compression=on {{pool_name/filesystem_name}}`\n\n- Change mountpoint for a filesystem:\n\n`zfs set mountpoint={{/my/mount/path}} {{pool_name/filesystem_name}}`\n"},"zip":{"Platform":"all","Class":"file compress","Brief":"Package and compress (archive) files into zip file.","MdText":"# zip\n\n\u003e Package and compress (archive) files into zip file.\n\n- Package and compress a directory and its contents, [r]ecursively:\n\n`zip -r {{compressed.zip}} {{/path/to/dir}}`\n\n- E[x]clude unwanted files from being added to the compressed archive:\n\n`zip -r {{compressed.zip}} {{path/to/dir}} -x {{path/to/exclude}}`\n\n- Archive a directory and its contents with the highest level [9] of compression:\n\n`zip -r -{{9}} {{compressed.zip}} {{/path/to/dir}}`\n\n- Package and compress multiple directories and files:\n\n`zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}`\n\n- Create an encrypted archive (user will be prompted for a password):\n\n`zip -e -r {{compressed.zip}} {{path/to/dir}}`\n\n- Add files to an existing zip file:\n\n`zip {{compressed.zip}} {{path/to/file}}`\n\n- Delete files from an existing zip file:\n\n`zip -d {{compressed.zip}} \"{{foo/*.tmp}}\"`\n\n- Archive a directory and its contents to a multi-part [s]plit zip file (e.g. 3GB parts):\n\n`zip -r -s {{3g}} {{compressed.zip}} {{path/to/dir}}`\n"},"zless":{"Platform":"all","Class":"file compress","Brief":"View compressed files.","MdText":"# zless\n\n\u003e View compressed files.\n\n- Page through a compressed archive with `less`:\n\n`zless {{file.txt.gz}}`\n"},"zopflipng":{"Platform":"all","Class":"other cmds","Brief":"PNG image compression utility.","MdText":"# zopflipng\n\n\u003e PNG image compression utility.\n\n- Optimize a PNG image:\n\n`zopflipng {{input.png}} {{output.png}}`\n\n- Optimize several PNG images and save with given prefix:\n\n`zopflipng --prefix={{prefix}} {{image1.png}} {{image2.png}} {{image3.png}}`\n"},"zsh":{"Platform":"all","Class":"system man","Brief":"Z SHell.","MdText":"# zsh\n\n\u003e Z SHell.\n\u003e `bash` and `sh`-compatible command line interpreter.\n\n- Start interactive command line interpreter:\n\n`zsh`\n\n- Execute command passed as parameter:\n\n`zsh -c {{command}}`\n\n- Run commands from file (script):\n\n`zsh {{file}}`\n\n- Run commands from file and print them as they are executed:\n\n`zsh -x {{file}}`\n"},"zstd":{"Platform":"all","Class":"file compress","Brief":"Compress or decompress files with Zstandard compression.","MdText":"# zstd\n\n\u003e Compress or decompress files with Zstandard compression.\n\n- Compress a file into a new file with the .zst suffix:\n\n`zstd {{file}}`\n\n- Decompress a file:\n\n`zstd -d {{file}}.zst`\n\n- Decompress to stdout:\n\n`zstd -dc {{file}}.zst`\n\n- Compress a file, while specifing the compression level. 0 = Worst, 19 = Best (Default level is 3):\n\n`zstd -{{level}} {{file}}`\n\n- Use more memory (both when compressing and decompressing) to achieve a higher compression ratio:\n\n`zstd --ultra -{{level}} {{file}}`\n"}}

module.exports = {
    commands : commands
}
