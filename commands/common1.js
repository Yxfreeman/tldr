var commands =
{"7za":{"Platform":"all","Class":"file compress","Brief":"A file archiver with high compression ratio.","MdText":"# 7za\n\n\u003e A file archiver with high compression ratio.\n\u003e A standalone version of `7z` with support for fewer archive types.\n\u003e Homepage: \u003chttps://www.7-zip.org/\u003e.\n\n- Archive a file or directory:\n\n`7za a {{archived.7z}} {{path/to/file_or_directory}}`\n\n- Extract an existing 7z file with original directory structure:\n\n`7za x {{archived}}`\n\n- Archive using a specific archive type:\n\n`7za a -t{{zip|gzip|bzip2|tar}} {{archived}} {{path/to/file_or_directory}}`\n\n- List available archive types:\n\n`7za i`\n\n- List the contents of an archive file:\n\n`7za l {{archived}}`\n"},"7zr":{"Platform":"all","Class":"file compress","Brief":"A file archiver with high compression ratio.","MdText":"# 7zr\n\n\u003e A file archiver with high compression ratio.\n\u003e A standalone version of `7z` that only supports .7z files.\n\u003e Homepage: \u003chttps://www.7-zip.org/\u003e.\n\n- Archive a file or directory:\n\n`7zr a {{archived.7z}} {{path/to/file_or_directory}}`\n\n- Extract an existing 7z file with original directory structure:\n\n`7zr x {{archived.7z}}`\n\n- List the contents of an archive file:\n\n`7zr l {{archived.7z}}`\n"},"abduco":{"Platform":"all","Class":"system man","Brief":"Terminal session manager.","MdText":"# abduco\n\n\u003e Terminal session manager.\n\u003e Homepage: \u003chttp://www.brain-dump.org/projects/abduco/\u003e.\n\n- List sessions:\n\n`abduco`\n\n- Attach to a session, creating it if it doesn't exist:\n\n`abduco -A {{name}} {{bash}}`\n\n- Attach to a session with `dvtm`, creating it if it doesn't exist:\n\n`abduco -A {{name}}`\n\n- Detach from a session:\n\n`Ctrl + \\`\n\n- Attach to a session in read-only mode:\n\n`abduco -Ar {{name}}`\n"},"ansible":{"Platform":"all","Class":"system man","Brief":"Manage groups of computers remotely over SSH.","MdText":"# ansible\n\n\u003e Manage groups of computers remotely over SSH.\n\u003e Use the /etc/ansible/hosts file to add new groups/hosts.\n\u003e Homepage: \u003chttps://www.ansible.com/\u003e.\n\n- List hosts belonging to a group:\n\n`ansible {{group}} --list-hosts`\n\n- Ping a group of hosts by invoking the ping module:\n\n`ansible {{group}} -m ping`\n\n- Display facts about a group of hosts by invoking the setup module:\n\n`ansible {{group}} -m setup`\n\n- Execute a command on a group of hosts by invoking command module with arguments:\n\n`ansible {{group}} -m command -a '{{my_command}}'`\n\n- Execute a command with administrative privileges:\n\n`ansible {{group}} --become --ask-become-pass -m command -a '{{my_command}}'`\n\n- Execute a command using a custom inventory file:\n\n`ansible {{group}} -i {{inventory_file}} -m command -a '{{my_command}}'`\n"},"apg":{"Platform":"all","Class":"system man","Brief":"Creates arbitrarily complex random passwords.","MdText":"# apg\n\n\u003e Creates arbitrarily complex random passwords.\n\n- Create random passwords (default password length is 8):\n\n`apg`\n\n- Create a password with at least 1 symbol (S), 1 number (N), 1 uppercase (C), 1 lowercase (L):\n\n`apg -M SNCL`\n\n- Create a password with 16 characters:\n\n`apg -m {{16}}`\n\n- Create a password with maximum length of 16:\n\n`apg -x {{16}}`\n\n- Create a password that doesn't appear in a dictionary (the dictionary file has to be provided):\n\n`apg -r {{dictionary_file}}`\n"},"arp":{"Platform":"all","Class":"system man","Brief":"Show and manipulate your system's ARP cache.","MdText":"# arp\n\n\u003e Show and manipulate your system's ARP cache.\n\n- Show current arp table:\n\n`arp -a`\n\n- Clear the entire cache:\n\n`sudo arp -a -d`\n\n- Delete a specific entry:\n\n`arp -d {{address}}`\n\n- Create an entry:\n\n`arp -s {{address}} {{mac_address}}`\n"},"asciinema":{"Platform":"all","Class":"other cmds","Brief":"Record and replay terminal sessions, and optionally share them on asciinema.org.","MdText":"# asciinema\n\n\u003e Record and replay terminal sessions, and optionally share them on asciinema.org.\n\u003e Homepage: \u003chttps://asciinema.org/\u003e.\n\n- Associate the local install of `asciinema` with an asciinema.org account:\n\n`asciinema auth`\n\n- Make a new recording (once finished, user will be prompted to upload it or save it locally):\n\n`asciinema rec`\n\n- Make a new recording and save it to a local file:\n\n`asciinema rec {{path/to/file}}.cast`\n\n- Replay a terminal recording from a local file:\n\n`asciinema play {{path/to/file}}.cast`\n\n- Replay a terminal recording hosted on asciinema.org:\n\n`asciinema play https://asciinema.org/a/{{cast_id}}`\n\n- Make a new recording, limiting any idle time to at most 2.5 seconds:\n\n`asciinema rec -i {{2.5}}`\n\n- Print the full output of a locally saved recording:\n\n`asciinema cat {{path/to/file}}.cast`\n\n- Upload a locally saved terminal session to asciinema.org:\n\n`asciinema upload {{path/to/file}}.cast`\n"},"astyle":{"Platform":"all","Class":"file editor","Brief":"Source code indenter, formatter, and beautifier for the C, C++, C# and Java programming languages.","MdText":"# astyle\n\n\u003e Source code indenter, formatter, and beautifier for the C, C++, C# and Java programming languages.\n\u003e Upon running, a copy of the original file is created with an \".orig\" appended to the original file name.\n\u003e Homepage: \u003chttp://astyle.sourceforge.net/\u003e.\n\n- Apply the default style of 4 spaces per indent and no formatting changes:\n\n`astyle {{source_file}}`\n\n- Apply the java style with attached braces:\n\n`astyle --style=java {{path/to/file}}`\n\n- Apply the allman style with broken braces:\n\n`astyle --style=allman {{path/to/file}}`\n\n- Apply a custom indent using spaces. Choose between 2 and 20 spaces:\n\n`astyle --indent=spaces={{number_of_spaces}} {{path/to/file}}`\n\n- Apply a custom indent using tabs. Choose between 2 and 20 tabs:\n\n`astyle --indent=tab={{number_of_tabs}} {{path/to/file}}`\n"},"at":{"Platform":"all","Class":"system man","Brief":"Execute commands once at a later time.","MdText":"# at\n\n\u003e Execute commands once at a later time.\n\u003e Service atd (or atrun) should be running for the actual executions.\n\n- Execute commands from standard input in 5 minutes (press `Ctrl + D` when done):\n\n`at now + 5 minutes`\n\n- Execute a command from standard input at 10:00 AM today:\n\n`echo \"{{./make_db_backup.sh}}\" | at 1000`\n\n- Execute commands from a given file next Tuesday:\n\n`at -f {{path/to/file}} 9:30 PM Tue`\n"},"autoflake":{"Platform":"all","Class":"other cmds","Brief":"A tool to remove unused imports and variables from Python code.","MdText":"# autoflake\n\n\u003e A tool to remove unused imports and variables from Python code.\n\u003e Homepage: \u003chttps://github.com/myint/autoflake\u003e.\n\n- Remove unused variables from a single file and display the diff:\n\n`autoflake --remove-unused-variables {{file.py}}`\n\n- Remove unused imports from multiple files and display the diffs:\n\n`autoflake --remove-all-unused-imports {{file1.py}} {{file2.py}} {{file3.py}}`\n\n- Remove unused variables from a file, overwriting the file:\n\n`autoflake --remove-unused-variables --in-place {{file.py}}`\n\n- Remove unused variables recursively from all files in a directory, overwriting each file:\n\n`autoflake --remove-unused-variables --in-place --recursive {{path/to/directory}}`\n"},"autojump":{"Platform":"all","Class":"file man","Brief":"Quickly jump among the directories you visit the most.","MdText":"# autojump\n\n\u003e Quickly jump among the directories you visit the most.\n\u003e Aliases like j or jc are provided for even less typing.\n\u003e Homepage: \u003chttps://github.com/wting/autojump\u003e.\n\n- Jump to a directory that contains the given pattern:\n\n`j {{pattern}}`\n\n- Jump to a sub-directory (child) of the current directory that contains the given pattern:\n\n`jc {{pattern}}`\n\n- Open a directory that contains the given pattern in the operating system file manager:\n\n`jo {{pattern}}`\n\n- Remove non-existing directories from the autojump database:\n\n`j --purge`\n\n- Show the entries in the autojump database:\n\n`j -s`\n"},"badblocks":{"Platform":"all","Class":"disk maint","Brief":"Search a device for bad blocks.","MdText":"# badblocks\n\n\u003e Search a device for bad blocks.\n\u003e Some usages of badblocks can cause destructive actions, such as erasing all the data on a disk, including the partition table.\n\n- Search a disk for bad blocks by using a non-destructive read-only test:\n\n`sudo badblocks {{/dev/sda}}`\n\n- Search an unmounted disk for bad blocks with a non-destructive read-write test:\n\n`sudo badblocks -n {{/dev/sda}}`\n\n- Search an unmounted disk for bad blocks with a destructive write test:\n\n`sudo badblocks -w {{/dev/sda}}`\n"},"base32":{"Platform":"all","Class":"file editor","Brief":"Encode or decode file or standard input to/from Base32, to standard output.","MdText":"# base32\n\n\u003e Encode or decode file or standard input to/from Base32, to standard output.\n\n- Encode a file:\n\n`base32 {{filename}}`\n\n- Decode a file:\n\n`base32 -d {{filename}}`\n\n- Encode from stdin:\n\n`{{somecommand}} | base32`\n\n- Decode from stdin:\n\n`{{somecommand}} | base32 -d`\n"},"base64":{"Platform":"all","Class":"file editor","Brief":"Encode or decode file or standard input to/from Base64, to standard output.","MdText":"# base64\n\n\u003e Encode or decode file or standard input to/from Base64, to standard output.\n\n- Encode a file:\n\n`base64 {{filename}}`\n\n- Decode a file:\n\n`base64 -d {{filename}}`\n\n- Encode from stdin:\n\n`{{somecommand}} | base64`\n\n- Decode from stdin:\n\n`{{somecommand}} | base64 -d`\n"},"basename":{"Platform":"all","Class":"file editor","Brief":"Returns non-directory portion of a pathname.","MdText":"# basename\n\n\u003e Returns non-directory portion of a pathname.\n\n- Show only the file name from a path:\n\n`basename {{path/to/file}}`\n\n- Show only the file name from a path, with a suffix removed:\n\n`basename {{path/to/file}} {{suffix}}`\n"},"batch":{"Platform":"all","Class":"system man","Brief":"Execute commands at a later time when the system load levels permit.","MdText":"# batch\n\n\u003e Execute commands at a later time when the system load levels permit.\n\u003e Service atd (or atrun) should be running for the actual executions.\n\n- Execute commands from standard input (press `Ctrl + D` when done):\n\n`batch`\n\n- Execute a command from standard input:\n\n`echo \"{{./make_db_backup.sh}}\" | batch`\n\n- Execute commands from a given file:\n\n`batch -f {{path/to/file}}`\n"},"bc":{"Platform":"all","Class":"other cmds","Brief":"Calculator.","MdText":"# bc\n\n\u003e Calculator.\n\n- Run calculator in interactive mode using the standard math library:\n\n`bc -l`\n\n- Calculate the result of an expression:\n\n`bc \u003c\u003c\u003c \"(1 + 2) * 2 ^ 2\"`\n\n- Calculate expression and force number of decimal places to 10:\n\n`bc \u003c\u003c\u003c \"scale=10; 5 / 3\"`\n\n- Calculate expression with sine and cosine using mathlib:\n\n`bc -l \u003c\u003c\u003c \"s(1) + c(1)\"`\n"},"bg":{"Platform":"all","Class":"system man","Brief":"Resumes jobs that have been suspended (e.g. using `Ctrl + Z`), and keeps them running in the background.","MdText":"# bg\n\n\u003e Resumes jobs that have been suspended (e.g. using `Ctrl + Z`), and keeps them running in the background.\n\n- Resume most recently suspended job and run it in the background:\n\n`bg`\n\n- Resume a specific job (use `jobs -l` to get its ID) and run it in the background:\n\n`bg {{job_id}}`\n"},"bmaptool":{"Platform":"all","Class":"file man","Brief":"Create or Copy blockmaps intelligently (and therefore faster than `cp` or `dd`).","MdText":"# bmaptool\n\n\u003e Create or Copy blockmaps intelligently (and therefore faster than `cp` or `dd`).\n\u003e Homepage: \u003chttps://source.tizen.org/documentation/reference/bmaptool\u003e.\n\n- Create a blockmap from image file:\n\n`bmaptool create -o {{blockmap.bmap}} {{source.img}}`\n\n- Copy an image file into sdb:\n\n`bmaptool copy --bmap {{blockmap.bmap}} {{source.img}} {{/dev/sdb}}`\n\n- Copy a compressed image file into sdb:\n\n`bmaptool copy --bmap {{blockmap.bmap}} {{source.img.gz}} {{/dev/sdb}}`\n\n- Copy an image file into sdb without using a blockmap:\n\n`bmaptool copy --nobmap {{source.img}} {{/dev/sdb}}`\n"},"borg":{"Platform":"all","Class":"system man","Brief":"Deduplicating backup tool.","MdText":"# borg\n\n\u003e Deduplicating backup tool.\n\u003e Creates local or remote backups that are mountable as filesystems.\n\u003e Homepage: \u003chttps://borgbackup.readthedocs.io/en/stable/usage/general.html\u003e.\n\n- Initialise a (local) repository:\n\n`borg init {{/path/to/repo_directory}}`\n\n- Backup a directory into the repository, creating an archive called \"Monday\":\n\n`borg create --progress {{/path/to/repo_directory}}::{{Monday}} {{/path/to/source_directory}}`\n\n- List all archives in a repository:\n\n`borg list {{/path/to/repo_directory}}`\n\n- Extract a specific directory from the \"Monday\" archive in a remote repository, excluding all *.ext files:\n\n`borg extract {{user}}@{{host}}:{{/path/to/repo_directory}}::{{Monday}} {{path/to/target_directory}} --exclude '{{*.ext}}'`\n\n- Prune a repository by deleting all archives older than 7 days, listing changes:\n\n`borg prune --keep-within {{7d}} --list {{/path/to/repo_directory}}`\n\n- Mount a repository as a FUSE filesystem:\n\n`borg mount {{/path/to/repo_directory}}::{{Monday}} {{/path/to/mountpoint}}`\n\n- Display help on creating archives:\n\n`borg create --help`\n"},"bosh":{"Platform":"all","Class":"other cmds","Brief":"Command line tool to deploy and manage the bosh director.","MdText":"# bosh\n\n\u003e Command line tool to deploy and manage the bosh director.\n\u003e Homepage: \u003chttps://bosh.io/docs/cli-v2/\u003e.\n\n- Create local alias for director:\n\n`bosh alias-env {{environment_name}} -e {{ip_address|url}} --ca-cert {{ca_certificate}}`\n\n- List environments:\n\n`bosh environments`\n\n- Login to the director:\n\n`bosh login -e {{environment}} `\n\n- List deployments:\n\n`bosh -e {{environment}} deployments`\n\n- List environment virtual machines:\n\n`bosh -e {{environment}} vms -d {{deployment}}`\n\n- Ssh into virtual machine:\n\n`bosh -e {{environment}} ssh {{virtual_machine}} -d {{deployment}}`\n\n- Upload stemcell:\n\n`bosh -e {{environment}} upload-stemcell {{stemcell_file|url}}`\n\n- Show current cloud config:\n\n`bosh -e {{environment}} cloud-config`\n"},"box":{"Platform":"all","Class":"other cmds","Brief":"A PHP application for building and managing Phars.","MdText":"# box\n\n\u003e A PHP application for building and managing Phars.\n\n- Build a new Phar file:\n\n`box build`\n\n- Build a new Phar file using a specific config file:\n\n`box build -c {{path/to/config}}`\n\n- Display information about the PHAR PHP extension:\n\n`box info`\n\n- Display information about a specific Phar file:\n\n`box info {{path/to/phar_file}}`\n\n- Validate the first found config file in the working directory:\n\n`box validate`\n\n- Verify the signature of a specific Phar file:\n\n`box verify {{path/to/phar_file}}`\n\n- Display all available commands and options:\n\n`box help`\n"},"browser-sync":{"Platform":"all","Class":"other cmds","Brief":"Starts local web server that updates browser on file changes.","MdText":"# browser-sync\n\n\u003e Starts local web server that updates browser on file changes.\n\u003e Homepage: \u003chttps://browsersync.io/docs/command-line\u003e.\n\n- Start a server from a specific directory:\n\n`browser-sync start --server {{path/to/directory}} --files {{path/to/directory}}`\n\n- Start a server from local directory, watching all css files in some directory:\n\n`browser-sync start --server --files '{{path/to/directory/*.css}}'`\n\n- Create configuration file:\n\n`browser-sync init`\n\n- Start browser-sync from config file:\n\n`browser-sync start --config {{config_file}}`\n"},"c99":{"Platform":"all","Class":"other cmds","Brief":"Compiles C programs according to the ISO C standard.","MdText":"# c99\n\n\u003e Compiles C programs according to the ISO C standard.\n\n- Compile source file(s) and create an executable:\n\n`c99 {{file.c}}`\n\n- Compile source file(s) and create an executable with a custom name:\n\n`c99 -o {{executable_name}} {{file.c}}`\n\n- Compile source file(s) and create object file(s):\n\n`c99 -c {{file.c}}`\n\n- Compile source file(s), link with object file(s), and create an executable:\n\n`c99 {{file.c}} {{file.o}}`\n"},"cabal":{"Platform":"all","Class":"other cmds","Brief":"Command line interface to the Haskell package infrastructure (Cabal).","MdText":"# cabal\n\n\u003e Command line interface to the Haskell package infrastructure (Cabal).\n\u003e Manage Haskell projects and Cabal packages from the Hackage package repository.\n\u003e Homepage: \u003chttps://cabal.readthedocs.io/en/latest/intro.html\u003e.\n\n- Search and list packages from Hackage:\n\n`cabal list {{search_string}}`\n\n- Show information about a package:\n\n`cabal info {{package_name}}`\n\n- Download and install a package:\n\n`cabal install {{package_name}}`\n\n- Create a new Haskell project in the current directory:\n\n`cabal init`\n\n- Build the project in the current directory:\n\n`cabal build`\n\n- Run tests of the project in the current directory:\n\n`cabal test`\n"},"chcon":{"Platform":"all","Class":"system man","Brief":"Change SELinux security context of a file or files/directories.","MdText":"# chcon\n\n\u003e Change SELinux security context of a file or files/directories.\n\n- View security context of a file:\n\n`ls -lZ {{path/to/file}}`\n\n- Change the security context of a target file, using a reference file:\n\n`chcon --reference={{reference_file}} {{target_file}}`\n\n- Change the full SELinux security context of a file:\n\n`chcon {{user}}:{{role}}:{{type}}:{{range/level}} {{filename}}`\n\n- Change only the user part of SELinux security context:\n\n`chcon -u {{user}} {{filename}}`\n\n- Change only the role part of SELinux security context:\n\n`chcon -r {{role}} {{filename}}`\n\n- Change only the type part of SELinux security context:\n\n`chcon -t {{type}} {{filename}}`\n\n- Change only the range/level part of SELinux security context:\n\n`chcon -l {{range/level}} {{filename}}`\n"},"chgrp":{"Platform":"all","Class":"system man","Brief":"Change group ownership of files and directories.","MdText":"# chgrp\n\n\u003e Change group ownership of files and directories.\n\n- Change the owner group of a file/directory:\n\n`chgrp {{group}} {{path/to/file_or_directory}}`\n\n- Recursively change the owner group of a directory and its contents:\n\n`chgrp -R {{group}} {{path/to/directory}}`\n\n- Change the owner group of a symbolic link:\n\n`chgrp -h {{group}} {{path/to/symlink}}`\n\n- Change the owner group of a file/directory to match a reference file:\n\n`chgrp --reference={{path/to/reference_file}} {{path/to/file_or_directory}}`\n"},"chown":{"Platform":"all","Class":"system man","Brief":"Change user and group ownership of files and directories.","MdText":"# chown\n\n\u003e Change user and group ownership of files and directories.\n\n- Change the owner user of a file/directory:\n\n`chown {{user}} {{path/to/file_or_directory}}`\n\n- Change the owner user and group of a file/directory:\n\n`chown {{user}}:{{group}} {{path/to/file_or_directory}}`\n\n- Recursively change the owner of a directory and its contents:\n\n`chown -R {{user}} {{path/to/directory}}`\n\n- Change the owner of a symbolic link:\n\n`chown -h {{user}} {{path/to/symlink}}`\n\n- Change the owner of a file/directory to match a reference file:\n\n`chown --reference={{path/to/reference_file}} {{path/to/file_or_directory}}`\n"},"chromium":{"Platform":"all","Class":"network comm","Brief":"Open-source web browser from Google.","MdText":"# chromium\n\n\u003e Open-source web browser from Google.\n\n- Open a file:\n\n`chromium {{path/to/file.html}}`\n\n- Open an URL:\n\n`chromium {{example.com}}`\n\n- Open in incognito mode:\n\n`chromium --incognito {{example.com}}`\n\n- Open in a new window:\n\n`chromium --new-window {{example.com}}`\n\n- Open in app mode (without toolbars, URL bar, buttons, etc.):\n\n`chromium --app='{{https://example.com}}'`\n\n- Use a proxy server:\n\n`chromium --proxy-server=\"{{socks5://hostname:66}}\" {{example.com}}`\n"},"cksum":{"Platform":"all","Class":"file man","Brief":"Calculates CRC checksums and byte counts of a file.","MdText":"# cksum\n\n\u003e Calculates CRC checksums and byte counts of a file.\n\u003e Note, on old UNIX systems the CRC implementation may differ.\n\n- Display a 32 bit checksum, size in bytes and filename:\n\n`cksum {{filename}}`\n"},"clamscan":{"Platform":"all","Class":"file man","Brief":"A command line virus scanner.","MdText":"# clamscan\n\n\u003e A command line virus scanner.\n\u003e Homepage: \u003chttps://www.clamav.net\u003e.\n\n- Scan a file for vulnerabilities:\n\n`clamscan {{path/to/file}}`\n\n- Scan all files recursively in a specific directory:\n\n`clamscan -r {{path/to/directory}}`\n\n- Scan data from stdin:\n\n`{{command}} | clamscan -`\n\n- Specify a virus database file or directory of files:\n\n`clamscan --database {{path/to/database_file_or_directory}}`\n\n- Scan the current directory and output only infected files:\n\n`clamscan --infected`\n\n- Output the scan report to a log file:\n\n`clamscan --log {{path/to/log_file}}`\n\n- Move infected files to a specific directory:\n\n`clamscan --move {{path/to/quarantine_directory}}`\n\n- Remove infected files:\n\n`clamscan --remove yes`\n"},"clementine":{"Platform":"all","Class":"other cmds","Brief":"A modern music player and library organizer.","MdText":"# clementine\n\n\u003e A modern music player and library organizer.\n\u003e Homepage: \u003chttps://www.clementine-player.org\u003e.\n\n- Open Clementine:\n\n`clementine`\n\n- Start playing a music file:\n\n`clementine {{url/or/path/to/file.ext}}`\n\n- Toggle between pausing and playing:\n\n`clementine --play-pause`\n\n- Stop playback:\n\n`clementine --stop`\n\n- Skip to the next track:\n\n`clementine --next`\n\n- Skip to the previous track:\n\n`clementine --previous`\n\n- Load a playlist file:\n\n`clementine --load {{path/to/playlist.ext}}`\n\n- Play the 5th track in the currently loaded playlist:\n\n`clementine --play-track {{5}}`\n"},"cloc":{"Platform":"all","Class":"file editor","Brief":"Count, and compute differences of, lines of source code and comments.","MdText":"# cloc\n\n\u003e Count, and compute differences of, lines of source code and comments.\n\n- Count all the lines of code in a directory:\n\n`cloc {{/path/to/directory}}`\n\n- Count all the lines of code in a directory, displaying a progress bar during the counting process:\n\n`cloc --progress=1 {{/path/to/directory}}`\n\n- Compare 2 directory structures and count the differences between them:\n\n`cloc --diff {{/directory/one}} {{/directory/two}}`\n"},"clockwork-cli":{"Platform":"all","Class":"other cmds","Brief":"A command line interface for the Clockwork PHP debugging framework.","MdText":"# clockwork-cli\n\n\u003e A command line interface for the Clockwork PHP debugging framework.\n\u003e Homepage: \u003chttps://github.com/ptrofimov/clockwork-cli\u003e.\n\n- Monitor Clockwork logs for the current project:\n\n`clockwork-cli`\n\n- Monitor Clockwork logs for a specific project:\n\n`clockwork-cli {{path/to/directory}}`\n\n- Monitor Clockwork logs for multiple projects:\n\n`clockwork-cli {{path/to/directory1 path/to/directory2 …}}`\n"},"cmark":{"Platform":"all","Class":"file editor","Brief":"Converts CommonMark Markdown formatted text to other formats.","MdText":"# cmark\n\n\u003e Converts CommonMark Markdown formatted text to other formats.\n\n- Render a Commonmark Markdown file to HTML:\n\n`cmark --to html {{filename.md}}`\n\n- Convert data from standard input to latex:\n\n`cmark --to latex`\n\n- Convert straight quotes to smart quotes:\n\n`cmark --smart --to html {{filename.md}}`\n\n- Validate utf8 characters:\n\n`cmark --validate-utf8 {{filename.md}}`\n"},"cmp":{"Platform":"all","Class":"file editor","Brief":"Compare two files.","MdText":"# cmp\n\n\u003e Compare two files.\n\n- Find the byte number and line number of the first difference between the files:\n\n`cmp {{file1}} {{file2}}`\n\n- Find the byte number and differing bytes of every difference:\n\n`cmp -l {{file1}} {{file2}}`\n"},"column":{"Platform":"all","Class":"file editor","Brief":"Format standard input or file into multiple columns.","MdText":"# column\n\n\u003e Format standard input or file into multiple columns.\n\u003e Rows are filled before columns; default separator is whitespace.\n\n- Format output for a 30 characters wide display:\n\n`printf \"header1 header2\\nbar foo\\n\" | column -c {{30}}`\n\n- Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace:\n\n`printf \"header1,header2\\nbar,foo\\n\" | column -s{{,}}`\n\n- Split columns automatically and auto-align in a tabular format:\n\n`printf \"header1 header2\\nbar foo\\n\" | column -t`\n\n- Fill columns before filling rows:\n\n`printf \"header1\\nbar\\nfoobar\\n\" | column -c {{30}} -x`\n"},"comm":{"Platform":"all","Class":"file editor","Brief":"Select or reject lines common to two files. Both files must be sorted.","MdText":"# comm\n\n\u003e Select or reject lines common to two files. Both files must be sorted.\n\n- Produce three tab-separated columns: lines only in first file, lines only in second file and common lines:\n\n`comm {{file1}} {{file2}}`\n\n- Print only lines common to both files:\n\n`comm -12 {{file1}} {{file2}}`\n\n- Print only lines common to both files, reading one file from stdin:\n\n`cat {{file1}} | comm -12 - {{file2}}`\n\n- Get lines only found in first file, saving the result to a third file:\n\n`comm -23 {{file1}} {{file2}} \u003e {{file1_only}}`\n\n- Print lines only found in second file, when the files aren't sorted:\n\n`comm -13 \u003c(sort {{file1}}) \u003c(sort {{file2}})`\n"},"consul-kv":{"Platform":"all","Class":"other cmds","Brief":"Distributed key-value store with health checking and service discovery.","MdText":"# consul-kv\n\n\u003e Distributed key-value store with health checking and service discovery.\n\n- Read a value from the key-value store:\n\n`consul kv get {{key}}`\n\n- Store a new key-value pair:\n\n`consul kv put {{key}} {{value}}`\n\n- Delete a key-value pair:\n\n`consul kv delete {{key}}`\n"},"couchdb":{"Platform":"all","Class":"other cmds","Brief":"Command line interface for Apache CouchDB database server.","MdText":"# couchdb\n\n\u003e Command line interface for Apache CouchDB database server.\n\n- Start couchdb:\n\n`couchdb`\n\n- Start couchdb interactive shell:\n\n`couchdb -i`\n\n- Start couchdb as a background process:\n\n`couchdb -b`\n\n- Kill the background process (Note: It will respawn if needed):\n\n`couchdb -k`\n\n- Shutdown the background process:\n\n`couchdb -d`\n"},"cppclean":{"Platform":"all","Class":"other cmds","Brief":"Find unused code in C++ projects.","MdText":"# cppclean\n\n\u003e Find unused code in C++ projects.\n\n- Run in a project's directory:\n\n`cppclean {{path/to/project}}`\n\n- Run on a project where the headers are in the \"inc1/\" and \"inc2/\" directories:\n\n`cppclean {{path/to/project}} --include-path={{inc1}} --include-path={{inc2}}`\n\n- Run on a specific file \"main.cpp\":\n\n`cppclean {{main.cpp}}`\n\n- Run on the current directory, excluding the \"build\" directory:\n\n`cppclean {{.}} --exclude={{build}}`\n"},"cradle-deploy":{"Platform":"all","Class":"other cmds","Brief":"Manage Cradle deployments.","MdText":"# cradle deploy\n\n\u003e Manage Cradle deployments.\n\n- Deploy Cradle to a server:\n\n`cradle deploy production`\n\n- Deploy static assets to Amazon S3:\n\n`cradle deploy s3`\n\n- Deploy static assets including the Yarn \"components\" directory:\n\n`cradle deploy s3 --include-yarn`\n\n- Deploy static assets including the \"upload\" directory:\n\n`cradle deploy s3 --include-upload`\n"},"cradle-elastic":{"Platform":"all","Class":"other cmds","Brief":"Manage the ElasticSearch instances for a Cradle instance.","MdText":"# cradle elastic\n\n\u003e Manage the ElasticSearch instances for a Cradle instance.\n\n- Truncate the ElasticSearch index:\n\n`cradle elastic flush`\n\n- Truncate the ElasticSearch index for a specific package:\n\n`cradle elastic flush {{package_name}}`\n\n- Submit the ElasticSearch schema:\n\n`cradle elastic map`\n\n- Submit the ElasticSearch schema for a specific package:\n\n`cradle elastic map {{package_name}}`\n\n- Populate the ElasticSearch indices for all packages:\n\n`cradle elastic populate`\n\n- Populate the ElasticSearch indices for a specific package:\n\n`cradle elastic populate {{package_name}}`\n"},"cradle-install":{"Platform":"all","Class":"other cmds","Brief":"Installs the Cradle PHP framework components.","MdText":"# cradle install\n\n\u003e Installs the Cradle PHP framework components.\n\n- Install Cradle's components (User will be prompted for further details):\n\n`cradle install`\n\n- Forcefully overwrite files:\n\n`cradle install --force`\n\n- Skip running SQL migrations:\n\n`cradle install --skip-sql`\n\n- Skip running package updates:\n\n`cradle install --skip-versioning`\n\n- Use specific database details:\n\n`cradle install -h {{hostname}} -u {{username}} -p {{password}}`\n"},"cradle-package":{"Platform":"all","Class":"other cmds","Brief":"Manage packages for a Cradle instance.","MdText":"# cradle package\n\n\u003e Manage packages for a Cradle instance.\n\n- Display a list of available packages:\n\n`cradle package list`\n\n- Search for a package:\n\n`cradle package search {{package}}`\n\n- Install a package from Packagist:\n\n`cradle package install {{package}}`\n\n- Install a specific version of a package:\n\n`cradle package install {{package}} {{version}}`\n\n- Update a package:\n\n`cradle package update {{package}}`\n\n- Update a package to a specific version:\n\n`cradle package update {{package}} {{version}}`\n\n- Remove a specific package:\n\n`cradle package remove {{package}}`\n"},"cradle-sql":{"Platform":"all","Class":"other cmds","Brief":"Manage Cradle SQL databases.","MdText":"# cradle sql\n\n\u003e Manage Cradle SQL databases.\n\n- Rebuild the database schema:\n\n`cradle sql build`\n\n- Rebuild the database schema for a specific package:\n\n`cradle sql build {{package_name}}`\n\n- Empty the entire database:\n\n`cradle sql flush`\n\n- Empty the database tables for a specific package:\n\n`cradle sql flush {{package_name}}`\n\n- Populate the tables for all packages:\n\n`cradle sql populate`\n\n- Populate the tables for a specific package:\n\n`cradle sql populate {{package_name}}`\n"},"crystal":{"Platform":"all","Class":"other cmds","Brief":"Tool for managing Crystal source code.","MdText":"# crystal\n\n\u003e Tool for managing Crystal source code.\n\u003e Homepage: \u003chttps://crystal-lang.org/reference/using_the_compiler\u003e.\n\n- Run a Crystal file:\n\n`crystal {{path/to/file.cr}}`\n\n- Compile a file and all dependencies to a single executable:\n\n`crystal build {{path/to/file.cr}}`\n\n- Start a local interactive server for testing the language:\n\n`crystal play`\n\n- Create a project directory for a Crystal application:\n\n`crystal init app {{application_name}}`\n\n- Display all help options:\n\n`crystal help`\n"},"csvsort":{"Platform":"all","Class":"file man","Brief":"Sorts CSV files.","MdText":"# csvsort\n\n\u003e Sorts CSV files.\n\u003e Included in csvkit.\n\n- Sort a CSV file by column 9:\n\n`csvsort -c {{9}} {{data.csv}}`\n\n- Sort a CSV file by the \"name\" column in descending order:\n\n`csvsort -r -c {{name}} {{data.csv}}`\n\n- Sort a CSV file by column 2, then by column 4:\n\n`csvsort -c {{2,4}} {{data.csv}}`\n\n- Sort a CSV file without inferring data types:\n\n`csvsort --no-inference -c {{columns}} {{data.csv}}`\n"},"csvstat":{"Platform":"all","Class":"file man","Brief":"Print descriptive statistics for all columns in a CSV file.","MdText":"# csvstat\n\n\u003e Print descriptive statistics for all columns in a CSV file.\n\u003e Included in csvkit.\n\n- Show all stats for all columns:\n\n`csvstat {{data.csv}}`\n\n- Show all stats for columns 2 and 4:\n\n`csvstat -c {{2,4}} {{data.csv}}`\n\n- Show sums for all columns:\n\n`csvstat --sum {{data.csv}}`\n\n- Show the max value length for column 3:\n\n`csvstat -c {{3}} --len {{data.csv}}`\n\n- Show the number of unique values in the \"name\" column:\n\n`csvstat -c {{name}} --unique {{data.csv}}`\n"},"curl":{"Platform":"all","Class":"file trans","Brief":"Transfers data from or to a server.","MdText":"# curl\n\n\u003e Transfers data from or to a server.\n\u003e Supports most protocols, including HTTP, FTP, and POP3.\n\n- Download the contents of an URL to a file:\n\n`curl {{http://example.com}} -o {{filename}}`\n\n- Download a file, saving the output under the filename indicated by the URL:\n\n`curl -O {{http://example.com/filename}}`\n\n- Download a file, following [L]ocation redirects, and automatically [C]ontinuing (resuming) a previous file transfer:\n\n`curl -O -L -C - {{http://example.com/filename}}`\n\n- Send form-encoded data (POST request of type `application/x-www-form-urlencoded`):\n\n`curl -d {{'name=bob'}} {{http://example.com/form}}`\n\n- Send a request with an extra header, using a custom HTTP method:\n\n`curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}`\n\n- Send data in JSON format, specifying the appropriate content-type header:\n\n`curl -d {{'{\"name\":\"bob\"}'}} -H {{'Content-Type: application/json'}} {{http://example.com/users/1234}}`\n\n- Pass a user name and password for server authentication:\n\n`curl -u myusername:mypassword {{http://example.com}}`\n\n- Pass client certificate and key for a resource, skipping certificate validation:\n\n`curl --cert {{client.pem}} --key {{key.pem}} --insecure {{https://example.com}}`\n"},"cut":{"Platform":"all","Class":"file editor","Brief":"Cut out fields from STDIN or files.","MdText":"# cut\n\n\u003e Cut out fields from STDIN or files.\n\n- Cut out the first sixteen characters of each line of STDIN:\n\n`cut -c {{1-16}}`\n\n- Cut out the first sixteen characters of each line of the given files:\n\n`cut -c {{1-16}} {{file}}`\n\n- Cut out everything from the 3rd character to the end of each line:\n\n`cut -c {{3-}}`\n\n- Cut out the fifth field of each line, using a colon as a field delimiter (default delimiter is tab):\n\n`cut -d'{{:}}' -f{{5}}`\n\n- Cut out the 2nd and 10th fields of each line, using a semicolon as a delimiter:\n\n`cut -d'{{;}}' -f{{2,10}}`\n\n- Cut out the fields 3 through to the end of each line, using a space as a delimiter:\n\n`cut -d'{{ }}' -f{{3-}}`\n"},"detox":{"Platform":"all","Class":"other cmds","Brief":"Renames files to make them easier to work with.","MdText":"# detox\n\n\u003e Renames files to make them easier to work with.\n\u003e It removes spaces and other such annoyances like duplicate underline characters.\n\n- Remove spaces and other undesirable characters from a file's name:\n\n`detox {{file}}`\n\n- Show how detox would rename all of the files in a directory tree:\n\n`detox --dry-run -r {{directory}}`\n\n- Remove spaces and other undesirable characters from all files in a directory tree:\n\n`detox -r {{directory}}`\n"},"df":{"Platform":"all","Class":"disk maint","Brief":"Gives an overview of the file system disk space usage.","MdText":"# df\n\n\u003e Gives an overview of the file system disk space usage.\n\n- Display all file systems and their disk usage:\n\n`df`\n\n- Display all file systems and their disk usage in human readable form:\n\n`df -h`\n\n- Display the file system and its disk usage containing the given file or directory:\n\n`df {{path/to/file_or_directory}}`\n"},"dircolors":{"Platform":"all","Class":"system man","Brief":"Output commands to set the LS_COLOR environment variable and style `ls`, `dir`, etc.","MdText":"# dircolors\n\n\u003e Output commands to set the LS_COLOR environment variable and style `ls`, `dir`, etc.\n\n- Output commands to set LS_COLOR using default colors:\n\n`dircolors`\n\n- Output commands to set LS_COLOR using colors from a file:\n\n`dircolors {{file}}`\n\n- Output commands for Bourne shell:\n\n`dircolors --bourne-shell`\n\n- Output commands for C shell:\n\n`dircolors --c-shell`\n\n- View the default colors for file types and extensions:\n\n`dircolors --print-data`\n"},"dirname":{"Platform":"all","Class":"file man","Brief":"Calculates the parent directory of a given file or directory path.","MdText":"# dirname\n\n\u003e Calculates the parent directory of a given file or directory path.\n\n- Calculate the parent directory of a given path:\n\n`dirname {{path/to/file_or_directory}}`\n\n- Calculate the parent directory of multiple paths:\n\n`dirname {{path/to/file_a}} {{path/to/directory_b}}`\n\n- Delimit output with a NUL character instead of a newline (useful when combining with `xargs`):\n\n`dirname --zero {{path/to/directory_a}} {{path/to/file_b}}`\n"},"dive":{"Platform":"all","Class":"other cmds","Brief":"A tool for exploring a Docker image, layer contents, and discovering ways to shrink it.","MdText":"# dive\n\n\u003e A tool for exploring a Docker image, layer contents, and discovering ways to shrink it.\n\n- Analyze a Docker image:\n\n`dive {{your_image_tag}}`\n\n- Build an image and start analyzing it:\n\n`dive build -t {{some_tag}}`\n"},"docker":{"Platform":"all","Class":"other cmds","Brief":"Manage Docker containers and images.","MdText":"# docker\n\n\u003e Manage Docker containers and images.\n\u003e Homepage: \u003chttps://docs.docker.com/engine/reference/commandline/cli/\u003e.\n\n- List currently running docker containers:\n\n`docker ps`\n\n- List all docker containers (running and stopped):\n\n`docker ps -a`\n\n- Start a container from an image, with a custom name:\n\n`docker run --name {{container_name}} {{image}}`\n\n- Start or stop an existing container:\n\n`docker {{start|stop}} {{container_name}}`\n\n- Pull an image from a docker registry:\n\n`docker pull {{image}}`\n\n- Open a shell inside of an already running container:\n\n`docker exec -it {{container_name}} {{sh}}`\n\n- Remove a stopped container:\n\n`docker rm {{container_name}}`\n\n- Fetch and follow the logs of a container:\n\n`docker logs -f {{container_name}}`\n"},"docker-machine":{"Platform":"all","Class":"other cmds","Brief":"Create and manage machines running Docker.","MdText":"# docker-machine\n\n\u003e Create and manage machines running Docker.\n\u003e Homepage: \u003chttps://docs.docker.com/machine/reference/\u003e.\n\n- List currently running docker machines:\n\n`docker-machine ls`\n\n- Create a new docker machine with specific name:\n\n`docker-machine create {{name}}`\n\n- Get the status of a machine:\n\n`docker-machine status {{name}}`\n\n- Start a machine:\n\n`docker-machine start {{name}}`\n\n- Stop a machine:\n\n`docker-machine stop {{name}}`\n\n- Inspect information about a machine:\n\n`docker-machine inspect {{name}}`\n"},"du":{"Platform":"all","Class":"disk maint","Brief":"Disk usage: estimate and summarize file and directory space usage.","MdText":"# du\n\n\u003e Disk usage: estimate and summarize file and directory space usage.\n\n- List the sizes of a directory and any subdirectories, in the given unit (B/KB/MB):\n\n`du -{{b|k|m}} {{path/to/directory}}`\n\n- List the sizes of a directory and any subdirectories, in human-readable form (i.e. auto-selecting the appropriate unit for each size):\n\n`du -h {{path/to/directory}}`\n\n- Show the size of a single directory, in human readable units:\n\n`du -sh {{path/to/directory}}`\n\n- List the human-readable sizes of a directory and of all the files and directories within it:\n\n`du -ah {{path/to/directory}}`\n\n- List the human-readable sizes of a directory and any subdirectories, up to N levels deep:\n\n`du -h --max-depth=N {{path/to/directory}}`\n\n- List the human-readable size of all .jpg files in subdirectories of the current directory, and show a cumulative total at the end:\n\n`du -ch */*.jpg`\n"},"duplicity":{"Platform":"all","Class":"other cmds","Brief":"Creates incremental, compressed, encrypted and versioned backups.","MdText":"# duplicity\n\n\u003e Creates incremental, compressed, encrypted and versioned backups.\n\u003e Can also upload the backups to a variety of backend services.\n\n- Backup a directory via FTPS to a remote machine, encrypting it with a password:\n\n`FTP_PASSWORD={{ftp_login_password}} PASSPHRASE={{encryption_password}} duplicity {{path/to/source/directory}} {{ftps://user@hostname/target/directory/path/}}`\n\n- Backup a directory to Amazon S3, doing a full backup every month:\n\n`duplicity --full-if-older-than {{1M}} --use-new-style s3://{{bucket_name[/prefix]}}`\n\n- Delete versions older than 1 year from a backup stored on a WebDAV share:\n\n`FTP_PASSWORD={{webdav_login_password}} duplicity remove-older-than {{1Y}} --force {{webdav[s]://user@hostname[:port]/some_dir}}`\n\n- List the available backups:\n\n`duplicity collection-status \"file://{{absolute/path/to/backup/directory}}\"`\n\n- List the files in a backup stored on a remote machine, via ssh:\n\n`duplicity list-current-files --time {{YYYY-MM-DD}} scp://{{user@hostname}}/path/to/backup/dir`\n\n- Restore a subdirectory from a GnuPG-encrypted local backup to a given location:\n\n`PASSPHRASE={{gpg_key_password}} duplicity restore --encrypt-key {{gpg_key_id}} --file-to-restore {{relative/path/restoredirectory}} file://{{absolute/path/to/backup/directory}} {{path/to/directory/to/restore/to}}`\n"},"ebook-convert":{"Platform":"all","Class":"other cmds","Brief":"Can be used to convert ebooks between common formats, e.g., pdf, epub and mobi.","MdText":"# ebook-convert\n\n\u003e Can be used to convert ebooks between common formats, e.g., pdf, epub and mobi.\n\u003e Part of the Calibre ebook library tool.\n\n- Convert an ebook into another format:\n\n`ebook-convert {{source}} {{destination}}`\n"},"ed":{"Platform":"all","Class":"file editor","Brief":"The original Unix text editor.","MdText":"# ed\n\n\u003e The original Unix text editor.\n\n- Start ed, editing an empty document (which can be saved as a new file in the current directory):\n\n`ed`\n\n- Start ed, editing an empty document, with `:` as a command prompt indicator:\n\n`ed -p :`\n\n- Start ed editing an existing file (this shows the byte count of the loaded file):\n\n`ed -p : {{path/to/file}}`\n\n- Toggle the printing of error explanations. (By default, explanations are not printed and only a `?` appears):\n\n`H`\n\n- Add text to the current document. Mark completion by entering a period by itself in a new line:\n\n`a\u003cEnter\u003e{{text_to_insert}}\u003cEnter\u003e.`\n\n- Print the entire document (`,` is a shortcut to the range `1,$` which covers the start to the end of the document):\n\n`,p`\n\n- Write the current document to a new file (the filename can be omitted if `ed` was called with an existing file):\n\n`w {{filename}}`\n\n- Quit ed:\n\n`q`\n"},"enscript":{"Platform":"all","Class":"other cmds","Brief":"A tool to convert text files to PostScript, HTML, RTF, ANSI, and overstrikes.","MdText":"# enscript\n\n\u003e A tool to convert text files to PostScript, HTML, RTF, ANSI, and overstrikes.\n\n- Generate PostScript from a file and output to another:\n\n`enscript {{path/to/input_file}} --output={{path/to/output_file}}`\n\n- Generate a certain output language (eg. \"html\") from a file and output to another:\n\n`enscript {{path/to/input_file}} --language={{language}} --output={{path/to/output_file}}`\n\n- Generate PostScript from a file and output to another with 1 to 9 column per page in landscape:\n\n`enscript {{path/to/input_file}} --columns={{num}} --landscape --output={{path/to/output_file}}`\n\n- Display available syntax highlighting:\n\n`enscript --help-highlight`\n\n- Generate PostScript from a file and output to another with syntax highlighting and color for a specified language:\n\n`enscript {{path/to/input_file}} --color=1 --highlight={{language}} --output={{path/to/output_file}}`\n"},"erl":{"Platform":"all","Class":"other cmds","Brief":"Run and manage programs in the Erlang programming language.","MdText":"# erl\n\n\u003e Run and manage programs in the Erlang programming language.\n\n- Compile and run sequential Erlang program as a common script and then exit:\n\n`erlc {{files}} \u0026\u0026 erl -noshell '{{mymodule:myfunction(arguments)}}, init:stop().'`\n\n- Connect to a running Erlang node:\n\n`erl -remsh {{nodename}}@{{hostname}} -sname {{custom_shortname}} -hidden -setcookie {{cookie_of_remote_node}}`\n\n- Tell the Erlang shell to load modules from a directory:\n\n`erl -pa {{directory_with_beam_files}}`\n"},"eslint":{"Platform":"all","Class":"other cmds","Brief":"A pluggable linting utility for JavaScript and JSX.","MdText":"# eslint\n\n\u003e A pluggable linting utility for JavaScript and JSX.\n\n- Create eslint config:\n\n`eslint --init`\n\n- Lint on a given set of files:\n\n`eslint {{filename}}.js {{filename1}}.js`\n\n- Fix lint issues:\n\n`eslint --fix`\n\n- Lint with config:\n\n`eslint -c {{path/to/config_file}} {{app/src}}`\n"},"exec":{"Platform":"all","Class":"system man","Brief":"Replace the current process with another process.","MdText":"# exec\n\n\u003e Replace the current process with another process.\n\n- Replace with the specified command using the current environment variables:\n\n`exec {{command -with -flags}}`\n\n- Replace with the specified command using initialized environment variables:\n\n`exec -c {{command -with -flags}}`\n\n- Replace with the specified command and login to the default shell:\n\n`exec -l {{command -with -flags}}`\n\n- Replace with the specified command and rename the process name:\n\n`exec -a {{process_name}} {{command -with -flags}}`\n"},"expr":{"Platform":"all","Class":"file editor","Brief":"Evaluate expressions and manipulate strings.","MdText":"# expr\n\n\u003e Evaluate expressions and manipulate strings.\n\n- Get string length:\n\n`expr length {{string}}`\n\n- Evaluate logical or math expression with an operator ('+', '-', '*', '\u0026', '|', etc.). Special symbols should be escaped:\n\n`expr {{first_argument}} {{operator}} {{second_argument}}`\n\n- Get position of the first character in 'string' that matches 'substring':\n\n`echo $(expr index {{string}} {{substring}})`\n\n- Extract part of the string:\n\n`echo $(expr substr {{string}} {{position_to_start}} {{number_of_characters}}`\n\n- Extract part of the string which matches a regular expression:\n\n`echo $(expr {{string}} : '\\({{regular_expression}}\\)')`\n"},"ffmpeg":{"Platform":"all","Class":"other cmds","Brief":"Video conversion tool.","MdText":"# ffmpeg\n\n\u003e Video conversion tool.\n\n- Extract the sound from a video and save it as MP3:\n\n`ffmpeg -i {{video.mp4}} -vn {{sound}}.mp3`\n\n- Convert frames from a video or GIF into individual numbered images:\n\n`ffmpeg -i {{video.mpg|video.gif}} {{frame_%d.png}}`\n\n- Combine numbered images (frame_1.jpg, frame_2.jpg, etc) into a video or GIF:\n\n`ffmpeg -i {{frame_%d.jpg}} -f image2 {{video.mpg|video.gif}}`\n\n- Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image:\n\n`ffmpeg -ss {{mm:ss}} -i {{video.mp4}} -frames 1 -s {{128x128}} -f image2 {{image.png}}`\n\n- Trim a video from a given start time mm:ss to an end time mm2:ss2 (omit the -to flag to trim till the end):\n\n`ffmpeg -ss {{mm:ss}} -to {{mm2:ss2}} -i {{video.mp4}} -codec copy {{output.mp4}}`\n\n- Convert AVI video to MP4. AAC Audio @ 128kbit, h264 Video @ CRF 23:\n\n`ffmpeg -i {{input_video}}.avi -codec:audio aac -b:audio 128k -codec:video libx264 -crf 23 {{output_video}}.mp4`\n\n- Remux MKV video to MP4 without re-encoding audio or video streams:\n\n`ffmpeg -i {{input_video}}.mkv -codec copy {{output_video}}.mp4`\n\n- Convert MP4 video to VP9 codec. For the best quality, use a CRF value (recommended range 15-35) and -b:video MUST be 0:\n\n`ffmpeg -i {{input_video}}.mp4 -codec:video libvpx-vp9 -crf {{30}} -b:video 0 -codec:audio libopus -vbr on -threads {{number_of_threads}} {{output_video}}.webm`\n"},"fisher":{"Platform":"all","Class":"system man","Brief":"Fisher, a fish-shell plugin manager.","MdText":"# fisher\n\n\u003e Fisher, a fish-shell plugin manager.\n\u003e Install plugins by name or from a managed 'fishfile' for bundled installs.\n\n- Install one or more plugins:\n\n`fisher {{plugin1}} {{plugin2}}`\n\n- Install a plugin from a GitHub gist:\n\n`fisher {{gist_url}}`\n\n- Edit 'fishfile' by hand with your favorite editor and install multiple plugins:\n\n`{{editor}} ~/.config/fish/fishfile; fisher`\n\n- List installed plugins:\n\n`fisher ls`\n\n- Show available plugins:\n\n`fisher ls-remote`\n\n- Update plugins:\n\n`fisher up`\n\n- Remove one or more plugins:\n\n`fisher rm {{plugin1}} {{plugin2}}`\n"},"flex":{"Platform":"all","Class":"other cmds","Brief":"Lexical analyser generator. Based on `lex`.","MdText":"# flex\n\n\u003e Lexical analyser generator. Based on `lex`.\n\u003e Given the specification for a lexical analyser, generates C code implementing it.\n\n- Generate an analyser from a flex file:\n\n`flex {{analyser.l}}`\n\n- Specify the output file:\n\n`flex {{analyser.l}} --outfile {{analyser.c}}`\n\n- Compile a C file generated by flex:\n\n`cc {{path/to/lex.yy.c}} --output {{executable}}`\n"},"fly":{"Platform":"all","Class":"other cmds","Brief":"Command line tool for concourse-ci.","MdText":"# fly\n\n\u003e Command line tool for concourse-ci.\n\n- Authenticate with and save concourse target:\n\n`fly --target {{target_name}} login --team-name {{team_name}} -c {{https://ci.example.com}}`\n\n- List targets:\n\n`fly targets`\n\n- List pipelines:\n\n`fly -t {{target_name}} pipelines`\n\n- Upload or update a pipeline:\n\n`fly -t {{target_name}} set-pipeline --config {{pipeline.yml}} --pipeline {{pipeline_name}}`\n\n- Unpause pipeline:\n\n`fly -t {{target_name}} unpause-pipeline --pipeline {{pipeline_name}}`\n\n- Show pipeline configuration:\n\n`fly -t {{target_name}} get-pipeline --pipeline {{pipeline_name}}`\n\n- Update local copy of fly:\n\n`fly -t {{target_name}} sync`\n\n- Destroy pipeline:\n\n`fly -t {{target_name}} destroy-pipeline --pipeline {{pipeline_name}}`\n"},"fold":{"Platform":"all","Class":"file editor","Brief":"Wraps each line in an input file to fit a specified width and prints it to the standard output.","MdText":"# fold\n\n\u003e Wraps each line in an input file to fit a specified width and prints it to the standard output.\n\n- Wrap each line to default width (80 characters):\n\n`fold {{file}}`\n\n- Wrap each line to width \"30\":\n\n`fold -w30 {{file}}`\n\n- Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length \u003e 5 are wrapped):\n\n`fold -w5 -s {{file}}`\n"},"for":{"Platform":"all","Class":"other cmds","Brief":"Shell loop over parameters.","MdText":"# for\n\n\u003e Shell loop over parameters.\n\n- Perform a command with different arguments:\n\n`for argument in 1 2 3; do {{command $argument}}; done`\n\n- Perform a command in every directory:\n\n`for d in *; do (cd $d; {{command}}); done`\n"},"fswebcam":{"Platform":"all","Class":"other cmds","Brief":"Small and simple webcam for *nix.","MdText":"# fswebcam\n\n\u003e Small and simple webcam for *nix.\n\n- Take a picture:\n\n`fswebcam {{filename}}`\n\n- Take a picture with custom resolution:\n\n`fswebcam -r {{width}}x{{height}} {{filename}}`\n\n- Take a picture from selected device(Default is /dev/video0):\n\n`fswebcam -d {{device}} {{filename}}`\n\n- Take a picture with timestamp(timestamp string is formatted by strftime):\n\n`fswebcam --timestamp {{timestamp}} {{filename}}`\n"},"fuck":{"Platform":"all","Class":"other cmds","Brief":"Corrects your previous console command.","MdText":"# fuck\n\n\u003e Corrects your previous console command.\n\n- Set the `fuck` alias to `thefuck` tool:\n\n`eval \"$(thefuck --alias)\"`\n\n- Try to match a rule for the previous command:\n\n`fuck`\n"},"fzf":{"Platform":"all","Class":"file man","Brief":"Command line fuzzy finder.","MdText":"# fzf\n\n\u003e Command line fuzzy finder.\n\n- Start finder on all files from arbitrary locations:\n\n`find {{path/to/search}} -type f | fzf`\n\n- Start finder on running processes:\n\n`ps aux | fzf`\n\n- Select multiple files with `Shift + Tab` and write to a file:\n\n`find {{path/to/search_files}} -type f | fzf -m \u003e {{filename}}`\n\n- Start finder with a given query:\n\n`fzf -q \"{{query}}\"`\n\n- Start finder on entries that start with core and end with either go, rb, or py:\n\n`fzf -q \"^core go$ | rb$ | py$\"`\n\n- Start finder on entries that not match pyc and match exactly travis:\n\n`fzf -q \"!pyc 'travis\"`\n"},"gatsby":{"Platform":"all","Class":"other cmds","Brief":"Static site generator for React.","MdText":"# gatsby\n\n\u003e Static site generator for React.\n\n- Create a new site:\n\n`gatsby new {{site_name}}`\n\n- Create a new site with a Gatsby 'starter':\n\n`gatsby new {{site_name}} {{url_of_starter_github_repo}}`\n\n- Start a live-reloading local development server:\n\n`gatsby develop`\n\n- Perform a production build and generate static HTML:\n\n`gatsby build`\n\n- Start a local server which serves the production build:\n\n`gatsby serve`\n"},"gcloud":{"Platform":"all","Class":"other cmds","Brief":"The official CLI tool for Google Cloud Platform.","MdText":"# gcloud\n\n\u003e The official CLI tool for Google Cloud Platform.\n\n- List all properties in one's active configuration:\n\n`gcloud config list`\n\n- Set the active project:\n\n`gcloud config set project {{project_name}}`\n\n- SSH into a virtual machine instance:\n\n`gcloud compute ssh {{user}}@{{instance}} `\n\n- Display all Google Compute Engine instances in a project. Instances from all zones are listed by default:\n\n`gcloud compute instances list`\n\n- Update a kubeconfig file with the appropriate credentials to point kubectl to a specific cluster in Google Kubernetes Engine:\n\n`gcloud container clusters get-credentials {{cluster_name}}`\n\n- Update all gcloud CLI components:\n\n`gcloud components update`\n\n- Show help for a given command:\n\n`gcloud help {{command}}`\n"},"ghc":{"Platform":"all","Class":"other cmds","Brief":"The Glasgow Haskell Compiler.","MdText":"# ghc\n\n\u003e The Glasgow Haskell Compiler.\n\u003e Compiles and links Haskell source files.\n\n- Find and compile all modules in the current directory:\n\n`ghc Main`\n\n- Compile a single file:\n\n`ghc {{file.hs}}`\n\n- Compile using extra optimization:\n\n`ghc -O {{file.hs}}`\n\n- Stop compilation after generating object files (.o):\n\n`ghc -c {{file.hs}}`\n\n- Run Haskell interactive interpreter (REPL):\n\n`ghci`\n\n- Evaluate a single expression:\n\n`ghc -e {{expression}}`\n"},"gifsicle":{"Platform":"all","Class":"other cmds","Brief":"Create GIFs.","MdText":"# gifsicle\n\n\u003e Create GIFs.\n\n- Optimise a GIF:\n\n`gifsicle --batch --optimize=3 {{amin.gif}}`\n\n- Make a GIF animation with gifsicle:\n\n`gifsicle --delay={{10}} --loop *.gif \u003e {{anim.gif}}`\n\n- Extract frames from an animation:\n\n`gifsicle {{anim.gif}} '#0' \u003e {{firstframe.gif}}`\n\n- You can also edit animations by replacing, deleting, or inserting frames:\n\n`gifsicle -b {{anim.gif}} --replace '#0' {{new.gif}}`\n"},"gist":{"Platform":"all","Class":"network comm","Brief":"Upload code to https://gist.github.com.","MdText":"# gist\n\n\u003e Upload code to https://gist.github.com.\n\n- Login in gist on this computer:\n\n`gist --login`\n\n- Create a gist from any number of text files:\n\n`gist {{file.txt}} {{file2.txt}}`\n\n- Create a private gist with a description:\n\n`gist -p -d {{\"A meaningful description\"}} {{file.txt}} `\n\n- Read contents from STDIN and create a gist from it:\n\n`{{echo \"hello world\"}} | gist`\n\n- List your public and private gists:\n\n`gist -l`\n\n- List all gists for the currently logged in user:\n\n`gist -l {{user_name}}`\n\n- Use the id from the gist URL to modify or include a file:\n\n`gist -u {{GIST_ID}} {{file.txt}}`\n"},"git":{"Platform":"all","Class":"network comm","Brief":"Distributed version control system.","MdText":"# git\n\n\u003e Distributed version control system.\n\u003e Homepage: \u003chttps://git-scm.com/\u003e.\n\n- Check the Git version:\n\n`git --version`\n\n- Call general help:\n\n`git --help`\n\n- Call help on a command:\n\n`git help {{command}}`\n\n- Execute Git command:\n\n`git {{command}}`\n"},"git-add":{"Platform":"all","Class":"network comm","Brief":"Adds changed files to the index.","MdText":"# git add\n\n\u003e Adds changed files to the index.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-add\u003e.\n\n- Add a file to the index:\n\n`git add {{path/to/file}}`\n\n- Add all files (tracked and untracked):\n\n`git add -A`\n\n- Only add already tracked files:\n\n`git add -u`\n\n- Also add ignored files:\n\n`git add -f`\n\n- Add parts of a file interactively:\n\n`git add -p {{path/to/file}}`\n"},"git-commit":{"Platform":"all","Class":"network comm","Brief":"Commit files to the repository.","MdText":"# git commit\n\n\u003e Commit files to the repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-commit\u003e.\n\n- Commit staged files to the repository with a message:\n\n`git commit -m {{message}}`\n\n- Auto stage all modified files and commit with a message:\n\n`git commit -a -m {{message}}`\n\n- Replace the last commit with currently staged changes:\n\n`git commit --amend`\n"},"git-config":{"Platform":"all","Class":"network comm","Brief":"Manage custom configuration options for git repositories.","MdText":"# git config\n\n\u003e Manage custom configuration options for git repositories.\n\u003e These configurations can be local (for the current repository) or global (for the current user).\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-config\u003e.\n\n- List only local configuration entries (stored in `.git/config` in the current repository):\n\n`git config --list --local`\n\n- List only global configuration entries (stored in `~/.gitconfig`):\n\n`git config --list --global`\n\n- List all configuration entries that have been defined either locally or globally:\n\n`git config --list`\n\n- Get the value of a given configuration entry:\n\n`git config alias.unstage`\n\n- Set the global value of a given configuration entry:\n\n`git config --global alias.unstage \"reset HEAD --\"`\n\n- Revert a global configuration entry to its default value:\n\n`git config --global --unset alias.unstage`\n"},"git-format-patch":{"Platform":"all","Class":"network comm","Brief":"Prepare .patch files. Useful when emailing commits elsewhere.","MdText":"# git format-patch\n\n\u003e Prepare .patch files. Useful when emailing commits elsewhere.\n\u003e See also `git am`, which can apply generated .patch files.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-format-patch\u003e.\n\n- Create an auto-named .patch file for all the unpushed commits:\n\n`git format-patch {{origin}}`\n\n- Write a .patch file for all the commits between 2 revisions to stdout:\n\n`git format-patch {{revision_1}}..{{revision_2}}`\n\n- Write a .patch file for the 3 latest commits:\n\n`git format-patch -{{3}}`\n"},"git-grep":{"Platform":"all","Class":"network comm","Brief":"Find strings inside files anywhere in a repository's history.","MdText":"# git-grep\n\n\u003e Find strings inside files anywhere in a repository's history.\n\u003e Accepts a lot of the same flags as regular `grep`.\n\u003e Documentation: \u003chttps://git-scm.com/docs/git-grep\u003e.\n\n- Search for a string in tracked files:\n\n`git grep {{search_string}}`\n\n- Search for a string in files matching a pattern in tracked files:\n\n`git grep {{search_string}} -- {{file_glob_pattern}}`\n\n- Search for a string in tracked files, including submodules:\n\n`git grep --recurse-submodules {{search_string}}`\n\n- Search for a string at a specific point in history:\n\n`git grep {{search_string}} {{HEAD~2}}`\n"},"git-imerge":{"Platform":"all","Class":"network comm","Brief":"Perform a merge or rebase between two git branches incrementally.","MdText":"# git-imerge\n\n\u003e Perform a merge or rebase between two git branches incrementally.\n\u003e Conflicts between branches are tracked down to pairs of individual commits, to simplify conflict resolution.\n\u003e Homepage: \u003chttps://github.com/mhagger/git-imerge\u003e.\n\n- Start imerge-based rebase (checkout the branch to be rebased, first):\n\n`git imerge rebase {{branch_to_rebase_onto}}`\n\n- Start imerge-based merge (checkout the branch to merge into, first):\n\n`git imerge merge {{branch_to_be_merged}}`\n\n- Show ASCII diagram of in-progress merge or rebase:\n\n`git imerge diagram`\n\n- Continue imerge operation after resolving conflicts (`git add` the conflicted files, first):\n\n`git imerge continue --no-edit`\n\n- Wrap up imerge operation, after all conflicts are resolved:\n\n`git imerge finish`\n\n- Abort imerge operation, and return to the previous branch:\n\n`git-imerge remove \u0026\u0026 git checkout {{previous_branch}}`\n"},"git-init":{"Platform":"all","Class":"network comm","Brief":"Initializes a new local Git repository.","MdText":"# git init\n\n\u003e Initializes a new local Git repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-init\u003e.\n\n- Initialize a new local repository:\n\n`git init`\n\n- Initialize a barebones repository, suitable for use as a remote over ssh:\n\n`git init --bare`\n"},"git-log":{"Platform":"all","Class":"network comm","Brief":"Show a history of commits.","MdText":"# git log\n\n\u003e Show a history of commits.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-log\u003e.\n\n- Show the sequence of commits starting from the current one, in reverse chronological order:\n\n`git log`\n\n- Show the history of a particular file or directory, including differences:\n\n`git log -p {{path/to/file_or_directory}}`\n\n- Show only the first line of each commit message:\n\n`git log --oneline`\n\n- Show an overview of which file(s) changed in each commit:\n\n`git log --stat`\n\n- Show a graph of commits in the current branch:\n\n`git log --graph`\n\n- Show a graph of all commits, tags and branches in the entire repo:\n\n`git log --oneline --decorate --all --graph`\n\n- Show only commits whose messages include a given string (case-insensitively):\n\n`git log -i --grep {{search_string}}`\n"},"git-pull":{"Platform":"all","Class":"network comm","Brief":"Fetch branch from a remote repository and merge it to local repository.","MdText":"# git pull\n\n\u003e Fetch branch from a remote repository and merge it to local repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-pull\u003e.\n\n- Download changes from default remote repository and merge it:\n\n`git pull`\n\n- Download changes from default remote repository and use fast forward:\n\n`git pull --rebase`\n\n- Download changes from given remote repository and branch, then merge them into HEAD:\n\n`git pull {{remote_name}} {{branch}}`\n"},"git-push":{"Platform":"all","Class":"network comm","Brief":"Push commits to a remote repository.","MdText":"# git push\n\n\u003e Push commits to a remote repository.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-push\u003e.\n\n- Send local changes in the current branch to its remote counterpart:\n\n`git push`\n\n- Send local changes in a given branch to its remote counterpart:\n\n`git push {{remote_name}} {{local_branch}}`\n\n- Publish the current branch to a remote repository, setting the remote branch name:\n\n`git push {{remote_name}} -u {{remote_branch}}`\n\n- Send changes on all local branches to their counterparts in a given remote repository:\n\n`git push --all {{remote_name}}`\n\n- Delete a branch in a remote repository:\n\n`git push {{remote_name}} --delete {{remote_branch}}`\n\n- Remove remote branches that don't have a local counterpart:\n\n`git push --prune {{remote_name}}`\n\n- Publish tags that aren't yet in the remote repository:\n\n`git push --tags`\n"},"git-remote":{"Platform":"all","Class":"network comm","Brief":"Manage set of tracked repositories (\"remotes\").","MdText":"# git remote\n\n\u003e Manage set of tracked repositories (\"remotes\").\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-remote\u003e.\n\n- Show a list of existing remotes, their names and URL:\n\n`git remote -v`\n\n- Add a remote:\n\n`git remote add {{remote_name}} {{remote_url}}`\n\n- Change the URL of a remote:\n\n`git remote set-url {{remote_name}} {{new_url}}`\n\n- Remove a remote:\n\n`git remote remove {{remote_name}}`\n\n- Rename a remote:\n\n`git remote rename {{old_name}} {{new_name}}`\n"},"git-show":{"Platform":"all","Class":"network comm","Brief":"Show various types of git objects (commits, tags, etc.).","MdText":"# git show\n\n\u003e Show various types of git objects (commits, tags, etc.).\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-show\u003e.\n\n- Show information about the latest commit (message, changes, and other metadata):\n\n`git show`\n\n- Show information about a given commit:\n\n`git show {{commit}}`\n\n- Show information about the commit associated with a given tag:\n\n`git show {{tag}}`\n\n- Show information about the 3rd commit from the tip of a branch:\n\n`git show {{branch}}~{{3}}`\n\n- Show a commit's hash and message in a single line, suppressing the diff output:\n\n`git show --oneline -s {{commit}}`\n"},"git-sizer":{"Platform":"all","Class":"network comm","Brief":"Computes various Git repository size metrics and alerts you to any that might cause problems or inconvenience.","MdText":"# git sizer\n\n\u003e Computes various Git repository size metrics and alerts you to any that might cause problems or inconvenience.\n\u003e Homepage: \u003chttps://github.com/github/git-sizer\u003e.\n\n- Report only statistics that have a level of concern greater than 0:\n\n`git sizer`\n\n- Report all statistics:\n\n`git sizer -v`\n\n- See additional options:\n\n`git sizer -h`\n"},"git-submodule":{"Platform":"all","Class":"network comm","Brief":"Inspects, updates and manages submodules.","MdText":"# git submodule\n\n\u003e Inspects, updates and manages submodules.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-submodule\u003e.\n\n- Install a repository's specified submodules:\n\n`git submodule update --init --recursive`\n\n- Add a git repository as a submodule:\n\n`git submodule add {{repository_url}}`\n\n- Add a git repository as a submodule at the specified directory:\n\n`git submodule add {{repository_url}} {{path/to/directory}}`\n\n- Update every submodule to its latest commit:\n\n`git submodule foreach git pull`\n"},"git-svn":{"Platform":"all","Class":"network comm","Brief":"Bidirectional operation between a Subversion repository and Git.","MdText":"# git svn\n\n\u003e Bidirectional operation between a Subversion repository and Git.\n\u003e Homepage: \u003chttps://git-scm.com/docs/git-svn\u003e.\n\n- Clone an SVN repository:\n\n`git svn clone {{https://example.com/subversion_repo}} {{local_dir}}`\n\n- Clone a SVN repository starting at a given revision number:\n\n`git svn clone -r{{1234}}:HEAD {{https://svn.example.net/subversion/repo}} {{local_dir}}`\n\n- Update local clone from the remote SVN repository:\n\n`git svn rebase`\n\n- Fetch updates from the remote SVN repository without changing the git HEAD:\n\n`git svn fetch`\n\n- Commit back to the SVN repository:\n\n`git svn dcommit`\n"},"gitk":{"Platform":"all","Class":"network comm","Brief":"A graphical git repository browser.","MdText":"# gitk\n\n\u003e A graphical git repository browser.\n\u003e Homepage: \u003chttps://git-scm.com/docs/gitk\u003e.\n\n- Show the repository browser for the current git repository:\n\n`gitk`\n\n- Show repository browser for a specific file or directory:\n\n`gitk {{path/to/file_or_directory}}`\n\n- Show commits made since 1 week ago:\n\n`gitk --since={{\"1 week ago\"}}`\n\n- Show commits older than 1/1/2016:\n\n`gitk --until={{\"1/1/2015\"}}`\n\n- Show at most 100 changes in all branches:\n\n` gitk --max-count={{100}} --all`\n"},"gitsome":{"Platform":"all","Class":"network comm","Brief":"A terminal-based interface for GitHub, accessed via the `gh` command.","MdText":"# gitsome\n\n\u003e A terminal-based interface for GitHub, accessed via the `gh` command.\n\u003e It also provides menu-style autocomplete suggestions for `git` commands.\n\u003e Homepage: \u003chttps://github.com/donnemartin/gitsome\u003e.\n\n- Enter the gitsome shell (optional), to enable autocompletion and interactive help for git (and gh) commands:\n\n`gitsome`\n\n- Setup GitHub integration with the current account:\n\n`gh configure`\n\n- List notifications for the current account (as would be seen in https://github.com/notifications):\n\n`gh notifications`\n\n- List the current account's starred repos, filtered by a given search string:\n\n`gh starred \"{{python 3}}\"`\n\n- View the recent activity feed of a given GitHub repository:\n\n`gh feed {{tldr-pages/tldr}}`\n\n- View the recent activity feed for a given GitHub user, using the default pager (e.g. `less`):\n\n`gh feed {{torvalds}} -p`\n"},"gnomon":{"Platform":"all","Class":"other cmds","Brief":"Utility to annotate console logging statements with timestamps and find slow processes.","MdText":"# gnomon\n\n\u003e Utility to annotate console logging statements with timestamps and find slow processes.\n\n- Use UNIX (or DOS) pipes to pipe the stdout of any command through gnomon:\n\n`{{npm test}} | gnomon`\n\n- Show number of seconds since the start of the process:\n\n`{{npm test}} | gnomon --type=elapsed-total`\n\n- Show an absolute timestamp in UTC:\n\n`{{npm test}} | gnomon --type=absolute`\n\n- Set a high threshold of 0.5 seconds for the elapsed time; exceeding which the timestamp will be colored bright red:\n\n`{{npm test}} | gnomon --high {{0.5}}`\n\n- Set a medium threshold of 0.2 seconds (Timestamp will be colored bright yellow):\n\n`{{npm test}} | gnomon --medium {{0.2}}`\n"},"gnuplot":{"Platform":"all","Class":"other cmds","Brief":"A graph plotter that outputs in several formats.","MdText":"# gnuplot\n\n\u003e A graph plotter that outputs in several formats.\n\u003e Homepage: \u003chttp://www.gnuplot.info/\u003e.\n\n- Start the interactive graph plotting shell:\n\n`gnuplot`\n\n- Plot the graph for the specified graph definition file:\n\n`gnuplot {{path/to/definition.plt}}`\n\n- Set the output format by executing a command before loading the definition file:\n\n`gnuplot -e \"{{set output \"path/to/filename.png\" size 1024,768}}\" {{path/to/definition.plt}}`\n\n- Persist the graph plot preview window after gnuplot exits:\n\n`gnuplot --persist {{path/to/definition.plt}}`\n"},"go":{"Platform":"all","Class":"other cmds","Brief":"Tool for managing go source code.","MdText":"# go\n\n\u003e Tool for managing go source code.\n\n- Download and install a package, specified by its import path:\n\n`go get {{package_path}}`\n\n- Compile and run a source file (it has to contain a `main` package):\n\n`go run {{file}}.go`\n\n- Compile a source file into a named executable:\n\n`go build -o {{executable}} {{file}}.go`\n\n- Compile the package present in the current directory:\n\n`go build`\n\n- Execute all test cases of the current package (files have to end with `_test.go`):\n\n`go test`\n\n- Compile and install the current package:\n\n`go install`\n"},"gofmt":{"Platform":"all","Class":"other cmds","Brief":"Tool for formatting Go source code.","MdText":"# gofmt\n\n\u003e Tool for formatting Go source code.\n\u003e Homepage: \u003chttps://golang.org/cmd/gofmt/\u003e.\n\n- Format a file and display the result to the console:\n\n`gofmt {{source.go}}`\n\n- Format a file, overwriting the original file in-place:\n\n`gofmt -w {{source.go}}`\n\n- Format a file, and then simplify the code, overwriting the original file:\n\n`gofmt -s -w {{source.go}}`\n\n- Print all (including spurious) errors:\n\n`gofmt -e {{source.go}}`\n"},"gpg-zip":{"Platform":"all","Class":"file compress","Brief":"Encrypt files and directories in an archive using GPG.","MdText":"# gpg-zip\n\n\u003e Encrypt files and directories in an archive using GPG.\n\n- Encrypt a directory into archive.gpg using a passphrase:\n\n`gpg-zip --symmetric --output {{archive.gpg}} {{path/to/directory}}`\n\n- Decrypt archive.gpg into a directory of the same name:\n\n`gpg-zip --decrypt {{path/to/archive.gpg}}`\n\n- List the contents of the encrypted archive.gpg:\n\n`gpg-zip --list-archive {{path/to/archive.gpg}}`\n"},"gtop":{"Platform":"all","Class":"system man","Brief":"System monitoring dashboard for the terminal.","MdText":"# gtop\n\n\u003e System monitoring dashboard for the terminal.\n\n- Show the system stats dashboard:\n\n`gtop`\n\n- Sort by CPU usage:\n\n`c`\n\n- Sort by memory usage:\n\n`m`\n"},"guile":{"Platform":"all","Class":"other cmds","Brief":"Guile Scheme interpreter.","MdText":"# guile\n\n\u003e Guile Scheme interpreter.\n\n- Start the Guile Scheme REPL:\n\n`guile`\n\n- Execute the script in a given Scheme file:\n\n`guile {{script.scm}}`\n\n- Execute a Scheme expression:\n\n`guile -c \"{{expression}}\"`\n\n- Listen on a port or a Unix domain socket (the default is port 37146) for remote REPL connections:\n\n`guile --listen={{port_or_socket}}`\n"},"gzip":{"Platform":"all","Class":"file compress","Brief":"Compress/uncompress files with gzip compression (LZ77).","MdText":"# gzip\n\n\u003e Compress/uncompress files with gzip compression (LZ77).\n\n- Compress a file, replacing it with a gzipped compressed version:\n\n`gzip {{file.ext}}`\n\n- Decompress a file, replacing it with the original uncompressed version:\n\n`gzip -d {{file.ext}}.gz`\n\n- Compress a file specifying the output filename:\n\n`gzip -c {{file.ext}} \u003e {{compressed_file.ext.gz}}`\n\n- Decompress a gzipped file specifying the output filename:\n\n`gzip -c -d {{file.ext}}.gz \u003e {{uncompressed_file.ext}}`\n\n- Specify the compression level. 1=Fastest (Worst), 9=Slowest (Best), Default level is 6:\n\n`gzip -9 -c {{file.ext}} \u003e {{compressed_file.ext.gz}}`\n"},"handbrakecli":{"Platform":"all","Class":"other cmds","Brief":"Command-line interface to the HandBrake video conversion tool.","MdText":"# handbrakecli\n\n\u003e Command-line interface to the HandBrake video conversion tool.\n\n- Convert a video file to MKV (AAC 160kbit audio and x264 CRF20 video):\n\n`handbrakecli -i {{input.avi}} -o {{output.mkv}} -e x264 -q 20 -B 160`\n\n- Resize a video file to 320x240:\n\n`handbrakecli -i {{input.mp4}} -o {{output.mp4} -w 320 -l 240`\n\n- List available presets:\n\n`handbrakecli --preset-list`\n\n- Convert an AVI video to MP4 using the Android preset:\n\n`handbrakecli --preset=\"Android\" -i {{input.ext}} -o {{output.mp4}}`\n"},"haxelib":{"Platform":"all","Class":"other cmds","Brief":"Haxe Library Manager.","MdText":"# haxelib\n\n\u003e Haxe Library Manager.\n\n- Search for a Haxe library:\n\n`haxelib search {{keyword}}`\n\n- Install a Haxe library:\n\n`haxelib install {{libname}}`\n\n- Upgrade all installed Haxe libraries:\n\n`haxelib upgrade`\n\n- Install the development version of a library from a Git repository:\n\n`haxelib git {{libname}} {{git_url}}`\n"},"heroku":{"Platform":"all","Class":"other cmds","Brief":"Create and manage Heroku apps from the command line.","MdText":"# heroku\n\n\u003e Create and manage Heroku apps from the command line.\n\n- Login to your heroku account:\n\n`heroku login`\n\n- Create a heroku app:\n\n`heroku create`\n\n- Show logs for an app:\n\n`heroku logs --app {{app_name}}`\n\n- Run a one-off process inside a dyno (Heroku virtual machine):\n\n`heroku run {{process_name}} --app {{app_name}}`\n\n- List dynos (Heroku virtual machines) for an app:\n\n`heroku ps --app {{app_name}}`\n\n- Permanently destroy an app:\n\n`heroku destroy --app {{app_name}}`\n"},"hg-add":{"Platform":"all","Class":"other cmds","Brief":"Adds specified files to the staging area for the next commit in Mercurial.","MdText":"# hg add\n\n\u003e Adds specified files to the staging area for the next commit in Mercurial.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#add\u003e.\n\n- Add files or directories to the staging area:\n\n`hg add {{path/to/file}}`\n\n- Add all unstaged files matching a specified pattern:\n\n`hg add --include {{pattern}}`\n\n- Add all unstaged files, excluding those that match a specified pattern:\n\n`hg add --exclude {{pattern}}`\n\n- Recursively add sub-repositories:\n\n`hg add --subrepos`\n\n- Perform a test-run without performing any actions:\n\n`hg add --dry-run`\n"},"hg-branch":{"Platform":"all","Class":"other cmds","Brief":"Create or show a branch name.","MdText":"# hg branch\n\n\u003e Create or show a branch name.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#branch\u003e.\n\n- Show the name of the currently active branch:\n\n`hg branch`\n\n- Create a new branch for the next commit:\n\n`hg branch {{branch_name}}`\n"},"hg-clone":{"Platform":"all","Class":"other cmds","Brief":"Create a copy of an existing repository in a new directory.","MdText":"# hg clone\n\n\u003e Create a copy of an existing repository in a new directory.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#clone\u003e.\n\n- Clone a repository to a specified directory:\n\n`hg clone {{remote_repository_source}} {{destination_path}}`\n\n- Clone a repository to the head of a specific branch, ignoring later commits:\n\n`hg clone --branch {{branch}} {{remote_repository_source}}`\n\n- Clone a repository with only the \".hg\" directory, without checking out files:\n\n`hg clone --noupdate {{remote_repository_source}}`\n\n- Clone a repository to a specific revision, tag or branch, keeping the entire history:\n\n`hg clone --updaterev {{revision}} {{remote_repository_source}}`\n\n- Clone a repository up to a specific revision without any newer history:\n\n`hg clone --rev {{revision}} {{remote_repository_source}}`\n"},"hg-init":{"Platform":"all","Class":"other cmds","Brief":"Create a new repository in the specified directory.","MdText":"# hg init\n\n\u003e Create a new repository in the specified directory.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#init\u003e.\n\n- Initialise a new repository in the current directory:\n\n`hg init`\n\n- Initialise a new repository in the specified directory:\n\n`hg init {{path/to/directory}}`\n"},"hg-pull":{"Platform":"all","Class":"other cmds","Brief":"Pull changes from a specified repository to the local repository.","MdText":"# hg pull\n\n\u003e Pull changes from a specified repository to the local repository.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#pull\u003e.\n\n- Pull from the \"default\" source path:\n\n`hg pull`\n\n- Pull from a specified source repository:\n\n`hg pull {{path/to/source_repository}}`\n\n- Update the local repository to the head of the remote:\n\n`hg pull --update`\n\n- Pull changes even when the remote repository is unrelated:\n\n`hg pull --force`\n\n- Specify a specific revision changeset to pull up to:\n\n`hg pull --rev {{revision}}`\n\n- Specify a specific branch to pull:\n\n`hg pull --branch {{branch}}`\n\n- Specify a specific bookmark to pull:\n\n`hg pull --bookmark {{bookmark}}`\n"},"hg-push":{"Platform":"all","Class":"other cmds","Brief":"Push changes from the local repository to a specified destination.","MdText":"# hg push\n\n\u003e Push changes from the local repository to a specified destination.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#push\u003e.\n\n- Push changes to the \"default\" remote path:\n\n`hg push`\n\n- Push changes to a specified remote repository:\n\n`hg push {{path/to/destination_repository}}`\n\n- Push a new branch if it does not exist (disabled by default):\n\n`hg push --new-branch`\n\n- Specify a specific revision changeset to push:\n\n`hg push --rev {{revision}}`\n\n- Specify a specific branch to push:\n\n`hg push --branch {{branch}}`\n\n- Specify a specific bookmark to push:\n\n`hg push --bookmark {{bookmark}}`\n"},"hg-serve":{"Platform":"all","Class":"other cmds","Brief":"Start a standalone Mercurial web server for browsing repositories.","MdText":"# hg serve\n\n\u003e Start a standalone Mercurial web server for browsing repositories.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#serve\u003e.\n\n- Start a web server instance:\n\n`hg serve`\n\n- Start a web server instance on the specified port:\n\n`hg serve --port {{port}}`\n\n- Start a web server instance on the specified listening address:\n\n`hg serve --address {{address}}`\n\n- Start a web server instance with a specific identifier:\n\n`hg serve --name {{name}}`\n\n- Start a web server instance using the specified theme (see the templates directory):\n\n`hg serve --style {{style}}`\n\n- Start a web server instance using the specified SSL certificate bundle:\n\n`hg serve --certificate {{path/to/certificate}}`\n"},"hg-status":{"Platform":"all","Class":"other cmds","Brief":"Show files that have changed in the working directory.","MdText":"# hg status\n\n\u003e Show files that have changed in the working directory.\n\u003e Homepage: \u003chttps://www.mercurial-scm.org/doc/hg.1.html#status\u003e.\n\n- Display the status of changed files:\n\n`hg status`\n\n- Display only modified files:\n\n`hg status --modified`\n\n- Display only added files:\n\n`hg status --added`\n\n- Display only removed files:\n\n`hg status --removed`\n\n- Display only deleted (but tracked) files:\n\n`hg status --deleted`\n\n- Display changes in the working directory compared to a specified changeset:\n\n`hg status --rev {{revision}}`\n\n- Display only files matching a specified glob pattern:\n\n`hg status --include {{pattern}}`\n\n- Display files, excluding those that match a specified glob pattern:\n\n`hg status --exclude {{pattern}}`\n"},"hn":{"Platform":"all","Class":"network comm","Brief":"Command-line interface for Hacker News.","MdText":"# hn\n\n\u003e Command-line interface for Hacker News.\n\n- View stories on Hacker News:\n\n`hn`\n\n- View _number_ of stories on Hacker News:\n\n`hn --limit {{number}}`\n\n- View stories on Hacker News, and keep the list open after selecting a link:\n\n`hn --keep-open`\n\n- View stories on Hacker News sorted by submission date:\n\n`hn --latest`\n"},"hr":{"Platform":"all","Class":"other cmds","Brief":"Print a horizontal rule in the terminal.","MdText":"# hr\n\n\u003e Print a horizontal rule in the terminal.\n\n- Print a horizontal rule:\n\n`hr`\n\n- Print a horizontal rule with a custom string:\n\n`hr {{string}}`\n\n- Print a multiline horizontal rule:\n\n`hr {{string_a}} {{string_b}} {{string_c}}`\n"},"hsd-cli":{"Platform":"all","Class":"other cmds","Brief":"The command line REST tool for the Handshake blockchain.","MdText":"# hsd-cli\n\n\u003e The command line REST tool for the Handshake blockchain.\n\u003e Homepage: \u003chttps://handshake.org\u003e.\n\n- Retrieve information about the current server:\n\n`hsd-cli info`\n\n- Broadcast a local transaction:\n\n`hsd-cli broadcast {{transaction_hex}}`\n\n- Retrieve a mempool snapshot:\n\n`hsd-cli mempool`\n\n- View a transaction by address or hash:\n\n`hsd-cli tx {{address_or_hash}}`\n\n- View a coin by its hash index or address:\n\n`hsd-cli coin {{hash_index_or_address}}`\n\n- View a block by height or hash:\n\n`hsd-cli block {{height_or_hash}}`\n\n- Reset the chain to the specified block:\n\n`hsd-cli reset {{height_or_hash}}`\n\n- Execute an RPC command:\n\n`hsd-cli rpc {{command}} {{args}}`\n"},"hub":{"Platform":"all","Class":"other cmds","Brief":"A wrapper for git that adds commands for working with GitHub-based projects.","MdText":"# hub\n\n\u003e A wrapper for git that adds commands for working with GitHub-based projects.\n\u003e The commands can also be used using \"git\" instead of \"hub\".\n\n- Clone a repository you own, using just the repository name rather than the full URL:\n\n`hub clone {{repo_name}}`\n\n- Clone another user's repository, using their github username and the repository name:\n\n`hub clone {{username}}/{{repo_name}}`\n\n- Create a fork of the current repository (cloned from another user) under your github profile:\n\n`hub fork`\n\n- Push the current local branch to github and create a PR for it in the original repository:\n\n`hub push {{remote_name}} \u0026\u0026 hub pull-request`\n\n- Create a PR of the current (already pushed) branch, reusing the message from the first commit:\n\n`hub pull-request --no-edit`\n\n- Upload the current (local-only) repository to your github account:\n\n`hub create`\n"},"hyperfine":{"Platform":"all","Class":"other cmds","Brief":"A command-line benchmarking tool.","MdText":"# hyperfine\n\n\u003e A command-line benchmarking tool.\n\u003e Homepage: \u003chttps://github.com/sharkdp/hyperfine/\u003e.\n\n- Run a basic benchmark, performing at least 10 runs:\n\n`hyperfine '{{make}}'`\n\n- Run a comparative benchmark:\n\n`hyperfine '{{make target1}}' '{{make target2}}'`\n\n- Change minimum number of benchmarking runs:\n\n`hyperfine --min-runs {{7}} '{{make}}'`\n\n- Perform benchmark with warmup:\n\n`hyperfine --warmup {{5}} '{{make}}'`\n\n- Run a command before each benchmark run (to clear caches, etc.):\n\n`hyperfine --prepare '{{make clean}}' '{{make}}'`\n\n- Run a benchmark where a single parameter changes for each run:\n\n`hyperfine --prepare '{{make clean}}' --parameter-scan num_threads {{1}} {{10}} '{{make -j {num_threads}}}'`\n"},"ifconfig":{"Platform":"all","Class":"network comm","Brief":"Network Interface Configurator.","MdText":"# ifconfig\n\n\u003e Network Interface Configurator.\n\n- View network settings of an ethernet adapter:\n\n`ifconfig eth0`\n\n- Display details of all interfaces, including disabled interfaces:\n\n`ifconfig -a`\n\n- Disable eth0 interface:\n\n`ifconfig eth0 down`\n\n- Enable eth0 interface:\n\n`ifconfig eth0 up`\n\n- Assign IP address to eth0 interface:\n\n`ifconfig eth0 {{ip_address}}`\n"},"import":{"Platform":"all","Class":"other cmds","Brief":"Capture some or all of an X server screen, and save the image to a file.","MdText":"# import\n\n\u003e Capture some or all of an X server screen, and save the image to a file.\n\u003e Part of the ImageMagick library.\n\n- Capture the entire X server screen in the PostScript image format:\n\n`import -window root {{output.postscript}}`\n\n- Capture contents of a remote X server screen in the PNG image format:\n\n`import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}`\n\n- Capture a specific window, given its ID as displayed by `xwininfo`, into the JPEG format:\n\n`import -window {{window_id}} {{output.jpg}}`\n"},"in2csv":{"Platform":"all","Class":"other cmds","Brief":"Converts various tabular data formats into CSV.","MdText":"# in2csv\n\n\u003e Converts various tabular data formats into CSV.\n\u003e Included in csvkit.\n\n- Convert an XLS file to CSV:\n\n`in2csv {{data.xls}}`\n\n- Convert a DBF file to a CSV file:\n\n`in2csv {{data.dbf}} \u003e {{data.csv}}`\n\n- Convert a specific sheet from an XLSX file to CSV:\n\n`in2csv --sheet={{sheet_name}} {{data.xlsx}}`\n\n- Pipe a JSON file to in2csv:\n\n`cat {{data.json}} | in2csv -f json \u003e {{data.csv}}`\n"},"inkview":{"Platform":"all","Class":"other cmds","Brief":"Inkscape graphical SVG previewer.","MdText":"# inkview\n\n\u003e Inkscape graphical SVG previewer.\n\u003e Also functions as a slideshow viewer.\n\n- Preview an SVG:\n\n`inkview {{path/to/file.svg}}`\n\n- Preview multiple SVGs (use arrow keys to navigate):\n\n`inkview {{path/to/file_a.svg}} {{path/to/file_b.svg}} {{path/to/file_c.svg}}`\n"},"irssi":{"Platform":"all","Class":"network comm","Brief":"Text based IRC client.","MdText":"# irssi\n\n\u003e Text based IRC client.\n\n- Open irssi and connect to a server with a nickname:\n\n`irssi -n {{nickname}} -c {{server.name.com}}`\n\n- Open irssi and connect with a specific server on a given port:\n\n`irssi -c {{server.name.com}} -p {{port}}`\n\n- View the help:\n\n`irssi --help`\n\n- Join a channel:\n\n`/join {{#channelname}}`\n\n- Change active window (starts at 1):\n\n`/win {{window_number}}`\n\n- Exit the application cleanly and quitting any server(s):\n\n`/quit`\n"},"jar":{"Platform":"all","Class":"other cmds","Brief":"Java Applications/Libraries Packager.","MdText":"# jar\n\n\u003e Java Applications/Libraries Packager.\n\n- Unzip .jar/.war file to the current directory:\n\n`jar -xvf {{file.jar}}`\n\n- List a .jar/.war file content:\n\n`jar tf {{path/to/file.jar}}`\n\n- List a .jar/.war file content with verbose output:\n\n`jar tvf {{path/to/file.jar}}`\n"},"jmap":{"Platform":"all","Class":"other cmds","Brief":"Java Memory Map Tool.","MdText":"# jmap\n\n\u003e Java Memory Map Tool.\n\n- Print shared object mappings for a java process (output like pmap):\n\n`jmap {{java_pid}}`\n\n- Print heap summary information:\n\n`jmap -heap {{filename.jar}} {{java_pid}}`\n\n- Print histogram of heap usage by type:\n\n`jmap -histo {{java_pid}}`\n\n- Dump contents of the heap into a binary file for analysis with jhat:\n\n`jmap -dump:format=b,file={{filename}} {{java_pid}}`\n"},"jstack":{"Platform":"all","Class":"other cmds","Brief":"Java Stack Trace Tool.","MdText":"# jstack\n\n\u003e Java Stack Trace Tool.\n\n- Print java stack traces for all threads in a java process:\n\n`jstack {{java_pid}}`\n\n- Print mixed mode (java/c++) stack traces for all threads in a java process:\n\n`jstack -m {{java_pid}}`\n\n- Print stack traces from java core dump:\n\n`jstack {{/usr/bin/java}} {{file.core}}`\n"},"jupyter":{"Platform":"all","Class":"other cmds","Brief":"Web application to create and share documents that contain code, visualizations and notes.","MdText":"# jupyter\n\n\u003e Web application to create and share documents that contain code, visualizations and notes.\n\u003e Primarily used for data analysis, scientific computing and machine learning.\n\n- Start a Jupyter notebook server in the current directory:\n\n`jupyter notebook`\n\n- Open a specific Jupyter notebook:\n\n`jupyter notebook {{example.ipynb}}`\n\n- Start a server on a specific port:\n\n`jupyter notebook --port={{port}}`\n\n- List currently running notebook servers:\n\n`jupyter notebook list`\n\n- Stop the currently running server:\n\n`jupyter notebook stop`\n\n- Start JupyterLab, if installed, in the current directory:\n\n`jupyter lab`\n"},"kak":{"Platform":"all","Class":"other cmds","Brief":"Kakoune is a mode-based code editor implementing the \"multiple selections\" paradigm.","MdText":"# kak\n\n\u003e Kakoune is a mode-based code editor implementing the \"multiple selections\" paradigm.\n\u003e Data can be selected and simultaneously edited in different locations, using multiple selections; users can also connect to the same session for collaborative editing.\n\n- Open a file and enter normal mode, to execute commands:\n\n`kak {{path/to/file}}`\n\n- Enter insert mode from normal mode, to write text into the file:\n\n`i`\n\n- Escape insert mode, to go back to normal mode:\n\n`\u003cEscape\u003e`\n\n- Replace all instances of \"foo\" in the current file with \"bar\":\n\n`%s{{foo}}\u003cEnter\u003ec{{bar}}\u003cEscape\u003e`\n\n- Un-select all secondary selections, and keep only the main one:\n\n`\u003cSpace\u003e`\n\n- Search for numbers and select the first two:\n\n`/\\d+\u003cEnter\u003eN`\n\n- Insert the contents of a file:\n\n`!cat {{path/to/file}}\u003cEnter\u003e`\n\n- Save the current file:\n\n`:w\u003cEnter\u003e`\n"},"kubeadm":{"Platform":"all","Class":"other cmds","Brief":"Command line interface for creating and managing Kubernetes clusters.","MdText":"# kubeadm\n\n\u003e Command line interface for creating and managing Kubernetes clusters.\n\n- Create a Kubernetes master node:\n\n`kubeadm init`\n\n- Bootstrap a Kubernetes worker node and join it to a cluster:\n\n`kubeadm join --token {{token}}`\n\n- Create a new bootstrap token with a TTL of 12 hours:\n\n`kubeadm token create --ttl {{12h0m0s}}`\n\n- Check if the Kubernetes cluster is upgradeable and which versions are available:\n\n`kubeadm upgrade plan`\n\n- Upgrade Kubernetes cluster to a specified version:\n\n`kubeadm upgrade apply {{version}}`\n\n- View the kubeadm ConfigMap containing the cluster's configuration:\n\n`kubeadm config view`\n\n- Revert changes made to the host by 'kubeadm init' or 'kubeadm join':\n\n`kubeadm reset`\n"},"kubectl":{"Platform":"all","Class":"other cmds","Brief":"Command line interface for running commands against Kubernetes clusters.","MdText":"# kubectl\n\n\u003e Command line interface for running commands against Kubernetes clusters.\n\n- List all pods in all namespaces:\n\n`kubectl get pods --all-namespaces`\n\n- List all pods with more information (such as node name):\n\n`kubectl get pods -o wide`\n\n- Update specified pod with the label 'unhealthy' and the value 'true':\n\n`kubectl label pods {{name}} unhealthy=true`\n\n- List all resources with different types:\n\n`kubectl get all`\n\n- Show metrics for all nodes:\n\n`kubectl top node`\n\n- Show metrics for all pods in the default namespace:\n\n`kubectl top pod`\n\n- Print the address of the master and cluster services:\n\n`kubectl cluster-info`\n"},"kubectx":{"Platform":"all","Class":"other cmds","Brief":"Utility to manage and switch between `kubectl` contexts.","MdText":"# kubectx\n\n\u003e Utility to manage and switch between `kubectl` contexts.\n\n- List the contexts:\n\n`kubectx`\n\n- Switch to a named context:\n\n`kubectx {{name}}`\n\n- Switch to the previous context:\n\n`kubectx -`\n\n- Delete a named context:\n\n`kubectx -d {{name}}`\n"},"latexmk":{"Platform":"all","Class":"other cmds","Brief":"Compile LaTeX source files into finished documents.","MdText":"# latexmk\n\n\u003e Compile LaTeX source files into finished documents.\n\u003e Automatically does multiple runs when needed.\n\n- Compile a dvi (DeVice Independent file) document from every source:\n\n`latexmk`\n\n- Compile a dvi document from a specific source file:\n\n`latexmk {{source.tex}}`\n\n- Compile a pdf document:\n\n`latexmk -pdf {{source.tex}}`\n\n- Force the generation of a document even if there are errors:\n\n`latexmk -f {{source.tex}}`\n\n- Clean up temporary tex files created for a specific tex file:\n\n`latexmk -c {{source.tex}}`\n\n- Clean up all temporary tex files in the current directory:\n\n`latexmk -c`\n"},"ldapsearch":{"Platform":"all","Class":"other cmds","Brief":"CLI utility for querying an LDAP directory.","MdText":"# ldapsearch\n\n\u003e CLI utility for querying an LDAP directory.\n\n- Query an LDAP server for all items that are a member of the given group and return the object's displayName value:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' displayName`\n\n- Query an LDAP server with a no-newline password file for all items that are a member of the given group and return the object's displayName value:\n\n`ldapsearch -D '{{admin_DN}}' -y '{{password_file}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' displayName`\n\n- Return 5 items that match the given filter:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' -z 5 displayName`\n\n- Wait up to 7 seconds for a response:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' -l 7 displayName`\n\n- Invert the filter:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '(!(memberOf={{group1}}))' displayName`\n\n- Return all items that are part of multiple groups, returning the display name for each item:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} '(\u0026({{memberOf=group1}})({{memberOf=group2}})({{memberOf=group3}}))' \"displayName\"`\n\n- Return all items that are members of at least 1 of the specified groups:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} '(|({{memberOf=group1}})({{memberOf=group1}})({{memberOf=group3}}))' displayName`\n\n- Combine multiple boolean logic filters:\n\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} '(\u0026({{memberOf=group1}})({{memberOf=group2}})(!({{memberOf=group3}})))' displayName`\n"},"leave":{"Platform":"all","Class":"system settings","Brief":"Remind when it's time to leave.","MdText":"# leave\n\n\u003e Remind when it's time to leave.\n\u003e To remove reminders use `kill $(pidof leave)`.\n\n- Set a reminder at a given time:\n\n`leave {{time_to_leave}}`\n\n- Remind to leave at noon:\n\n`leave {{1200}}`\n\n- Set a reminder in a specific amount of time:\n\n`leave +{{amount_of_time}}`\n\n- Remind to leave in 4 hours and 4 minutes:\n\n`leave +{{0404}}`\n"},"lebab":{"Platform":"all","Class":"other cmds","Brief":"A JavaScript modernizer for transpiling code to ES6/ES7.","MdText":"# lebab\n\n\u003e A JavaScript modernizer for transpiling code to ES6/ES7.\n\u003e Transformations must be provided for all examples.\n\n- Display a list of the available transformations:\n\n`lebab --help`\n\n- Transpile using one or more comma-separated transformations:\n\n`lebab --transform {{transformation}}`\n\n- Transpile a file to stdout:\n\n`lebab {{path/to/input_file}}`\n\n- Transpile a file to the specified output file:\n\n`lebab {{path/to/input_file}} --out-file {{path/to/output_file}}`\n\n- Replace all `.js` files in-place in the specified directory, glob or file:\n\n`lebab --replace {{directory|glob|file}}`\n"},"license":{"Platform":"all","Class":"other cmds","Brief":"Create license files for open-source projects.","MdText":"# license\n\n\u003e Create license files for open-source projects.\n\n- Print a license to stdout, using the defaults (auto-detected author name, and current year):\n\n`license {{license_name}}`\n\n- Generate a license and save it to a file:\n\n`license -o {{filename}} {{license_name}}`\n\n- List all available licenses:\n\n`license ls`\n\n- Generate a license with custom author name and year:\n\n`license --name {{author}} --year {{release_year}} {{license_name}}`\n"},"light-arionum-cli":{"Platform":"all","Class":"other cmds","Brief":"The PHP light wallet for the Arionum cryptocurrency.","MdText":"# light-arionum-cli\n\n\u003e The PHP light wallet for the Arionum cryptocurrency.\n\n- Generate a new public/private key pair:\n\n`light-arionum-cli`\n\n- Display the balance of the current address:\n\n`light-arionum-cli balance`\n\n- Display the balance of the specified address:\n\n`light-arionum-cli balance {{address}}`\n\n- Send a transaction with an optional message:\n\n`light-arionum-cli send {{address}} {{value}} {{optional_message}}`\n\n- Export the current wallet information:\n\n`light-arionum-cli export`\n\n- Display information about the current block:\n\n`light-arionum-cli block`\n\n- Display information about the current address' transactions:\n\n`light-arionum-cli transactions`\n\n- Display information about a specific transaction:\n\n`light-arionum-cli transaction {{transaction_id}}`\n"},"loc":{"Platform":"all","Class":"file editor","Brief":"Tool written in Rust that counts lines of code.","MdText":"# loc\n\n\u003e Tool written in Rust that counts lines of code.\n\n- Print lines of code in the current directory:\n\n`loc`\n\n- Print lines of code in the target directory:\n\n`loc {{path/to/directory}}`\n\n- Print lines of code with stats for individual files:\n\n`loc --files`\n\n- Print lines of code without .gitignore (etc.) files (e.g. two -u flags will additionally count hidden files and dirs):\n\n`loc -u`\n"},"logstash":{"Platform":"all","Class":"other cmds","Brief":"An ETL (extract, transform and load) tool.","MdText":"# logstash\n\n\u003e An ETL (extract, transform and load) tool.\n\u003e Commonly used to load data from various sources, like databases and log files, into elasticsearch.\n\n- Check validity of a logstash configuration:\n\n`logstash --configtest --config {{logstash_config.conf}}`\n\n- Run logstash using configuration:\n\n`sudo logstash --config {{logstash_config.conf}}`\n\n- Run logstash with the most basic inline configuration string:\n\n`sudo logstash -e 'input {} filter {} output {}'`\n"},"lp":{"Platform":"all","Class":"file man","Brief":"Print files.","MdText":"# lp\n\n\u003e Print files.\n\n- Print the output of a command to the default printer (see `lpstat` command):\n\n`echo \"test\" | lp`\n\n- Print a file to the default printer:\n\n`lp {{path/to/filename}}`\n\n- Print a file to a named printer (see `lpstat` command):\n\n`lp -d {{printer_name}} {{path/to/filename}}`\n\n- Print N copies of file to default printer (replace N with desired number of copies):\n\n`lp -n {{N}} {{path/to/filename}}`\n\n- Print only certain pages to the default printer (print pages 1, 3-5, and 16):\n\n`lp -P 1,3-5,16 {{path/to/filename}}`\n"},"lsof":{"Platform":"all","Class":"file man","Brief":"Lists open files and the corresponding processes.","MdText":"# lsof\n\n\u003e Lists open files and the corresponding processes.\n\u003e Note: Root privileges (or sudo) is required to list files opened by others.\n\n- Find the processes that have a given file open:\n\n`lsof {{path/to/file}}`\n\n- Find the process that opened a local internet port:\n\n`lsof -i :{{port}}`\n\n- Only output the process ID (PID):\n\n`lsof -t {{path/to/file}}`\n\n- List files opened by the given user:\n\n`lsof -u {{username}}`\n\n- List files opened by the given command or process:\n\n`lsof -c {{process_or_command_name}}`\n\n- List files opened by a specific process, given its PID:\n\n`lsof -p {{PID}}`\n\n- List open files in a directory:\n\n`lsof +D {{path/to/directory}}`\n"},"lua":{"Platform":"all","Class":"other cmds","Brief":"A powerful, light-weight embeddable programming language.","MdText":"# lua\n\n\u003e A powerful, light-weight embeddable programming language.\n\n- Start an interactive Lua shell:\n\n`lua`\n\n- Execute a Lua script:\n\n`lua {{script_name.lua}} {{--optional-argument}}`\n\n- Execute a Lua expression:\n\n`lua -e '{{print( \"Hello World\" )}}`\n"},"luac":{"Platform":"all","Class":"other cmds","Brief":"Lua bytecode compiler.","MdText":"# luac\n\n\u003e Lua bytecode compiler.\n\n- Compile a Lua source file to Lua bytecode:\n\n`luac -o {{byte_code.luac}} {{source.lua}}`\n\n- Do not include debug symbols in the output:\n\n`luac -s -o {{byte_code.luac}} {{source.lua}}`\n"},"lumen":{"Platform":"all","Class":"other cmds","Brief":"A command line installer for the Lumen micro-framework.","MdText":"# lumen\n\n\u003e A command line installer for the Lumen micro-framework.\n\n- Create a new Lumen application:\n\n`lumen new {{application_name}}`\n\n- List the available installer commands:\n\n`lumen list`\n"},"lz4":{"Platform":"all","Class":"file compress","Brief":"Compress or decompress .lz4 files.","MdText":"# lz4\n\n\u003e Compress or decompress .lz4 files.\n\n- Compress a file:\n\n`lz4 {{file}}`\n\n- Decompress a file:\n\n`lz4 -d {{file.lz4}}`\n\n- Decompress a file and write to stdout:\n\n`lz4 -dc {{file.lz4}}`\n\n- Package and compress a directory and its contents:\n\n`tar cvf - {{path/to/dir}} | lz4 - {{dir.tar.lz4}}`\n\n- Decompress and unpack a directory and its contents:\n\n`lz4 -d {{dir.tar.lz4}} | tar -xv`\n\n- Compress a file using the best compression:\n\n`lz4 -9 {{file}}`\n"},"m4":{"Platform":"all","Class":"other cmds","Brief":"Macro processor.","MdText":"# m4\n\n\u003e Macro processor.\n\n- Process macros in a file:\n\n`m4 {{path/to/file}}`\n\n- Define a macro before processing files:\n\n`m4 -D{{macro_name}}={{macro_value}} {{path/to/file}}`\n"},"makensis":{"Platform":"all","Class":"other cmds","Brief":"Cross-platform compiler for NSIS installers.","MdText":"# makensis\n\n\u003e Cross-platform compiler for NSIS installers.\n\u003e It compiles a NSIS script into a Windows installer executable.\n\n- Compile a NSIS script:\n\n`makensis {{path/to/file.nsi}}`\n\n- Compile a NSIS script in strict mode (treat warnings as errors):\n\n`makensis -WX {{path/to/file.nsi}}`\n\n- Print help for a specific command:\n\n`makensis -CMDHELP {{command}}`\n"},"md5sum":{"Platform":"all","Class":"other cmds","Brief":"Calculate MD5 cryptographic checksums.","MdText":"# md5sum\n\n\u003e Calculate MD5 cryptographic checksums.\n\n- Calculate the MD5 checksum for a file:\n\n`md5sum {{filename1}}`\n\n- Calculate MD5 checksums for multiple files:\n\n`md5sum {{filename1}} {{filename2}}`\n\n- Read a file of MD5SUMs and verify all files have matching checksums:\n\n`md5sum -c {{filename.md5}}`\n"},"minetest":{"Platform":"all","Class":"other cmds","Brief":"Multiplayer infinite-world block sandbox.","MdText":"# minetest\n\n\u003e Multiplayer infinite-world block sandbox.\n\u003e See also `minetestserver`, the server-only binary.\n\n- Start minetest in client mode:\n\n`minetest`\n\n- Start minetest in server mode:\n\n`minetest --server`\n\n- Write logs to a specific file:\n\n`minetest --logfile {{path/to/file}}`\n\n- Only write errors to the console:\n\n`minetest --quiet`\n"},"minetestserver":{"Platform":"all","Class":"other cmds","Brief":"Multiplayer infinite-world block sandbox server.","MdText":"# minetestserver\n\n\u003e Multiplayer infinite-world block sandbox server.\n\u003e See also `minetest`, the graphical client.\n\n- Start the server:\n\n`minetestserver`\n\n- List available worlds:\n\n`minetestserver --world list`\n\n- Specify the world name to load:\n\n`minetestserver --world {{world_name}}`\n\n- List the available game IDs:\n\n`minetestserver --gameid list`\n\n- Specify a game to use:\n\n`minetestserver --gameid {{game_id}}`\n\n- Listen on a specific port:\n\n`minetestserver --port {{34567}}`\n\n- Migrate to a different data backend:\n\n`minetestserver --migrate {{sqlite3|leveldb|redis}}`\n\n- Start an interactive terminal after starting the server:\n\n`minetestserver --terminal`\n"},"minikube":{"Platform":"all","Class":"other cmds","Brief":"Tool to run Kubernetes locally.","MdText":"# minikube\n\n\u003e Tool to run Kubernetes locally.\n\n- Start the cluster:\n\n`minikube start`\n\n- Get the IP address of the cluster:\n\n`minikube ip`\n\n- Access a service named my_service exposed via a node port and get the url:\n\n`minikube service {{my_service}} --url`\n\n- Open kubernetes dashboard in a browser:\n\n`minikube dashboard`\n"},"mktemp":{"Platform":"all","Class":"file man","Brief":"Create a temporary file or directory.","MdText":"# mktemp\n\n\u003e Create a temporary file or directory.\n\n- Create an empty temporary file and return the absolute path to it:\n\n`mktemp`\n\n- Create a temporary directory and return the absolute path to it:\n\n`mktemp -d`\n\n- Create a temporary file with a specified suffix:\n\n`mktemp --suffix \"{{.txt}}\"`\n"},"mogrify":{"Platform":"all","Class":"file man","Brief":"Perform operations on multiple images, such as resizing, cropping, flipping, and adding effects.","MdText":"# mogrify\n\n\u003e Perform operations on multiple images, such as resizing, cropping, flipping, and adding effects.\n\u003e Changes are applied directly to the original file.\n\n- Resize all JPEG images in the directory to 50% of their initial size:\n\n`mogrify -resize {{50%}} {{*.jpg}}`\n\n- Resize all images starting with \"DSC\" to 800x600:\n\n`mogrify -resize {{800x600}} {{DSC*}}`\n\n- Convert all PNG images in the directory to JPEG:\n\n`mogrify -format {{jpg}} {{*.png}}`\n\n- Halve the saturation of all image files in the current directory:\n\n`mogrify -modulate {{100,50}} {{*}}`\n\n- Double the brightness of all image files in the current directory:\n\n`mogrify -modulate {{200}} {{*}}`\n"},"montage":{"Platform":"all","Class":"file man","Brief":"Imagemagick image montage tool.","MdText":"# montage\n\n\u003e Imagemagick image montage tool.\n\u003e Tiles images into a customisable grid.\n\n- Tile images into a grid, automatically resizing images larger than the grid cell size:\n\n`montage {{image1.png}} {{image2.jpg}} {{imageN.png}} montage.jpg`\n\n- Tile images into a grid, automatically calculating the grid cell size from the largest image:\n\n`montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry +0+0 montage.jpg`\n\n- Set the grid cell size and resize images to fit it before tiling:\n\n`montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry 640x480+0+0 montage.jpg`\n\n- Limit the number of rows and columns in the grid, causing input images to overflow into multiple output montages:\n\n`montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry +0+0 -tile 2x3 montage_%d.jpg`\n\n- Resize and crop images to completely fill their grid cells before tiling:\n\n`montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry +0+0 -resize 640x480^ -gravity center -crop 640x480+0+0 montage.jpg`\n"},"mosquitto_sub":{"Platform":"all","Class":"file man","Brief":"A simple MQTT version 3.1.1 client that will subscribe to topics and print the messages that it receives.","MdText":"# mosquitto_sub\n\n\u003e A simple MQTT version 3.1.1 client that will subscribe to topics and print the messages that it receives.\n\n- Subscribe to the topic `sensors/temperature` information with Quality of Service (`QoS`) set to 1. (The default hostname is `localhost` and port `1883`):\n\n`mosquitto_sub -t {{sensors/temperature}} -q {{1}}`\n\n- Subscribe to all broker status messages publishing on `iot.eclipse.org` port `1885` and print published messages verbosely:\n\n`mosquitto_sub -v -h \"iot.eclipse.org\" -p 1885 -t {{\\$SYS/#}}`\n\n- Subscribe to multiple topics matching a given pattern. (+ takes any metric name):\n\n`mosquitto_sub -t {{sensors/machines/+/temperature/+}}`\n"},"mpv":{"Platform":"all","Class":"file man","Brief":"A audio/video player based on MPlayer.","MdText":"# mpv\n\n\u003e A audio/video player based on MPlayer.\n\n- Play a video or audio file:\n\n`mpv {{file}}`\n\n- Jump backward/forward 5 seconds:\n\n`LEFT \u003cor\u003e RIGHT`\n\n- Jump backward/forward 1 minute:\n\n`DOWN \u003cor\u003e UP`\n\n- Decrease or increase playback speed by 10 %:\n\n`[ \u003cor\u003e ]`\n\n- Play a file at a specified speed (0.01 to 100, default 1):\n\n`mpv --speed {{speed}} {{file}}`\n\n- Play a file using a profile defined in the `mpv.conf` file:\n\n`mpv --profile {{profile_name}} {{file}}`\n"},"msmtp":{"Platform":"all","Class":"network comm","Brief":"An SMTP client.","MdText":"# msmtp\n\n\u003e An SMTP client.\n\u003e It reads text from standard input and sends it to an SMTP server.\n\n- Send an email using the default account configured in `~/.msmtprc`:\n\n`echo {{\"Hello world\"}} | msmtp {{to@example.org}}`\n\n- Send an email using a specific account configured in `~/.msmtprc`:\n\n`echo {{\"Hello world\"}} | msmtp --account={{account_name}} {{to@example.org}}`\n\n- Send an email without a configured account. The password should be specified in the `~/.msmtprc` file:\n\n`echo {{\"Hello world\"}} | msmtp --host={{localhost}} --port={{999}} --from={{from@example.org}} {{to@example.org}}`\n"},"mtr":{"Platform":"all","Class":"network comm","Brief":"Matt's Traceroute: combined traceroute and ping tool.","MdText":"# mtr\n\n\u003e Matt's Traceroute: combined traceroute and ping tool.\n\n- Traceroute to a host and continuously ping all intermediary hops:\n\n`mtr {{host}}`\n\n- Disable IP address and host name mapping:\n\n`mtr -n {{host}}`\n\n- Generate output after pinging each hop 10 times:\n\n`mtr -w {{host}}`\n\n- Force IP IPv4 or IPV6:\n\n`mtr -4 {{host}}`\n\n- Wait for a given time (in seconds) before sending another packet to the same hop:\n\n`mtr -i {{seconds}} {{host}}`\n"},"mutool":{"Platform":"all","Class":"other cmds","Brief":"Convert PDF files, query information and extract data.","MdText":"# mutool\n\n\u003e Convert PDF files, query information and extract data.\n\n- Convert pages 1-10 into 10 PNG images:\n\n`mutool convert -o {{image%d.png}} {{file.pdf}} {{1-10}}`\n\n- Convert pages 2, 3 and 5 of a PDF into text in the standard output:\n\n`mutool draw -F {{txt}} {{file.pdf}} {{2,3,5}}`\n\n- Concatenate two PDFs:\n\n`mutool merge -o {{output.pdf}} {{input1.pdf}} {{input2.pdf}}`\n\n- Query information about all content embedded in a PDF:\n\n`mutool info {{input.pdf}}`\n\n- Extract all images, fonts and resources embedded in a PDF out into the current directory:\n\n`mutool extract {{input.pdf}}`\n"},"mysql":{"Platform":"all","Class":"other cmds","Brief":"The MySQL command-line tool.","MdText":"# mysql\n\n\u003e The MySQL command-line tool.\n\u003e Homepage: \u003chttps://www.mysql.com/\u003e.\n\n- Connect to a database:\n\n`mysql {{database_name}}`\n\n- Connect to a database, user will be prompted for a password:\n\n`mysql -u {{user}} --password {{database_name}}`\n\n- Connect to a database on another host:\n\n`mysql -h {{database_host}} {{database_name}}`\n\n- Connect to a database through a Unix socket:\n\n`mysql --socket {{path/to/socket.sock}}`\n\n- Execute SQL statements in a script file (batch file):\n\n`mysql -e \"source {{filename.sql}}\" {{database_name}}`\n"},"mysqldump":{"Platform":"all","Class":"other cmds","Brief":"Backups MySQL databases.","MdText":"# mysqldump\n\n\u003e Backups MySQL databases.\n\u003e Homepage: \u003chttps://dev.mysql.com/doc/refman/en/mysqldump.html\u003e.\n\n- Create a backup, user will be prompted for a password:\n\n`mysqldump -u {{user}} --password {{database_name}} -r {{filename.sql}}`\n\n- Restore a backup, user will be prompted for a password:\n\n`mysql -u {{user}} --password -e \"source {{filename.sql}}\" {{database_name}}`\n"},"mytop":{"Platform":"all","Class":"other cmds","Brief":"Display MySQL server performance info like `top`.","MdText":"# mytop\n\n\u003e Display MySQL server performance info like `top`.\n\u003e Homepage: \u003chttp://www.mysqlfanboy.com/mytop-3\u003e.\n\n- Start mytop:\n\n`mytop`\n\n- Connect with a specified username and password:\n\n`mytop -u {{user}} -p {{password}}`\n\n- Connect with a specified username (the user will be prompted for a password):\n\n`mytop -u {{user}} --prompt`\n\n- Do not show any idle (sleeping) threads:\n\n`mytop -u {{user}} -p {{password}} --noidle`\n"},"nikto":{"Platform":"all","Class":"other cmds","Brief":"Web server scanner which performs comprehensive tests against web servers for multiple items.","MdText":"# nikto\n\n\u003e Web server scanner which performs comprehensive tests against web servers for multiple items.\n\n- Perform a basic Nikto scan against a target host:\n\n`perl nikto.pl -h {{192.168.0.1}}`\n\n- Specify the port number when performing a basic scan:\n\n`perl nikto.pl -h {{192.168.0.1}} -p {{443}}`\n\n- Scan ports and protocols with full URL syntax:\n\n`perl nikto.pl -h {{https://192.168.0.1:443/}}`\n\n- Scan multiple ports in the same scanning session:\n\n`perl nikto.pl -h {{192.168.0.1}} -p {{80,88,443}}`\n\n- Update to the latest plugins and databases:\n\n`perl nikto.pl -update`\n"},"nim":{"Platform":"all","Class":"other cmds","Brief":"The Nim compiler.","MdText":"# nim\n\n\u003e The Nim compiler.\n\u003e Processes, compiles and links Nim language source files.\n\n- Compile a source file:\n\n`nim compile {{file.nim}}`\n\n- Compile and run a source file:\n\n`nim compile -r {{file.nim}}`\n\n- Compile a source file with release optimizations enabled:\n\n`nim compile -d:release {{file.nim}}`\n\n- Build a release binary optimized for low file size:\n\n`nim compile -d:release --opt:size {{file.nim}}`\n\n- Generate HTML documentation for a module (output will be placed in the current directory):\n\n`nim doc {{file.nim}}`\n"},"nix":{"Platform":"all","Class":"other cmds","Brief":"Utilities for the Nix language and store.","MdText":"# nix\n\n\u003e Utilities for the Nix language and store.\n\n- Search for a package via its name or description:\n\n`nix search {{search_term}}`\n\n- Start a Nix shell with the specified packages available:\n\n`nix run {{nixpkgs.pkg1 nixpkgs.pkg2 nixpkgs.pkg3...}}`\n\n- Optimise Nix store disk usage by combining duplicate files:\n\n`nix optimise-store`\n\n- Start an interactive environment for evaluating Nix expressions:\n\n`nix repl`\n\n- Upgrade Nix to the latest stable version:\n\n`nix upgrade-nix`\n"},"nix-collect-garbage":{"Platform":"all","Class":"other cmds","Brief":"Delete unused and unreachable nix store paths.","MdText":"# nix-collect-garbage\n\n\u003e Delete unused and unreachable nix store paths.\n\u003e Generations can be listed using `nix-env --list-generations`.\n\n- Delete all store paths unused by current generations of each profile:\n\n`sudo nix-collect-garbage --delete-old`\n\n- Simulate the deletion of old store paths:\n\n`sudo nix-collect-garbage --delete-old --dry-run`\n\n- Delete all store paths older than 30 days:\n\n`sudo nix-collect-garbage --delete-older-than {{30d}}`\n"},"nmap":{"Platform":"all","Class":"network comm","Brief":"Network exploration tool and security / port scanner.","MdText":"# nmap\n\n\u003e Network exploration tool and security / port scanner.\n\u003e Some features only activate when Nmap is run with privileges.\n\u003e Homepage: \u003chttps://nmap.org\u003e.\n\n- Try to determine whether the specified hosts are up and what are their names:\n\n`nmap -sn {{ip_or_hostname}} {{optional_another_address}}`\n\n- Like above, but also run a default 1000-port TCP scan if host seems up:\n\n`nmap {{ip_or_hostname}} {{optional_another_address}}`\n\n- Also enable scripts, service detection, OS fingerprinting and traceroute:\n\n`nmap -A {{address_or_addresses}}`\n\n- Assume good network connection and speed up execution:\n\n`nmap -T4 {{address_or_addresses}}`\n\n- Scan a specific list of ports (use -p- for all ports 1-65535):\n\n`nmap -p {{port1,port2,…,portN}} {{address_or_addresses}}`\n\n- Perform TCP and UDP scanning (use -sU for UDP only, -sZ for SCTP, -sO for IP):\n\n`nmap -sSU {{address_or_addresses}}`\n\n- Perform TLS cipher scan against a host to determine supported ciphers and SSL/TLS protocols:\n\n`nmap --script ssl-enum-ciphers {{address_or_addresses}} -p 443`\n"},"node":{"Platform":"all","Class":"other cmds","Brief":"Server-side JavaScript platform (Node.js).","MdText":"# node\n\n\u003e Server-side JavaScript platform (Node.js).\n\u003e Homepage: \u003chttps://nodejs.org\u003e.\n\n- Run a JavaScript file:\n\n`node {{file}}.js`\n\n- Start a REPL (interactive shell):\n\n`node`\n\n- Evaluate JavaScript by passing it in the command:\n\n`node -e \"{{code}}\"`\n\n- Evaluate and print result, useful to see node's dependencies versions:\n\n`node -p \"{{process.versions}}\"`\n"},"nokogiri":{"Platform":"all","Class":"other cmds","Brief":"An HTML, XML, SAX and Reader parser.","MdText":"# nokogiri\n\n\u003e An HTML, XML, SAX and Reader parser.\n\n- Parse the contents of a url or file:\n\n`nokogiri {{url|path/to/file}}`\n\n- Parse as a specific type:\n\n`nokogiri {{url|path/to/file}} --type {{xml|html}}`\n\n- Load a specific initialisation file before parsing:\n\n`nokogiri {{url|path/to/file}} -C {{path/to/config_file}}`\n\n- Parse using a specific encoding:\n\n`nokogiri {{url|path/to/file}} --encoding {{encoding}}`\n\n- Validate using a RELAX NG file:\n\n`nokogiri {{url|path/to/file}} --rng {{url|path/to/file}}`\n"},"now":{"Platform":"all","Class":"other cmds","Brief":"Cloud platform for serverless deployment.","MdText":"# now\n\n\u003e Cloud platform for serverless deployment.\n\n- Deploy the current directory:\n\n`now`\n\n- Display a list of deployments:\n\n`now list`\n\n- Display information related to a deployment:\n\n`now inspect {{deployment_url}}`\n\n- Remove a deployment:\n\n`now remove {{deployment_id}}`\n\n- Log in into an account or create a new one:\n\n`now login`\n\n- Initialize an example project (a new directory will be created):\n\n`now init`\n"},"npm":{"Platform":"all","Class":"other cmds","Brief":"JavaScript and Node.js package manager.","MdText":"# npm\n\n\u003e JavaScript and Node.js package manager.\n\u003e Manage Node.js projects and their module dependencies.\n\u003e Homepage: \u003chttps://www.npmjs.com/\u003e.\n\n- Interactively create a package.json file:\n\n`npm init`\n\n- Download all the packages listed as dependencies in package.json:\n\n`npm install`\n\n- Download a specific version of a package and add it to the list of dependencies in package.json:\n\n`npm install {{module_name}}@{{version}}`\n\n- Download a package and add it to the list of dev dependencies in package.json:\n\n`npm install {{module_name}} --save-dev`\n\n- Download a package and install it globally:\n\n`npm install -g {{module_name}}`\n\n- Uninstall a package and remove it from the list of dependencies in package.json:\n\n`npm uninstall {{module_name}}`\n\n- Print a tree of locally-installed dependencies:\n\n`npm list`\n\n- List top-level globally installed modules:\n\n`npm list -g --depth={{0}}`\n"},"npm-check":{"Platform":"all","Class":"other cmds","Brief":"Check for outdated, incorrect, and unused npm package dependencies.","MdText":"# npm-check\n\n\u003e Check for outdated, incorrect, and unused npm package dependencies.\n\u003e Homepage: \u003chttps://www.npmjs.com/package/npm-check/\u003e.\n\n- Display a report of outdated, incorrect, and unused dependencies:\n\n`npm-check`\n\n- Interactively update out-of-date packages:\n\n`npm-check --update`\n\n- Update everything without prompting:\n\n`npm-check --update-all`\n\n- Don't check for unused packages:\n\n`npm-check --skip-unused`\n"},"nrm":{"Platform":"all","Class":"other cmds","Brief":"NPM registry manager.","MdText":"# nrm\n\n\u003e NPM registry manager.\n\u003e Helps to easily switch between different npm registries.\n\n- List all registries:\n\n`nrm ls`\n\n- Change to a particular registry:\n\n`nrm use {{registry}}`\n\n- Show the response time for all registries:\n\n`nrm test`\n\n- Add a custom registry:\n\n`nrm add {{registry}} {{url}}`\n\n- Delete a registry:\n\n`nrm del {{registry}}`\n"},"od":{"Platform":"all","Class":"file editor","Brief":"Display file contents in octal, decimal or hexadecimal format.","MdText":"# od\n\n\u003e Display file contents in octal, decimal or hexadecimal format.\n\u003e Optionally display the byte offsets and/or printable representation for each line.\n\n- Display file using default settings: octal format, 8 bytes per line, byte offsets in octal, and duplicate lines replaced with `*`:\n\n`od {{path/to/file}}`\n\n- Display file in verbose mode, i.e. without replacing duplicate lines with `*`:\n\n`od -v {{path/to/file}}`\n\n- Display file in hexadecimal format (2-byte units), with byte offsets in decimal format:\n\n`od --format={{x}} --address-radix={{d}} -v {{path/to/file}}`\n\n- Display file in hexadecimal format (1-byte units), and 4 bytes per line:\n\n`od --format={{x1}} --width={{4}} -v {{path/to/file}}`\n\n- Display file in hexadecimal format along with its character representation, and do not print byte offsets:\n\n`od --format={{xz}} --address-radix={{n}} -v {{path/to/file}}`\n\n- Read only 100 bytes of a file starting from the 500th byte:\n\n`od --read-bytes {{100}} --skip-bytes={{500}} -v {{path/to/file}}`\n"},"odps-auth":{"Platform":"all","Class":"other cmds","Brief":"User authorities in ODPS (Open Data Processing Service).","MdText":"# odps auth\n\n\u003e User authorities in ODPS (Open Data Processing Service).\n\n- Add a user to the current project:\n\n`add user {{user_name}};`\n\n- Grant a set of authorities to a user:\n\n`grant {{action_list}} on {{object_type}} {{object_name}} to user {{user_name}};`\n\n- Show authorities of a user:\n\n`show grants for {{user_name}};`\n\n- Create a user role:\n\n`create role {{role_name}};`\n\n- Grant a set of authorities to a role:\n\n`grant {{action_list}} on {{object_type}} {{object_name}} to role {{role_name}};`\n\n- Describe authorities of a role:\n\n`desc role {{role_name}};`\n\n- Grant a role to a user:\n\n`grant {{role_name}} to {{user_name}};`\n"},"odps-resource":{"Platform":"all","Class":"other cmds","Brief":"Manage resources in ODPS (Open Data Processing Service).","MdText":"# odps resource\n\n\u003e Manage resources in ODPS (Open Data Processing Service).\n\n- Show resources in the current project:\n\n`list resources;`\n\n- Add file resource:\n\n`add file {{file_name}} as {{alias}};`\n\n- Add archive resource:\n\n`add archive {{archive.tar.gz}} as {{alias}};`\n\n- Add .jar resource:\n\n`add jar {{package.jar}};`\n\n- Add .py resource:\n\n`add py {{script.py}};`\n\n- Delete resource:\n\n`drop resource {{resource_name}};`\n"},"omf":{"Platform":"all","Class":"other cmds","Brief":"Oh My Fish, the Fishshell Framework.","MdText":"# omf\n\n\u003e Oh My Fish, the Fishshell Framework.\n\u003e Install packages to extend and modify the fish shell.\n\n- Install one or more packages:\n\n`omf install {{name}}`\n\n- List installed packages:\n\n`omf list`\n\n- List available themes:\n\n`omf theme`\n\n- Apply a theme:\n\n`omf theme {{name}}`\n\n- Remove a theme or package:\n\n`omf remove {{name}}`\n\n- Uninstall Oh My Fish:\n\n`omf destroy`\n"},"paci":{"Platform":"all","Class":"other cmds","Brief":"A lightweight and flexible package manager for bash scripts.","MdText":"# paci\n\n\u003e A lightweight and flexible package manager for bash scripts.\n\n- Update the list of available packages and versions (it's recommended to run this before other `paci` commands):\n\n`paci refresh`\n\n- Configure its behaviour:\n\n`paci configure`\n\n- Search for a given package:\n\n`paci search {{package}}`\n\n- Install a package:\n\n`paci install {{package}}`\n\n- Update a package:\n\n`paci update {{package}}`\n"},"pass":{"Platform":"all","Class":"other cmds","Brief":"Safely store and read passwords or other sensitive data easily.","MdText":"# pass\n\n\u003e Safely store and read passwords or other sensitive data easily.\n\u003e All data is GPG-encrypted, and managed with a git repository.\n\n- Initialize the storage using a gpg-id for encryption:\n\n`pass init {{gpg_id}}`\n\n- Save a new password (prompts you for the value without echoing it):\n\n`pass insert {{path/to/data}}`\n\n- Copy a password (first line of the data file) to the clipboard:\n\n`pass -c {{path/to/data}}`\n\n- List the whole store tree:\n\n`pass`\n\n- Generate a new random password with a given length, and copy it to the clipboard:\n\n`pass generate -c {{path/to/data}} {{num}}`\n\n- Run any git command against the underlying store repository:\n\n`pass git {{git_arguments}}`\n"},"paste":{"Platform":"all","Class":"file editor","Brief":"Merge lines of files.","MdText":"# paste\n\n\u003e Merge lines of files.\n\n- Join all the lines into a single line, using TAB as delimiter:\n\n`paste -s {{file}}`\n\n- Join all the lines into a single line, using the specified delimiter:\n\n`paste -s -d {{delimiter}} {{file}}`\n\n- Merge two files side by side, each in its column, using TAB as delimiter:\n\n`paste {{file1}} {{file2}}`\n\n- Merge two files side by side, each in its column, using the specified delimiter:\n\n`paste -d {{delimiter}} {{file1}} {{file2}}`\n\n- Merge two files, with lines added alternatively:\n\n`paste -d '\\n' {{file1}} {{file2}}`\n"},"pdflatex":{"Platform":"all","Class":"other cmds","Brief":"Compile a pdf document from LaTeX source files.","MdText":"# pdflatex\n\n\u003e Compile a pdf document from LaTeX source files.\n\n- Compile a pdf document:\n\n`pdflatex {{source.tex}}`\n\n- Compile a pdf document, halting on each error:\n\n`pdflatex -halt-on-error {{source.tex}}`\n"},"peerflix":{"Platform":"all","Class":"other cmds","Brief":"Stream video- or audio-based torrents to a media player.","MdText":"# peerflix\n\n\u003e Stream video- or audio-based torrents to a media player.\n\n- Stream the largest media file in a torrent:\n\n`peerflix \"{{torrent_url|magnet_link}}\"`\n\n- List all streamable files contained in a torrent (given as a magnet link):\n\n`peerflix \"{{magnet:?xt=urn:btih:0123456789abcdef0123456789abcdef01234567}}\" --list`\n\n- Stream the largest file in a torrent, given as a torrent URL, to VLC:\n\n`peerflix \"{{http://example.net/music.torrent}}\" --vlc`\n\n- Stream the largest file in a torrent to MPlayer, with subtitles:\n\n`peerflix \"{{torrent_url|magnet_link}}\" --mplayer --subtitles {{subtitle-file.srt}}`\n\n- Stream all files from a torrent to Airplay:\n\n`peerflix \"{{torrent_url|magnet_link}}\" --all --airplay`\n"},"pg_dump":{"Platform":"all","Class":"other cmds","Brief":"Extract a PostgreSQL database into a script file or other archive file.","MdText":"# pg_dump\n\n\u003e Extract a PostgreSQL database into a script file or other archive file.\n\n- Dump database into a SQL-script file:\n\n`pg_dump {{db_name}} \u003e {{output_file.sql}}`\n\n- Same as above, customize username:\n\n`pg_dump -U {{username}} {{db_name}} \u003e {{output_file.sql}}`\n\n- Same as above, customize host and port:\n\n`pg_dump -h {{host}} -p {{port}} {{db_name}} \u003e {{output_file.sql}}`\n\n- Dump a database into a custom-format archive file:\n\n`pg_dump -Fc {{db_name}} \u003e {{output_file.dump}}`\n\n- Dump only database data into an SQL-script file:\n\n`pg_dump -a {{db_name}} \u003e {{path/to/output_file.sql}}`\n\n- Dump only schema (data definitions) into an SQL-script file:\n\n`pg_dump -s {{db_name}} \u003e {{path/to/output_file.sql}}`\n"},"php":{"Platform":"all","Class":"other cmds","Brief":"PHP command line interface.","MdText":"# php\n\n\u003e PHP command line interface.\n\u003e Homepage: \u003chttps://php.net\u003e.\n\n- Parse and execute a php script:\n\n`php {{file}}`\n\n- Check syntax on (i.e. lint) a PHP script:\n\n`php -l {{file}}`\n\n- Run PHP interactively:\n\n`php -a`\n\n- Run PHP code (Notes: Don't use \u003c? ?\u003e tags; escape double quotes with backslash):\n\n`php -r \"{{code}}\"`\n\n- Start a PHP built-in web server in the current directory:\n\n`php -S {{host:port}}`\n\n- Get a list of installed PHP extensions:\n\n`php -m`\n"},"php-yii":{"Platform":"all","Class":"other cmds","Brief":"Yii Framework's command line interface.","MdText":"# php yii\n\n\u003e Yii Framework's command line interface.\n\n- Display a list of all available commands:\n\n`php yii {{help}}`\n\n- Start PHP's built-in web server for the current Yii application:\n\n`php yii {{serve}}`\n\n- Generate a controller, views and related files for the CRUD actions on the specified model class:\n\n`php yii {{gii/crud}} --modelClass={{ModelName}} --controllerClass={{ControllerName}}`\n"},"phpenv":{"Platform":"all","Class":"other cmds","Brief":"A PHP version manager for development purposes.","MdText":"# phpenv\n\n\u003e A PHP version manager for development purposes.\n\n- Install a PHP version globally:\n\n`phpenv install {{version}}`\n\n- Refresh shim files for all PHP binaries known to `phpenv`:\n\n`phpenv rehash`\n\n- List all installed PHP versions:\n\n`phpenv versions`\n\n- Display the currently active PHP version:\n\n`phpenv version`\n\n- Set the global PHP version:\n\n`phpenv global {{version}}`\n\n- Set the local PHP version, which overrides the global version:\n\n`phpenv local {{version}}`\n\n- Unset the local PHP version:\n\n`phpenv local --unset`\n"},"phpize":{"Platform":"all","Class":"other cmds","Brief":"Prepare a PHP extension for compiling.","MdText":"# phpize\n\n\u003e Prepare a PHP extension for compiling.\n\n- Prepare the PHP extension in the current directory for compiling:\n\n`phpize`\n\n- Delete files previously created by phpize:\n\n`phpize --clean`\n"},"phpunit":{"Platform":"all","Class":"other cmds","Brief":"PHPUnit command-line test runner.","MdText":"# phpunit\n\n\u003e PHPUnit command-line test runner.\n\n- Run tests in the current directory. Note: Expects you to have a 'phpunit.xml':\n\n`phpunit`\n\n- Run tests in a specific file:\n\n`phpunit {{path/to/TestFile.php}}`\n\n- Run tests annotated with the given group:\n\n`phpunit --group {{name}}`\n\n- Run tests and generate a coverage report in HTML:\n\n`phpunit --coverage-html {{directory}}`\n"},"picard":{"Platform":"all","Class":"other cmds","Brief":"Next generation MusicBrainz tagging application.","MdText":"# picard\n\n\u003e Next generation MusicBrainz tagging application.\n\n- Start Picard:\n\n`picard`\n\n- Open a set of files:\n\n`picard {{path/to/file1.mp3}} {{path/to/file2.mp3}}`\n\n- Display the version of Picard installed:\n\n`picard --long-version`\n"},"ping":{"Platform":"all","Class":"network comm","Brief":"Send ICMP ECHO_REQUEST packets to network hosts.","MdText":"# ping\n\n\u003e Send ICMP ECHO_REQUEST packets to network hosts.\n\n- Ping host:\n\n`ping {{host}}`\n\n- Ping a host only a specific number of times:\n\n`ping -c {{count}} {{host}}`\n\n- Ping host, specifying the interval in seconds between requests (default is 1 second):\n\n`ping -i {{seconds}} {{host}}`\n\n- Ping host without trying to lookup symbolic names for addresses:\n\n`ping -n {{host}}`\n\n- Ping host and ring the bell when a packet is received (if your terminal supports it):\n\n`ping -a {{host}}`\n\n- Also display a message if no response was received:\n\n`ping -O {{host}}`\n"},"ping6":{"Platform":"all","Class":"network comm","Brief":"Send ICMP ECHO_REQUEST packets to network hosts via IPv6 address.","MdText":"# ping6\n\n\u003e Send ICMP ECHO_REQUEST packets to network hosts via IPv6 address.\n\n- Ping a host:\n\n`ping6 {{host}}`\n\n- Ping a host only a specific number of times:\n\n`ping6 -c {{count}} {{host}}`\n\n- Ping a host, specifying the interval in seconds between requests (default is 1 second):\n\n`ping6 -i {{seconds}} {{host}}`\n\n- Ping a host without trying to lookup symbolic names for addresses:\n\n`ping6 -n {{host}}`\n\n- Ping a host and ring the bell when a packet is received (if your terminal supports it):\n\n`ping6 -a {{host}}`\n"},"pkill":{"Platform":"all","Class":"system man","Brief":"Signal process by name.","MdText":"# pkill\n\n\u003e Signal process by name.\n\u003e Mostly used for stopping processes.\n\n- Kill all processes which match:\n\n`pkill -9 {{process_name}}`\n\n- Kill all processes which match their full command instead of just the process name:\n\n`pkill -9 -f \"{{command_name}}\"`\n\n- Send SIGUSR1 signal to processes which match:\n\n`pkill -USR1 {{process_name}}`\n"},"play":{"Platform":"all","Class":"other cmds","Brief":"Audio player of SoX - Sound eXchange.","MdText":"# play\n\n\u003e Audio player of SoX - Sound eXchange.\n\u003e Plays any audio from the command line, with audio formats identified by the extension.\n\n- Play the given audio file:\n\n`play {{audiofile}}`\n\n- Play the given audio files:\n\n`play {{audiofile1}} {{audiofile2}}`\n\n- Play the given audio at twice the speed:\n\n`play {{audiofile}} speed 2.0`\n\n- Play the given audio in reverse:\n\n`play {{audiofile}} reverse`\n"},"pngcrush":{"Platform":"all","Class":"other cmds","Brief":"PNG image compression utility.","MdText":"# pngcrush\n\n\u003e PNG image compression utility.\n\n- Compress a PNG file:\n\n`pngcrush {{in.png}} {{out.png}}`\n\n- Compress all PNGs and output to directory:\n\n`pngcrush -d {{path/to/output}} *.png`\n\n- Compress PNG file with all 114 available algorithms and pick the best result:\n\n`pngcrush -rem allb -brute -reduce {{in.png}} {{out.png}}`\n"},"postcss":{"Platform":"all","Class":"other cmds","Brief":"PostCSS is a tool for transforming styles with JS plugins.","MdText":"# postcss\n\n\u003e PostCSS is a tool for transforming styles with JS plugins.\n\u003e Homepage: \u003chttps://postcss.org\u003e.\n\n- Parse and transform a CSS file:\n\n`postcss {{path/to/file}}`\n\n- Parse and transform a CSS file and output to a specific file:\n\n`postcss {{path/to/file}} --output {{path/to/file}}`\n\n- Parse and transform a CSS file and output to a specific directory:\n\n`postcss {{path/to/file}} --dir {{path/to/directory}}`\n\n- Parse and transform a CSS file in-place:\n\n`postcss {{path/to/file}} --replace`\n\n- Specify a custom PostCSS parser:\n\n`postcss {{path/to/file}} --parser {{parser}}`\n\n- Specify a custom PostCSS syntax:\n\n`postcss {{path/to/file}} --syntax {{syntax}}`\n\n- Watch for changes to a CSS file:\n\n`postcss {{path/to/file}} --watch`\n\n- Display available options and examples:\n\n`postcss --help`\n"},"progpilot":{"Platform":"all","Class":"other cmds","Brief":"A PHP static analysis tool for detecting security vulnerabilities.","MdText":"# progpilot\n\n\u003e A PHP static analysis tool for detecting security vulnerabilities.\n\n- Analyse the current directory:\n\n`progpilot`\n\n- Analyse a specific file or directory:\n\n`progpilot {{path/to/file_or_directory}}`\n\n- Specify a custom configuration file:\n\n`progpilot --configuration {{path/to/configuration.yml}}`\n"},"psgrep":{"Platform":"all","Class":"system man","Brief":"Search through processes with grep.","MdText":"# psgrep\n\n\u003e Search through processes with grep.\n\n- Find process lines containing a specific string:\n\n`psgrep {{process_name}}`\n\n- Find process lines containing a specific string, do not include headers:\n\n`psgrep -n {{process_name}}`\n\n- Search using simplified format (PID, user, command):\n\n`psgrep -s {{process_name}}`\n"},"pssh":{"Platform":"all","Class":"system man","Brief":"Parallel SSH program.","MdText":"# pssh\n\n\u003e Parallel SSH program.\n\n- Run a command on two hosts, and print its output on each server inline:\n\n`pssh -i -H \"{{host1}} {{host2}}\" {{hostname -i}}`\n\n- Run a command and save the output to separate files:\n\n`pssh -H {{host1}} -H {{host2}} -o {{path/to/output_dir}} {{hostname -i}}`\n\n- Run a command on multiple hosts, specified in a new-line separated file:\n\n`pssh -i -h {{path/to/hosts_file}} {{hostname -i}}`\n\n- Run a command as root (this asks for the root password):\n\n`pssh -i -h {{path/to/hosts_file}} -A -l {{root_username}} {{hostname -i}}`\n\n- Run a command with extra SSH arguments:\n\n`pssh -i -h {{path/to/hosts_file}} -x \"{{-O VisualHostKey=yes}}\" {{hostname -i}}`\n\n- Run a command limiting the number of parallel connections to 10:\n\n`pssh -i -h {{path/to/hosts_file}} -p {{10}} '{{cd dir; ./script.sh; exit}}'`\n"},"pup":{"Platform":"all","Class":"other cmds","Brief":"Command line HTML parsing tool.","MdText":"# pup\n\n\u003e Command line HTML parsing tool.\n\n- Transform a raw HTML file into a cleaned, indented, and colored format:\n\n`cat {{index.html}} | pup --color`\n\n- Filter HTML by element tag name:\n\n`cat {{index.html}} | pup '{{tag}}'`\n\n- Filter HTML by id:\n\n`cat {{index.html}} | pup '{{div#id}}'`\n\n- Filter HTML by attribute value:\n\n`cat {{index.html}} | pup '{{input[type=\"text\"]}}'`\n\n- Print all text from the filtered HTML elements and their children:\n\n`cat {{index.html}} | pup '{{div}} text{}'`\n\n- Print HTML as JSON:\n\n`cat {{index.html}} | pup '{{div}} json{}'`\n"},"pwd":{"Platform":"all","Class":"file man","Brief":"Print name of current/working directory.","MdText":"# pwd\n\n\u003e Print name of current/working directory.\n\n- Print the current directory:\n\n`pwd`\n\n- Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path):\n\n`pwd -P`\n"},"r":{"Platform":"all","Class":"other cmds","Brief":"R language interpreter.","MdText":"# r\n\n\u003e R language interpreter.\n\n- Start an R interactive shell (REPL):\n\n`R`\n\n- Check R version:\n\n`R --version`\n\n- Execute a file:\n\n`R -f {{file.R}}`\n"},"rails":{"Platform":"all","Class":"other cmds","Brief":"A server-side MVC framework written in Ruby.","MdText":"# rails\n\n\u003e A server-side MVC framework written in Ruby.\n\u003e Homepage: \u003chttps://guides.rubyonrails.org/command_line.html\u003e.\n\n- Create a new rails project:\n\n`rails new \"{{project_name}}\"`\n\n- Start local server for current project on port 3000:\n\n`rails server`\n\n- Start local server for current project on a specified port:\n\n`rails server -p \"{{port}}\"`\n\n- Open console to interact with application from command line:\n\n`rails console`\n\n- Check current version of rails:\n\n`rails --version`\n"},"rbt":{"Platform":"all","Class":"other cmds","Brief":"RBTools is a set of command line tools for working with Review Board and RBCommons.","MdText":"# rbt\n\n\u003e RBTools is a set of command line tools for working with Review Board and RBCommons.\n\u003e Homepage: \u003chttps://www.reviewboard.org/docs/rbtools/dev/\u003e.\n\n- Post changes to Review Board:\n\n`rbt post {{change_number}}`\n\n- Display the diff that will be sent to Review Board:\n\n`rbt diff`\n\n- Land a change in a local branch or on a review request:\n\n`rbt land {{branch_name}}`\n\n- Patch your tree with a change on a review request:\n\n`rbt patch {{review_request_id}}`\n\n- Set up RBTool to talk to a repository:\n\n`rbt setup-repo`\n"},"rdfind":{"Platform":"all","Class":"file man","Brief":"Find files with duplicate content and get rid of them.","MdText":"# rdfind\n\n\u003e Find files with duplicate content and get rid of them.\n\n- Identify all duplicates in a given directory and output a summary:\n\n`rdfind -dryrun true {{path/to/directory}}`\n\n- Replace all duplicates with hardlinks:\n\n`rdfind -makehardlinks true {{path/to/directory}}`\n\n- Replace all duplicates with symlinks/soft links:\n\n`rdfind -makesymlinks true {{path/to/directory}}`\n\n- Delete all duplicates and do not ignore empty files:\n\n`rdfind -deleteduplicates true -ignoreempty false {{path/to/directory}}`\n"},"readlink":{"Platform":"all","Class":"file man","Brief":"Follow symlinks and get symlink information.","MdText":"# readlink\n\n\u003e Follow symlinks and get symlink information.\n\n- Get the actual file to which the symlink points:\n\n`readlink {{filename}}`\n\n- Get the absolute path to a file:\n\n`readlink -f {{filename}}`\n"},"rename":{"Platform":"all","Class":"file man","Brief":"Renames multiple files.","MdText":"# rename\n\n\u003e Renames multiple files.\n\n- Rename files using a Perl Common Regular Expression (substitute 'foo' with 'bar' wherever found):\n\n`rename {{'s/foo/bar/'}} {{*}}`\n\n- Dry-run - display which renames would occur without performing them:\n\n`rename -n {{'s/foo/bar/'}} {{*}}`\n\n- Force renaming even if the operation would overwrite existing files:\n\n`rename -f {{'s/foo/bar/'}} {{*}}`\n\n- Convert filenames to lower case (use `-f` in case-insensitive filesystems to prevent \"already exists\" errors):\n\n`rename 'y/A-Z/a-z/' {{*}}`\n\n- Replace whitespace with underscores:\n\n`rename 's/\\s+/_/g' {{*}}`\n"},"repren":{"Platform":"all","Class":"file man","Brief":"Multi-pattern string replacement and file renaming tool.","MdText":"# repren\n\n\u003e Multi-pattern string replacement and file renaming tool.\n\u003e Homepage: \u003chttps://github.com/jlevy/repren\u003e.\n\n- Do a dry-run renaming a directory of pngs with a literal string replacement:\n\n`repren --dry-run --rename --literal --from '{{find_string}}' --to '{{replacement_string}}' {{*.png}}`\n\n- Do a dry-run renaming a directory of jpegs with a regular expression:\n\n`repren --rename --dry-run --from '{{regular_expression}}' --to '{{replacement_string}}' {{*.jpg}} {{*.jpeg}}`\n\n- Do a find-and-replace on the contents of a directory of csv files:\n\n`repren --from '{{([0-9]+) example_string}}' --to '{{replacement_string \\1}}' {{*.csv}}`\n\n- Do both a find-and-replace and a rename operation at the same time, using a pattern file:\n\n`repren --patterns {{path/to/patfile.ext}} --full {{*.txt}}`\n\n- Do a case-insensitive rename:\n\n`repren --rename --insensitive --patterns {{path/to/patfile.ext}} *`\n"},"restic":{"Platform":"all","Class":"system man","Brief":"Fast, secure, efficient backup program.","MdText":"# restic\n\n\u003e Fast, secure, efficient backup program.\n\n- Initialize a backup repository in the specified local directory:\n\n`restic init -r {{path/to/repository}}`\n\n- Backup a directory to the repository:\n\n`restic -r {{path/to/repository}} backup {{path/to/directory}}`\n\n- Show backup snapshots currently stored in the repository:\n\n`restic -r {{path/to/repository}} snapshots`\n\n- Restore a specific backup snapshot to a target directory:\n\n`restic -r {{path/to/repository}} restore {{snapshot_id}} {{path/to/target}}`\n\n- Restore a specific path from a specific backup to a target directory:\n\n`restic -r {{path/to/repository}} --include {{path/to/restore}} --target {{path/to/target}} restore {{snapshot_id}}`\n\n- Clean up the repository and keep only the most recent snapshot of each unique backup:\n\n`restic forget --keep-last 1 --prune`\n"},"rsstail":{"Platform":"all","Class":"network comm","Brief":"`tail` for RSS feeds.","MdText":"# rsstail\n\n\u003e `tail` for RSS feeds.\n\n- Show the feed of a given url and wait for new entries appearing at the bottom:\n\n`rsstail -u {{url}}`\n\n- Show the feed in reverse chronological order (newer at the bottom):\n\n`rsstail -r -u {{url}}`\n\n- Include publication date and link:\n\n`rsstail -pl -u {{url}}`\n\n- Set update interval:\n\n`rsstail -u {{url}} -i {{interval_in_seconds}}`\n\n- Show feed and exit:\n\n`rsstail -1 -u {{url}}`\n"},"rtv":{"Platform":"all","Class":"other cmds","Brief":"Reddit Terminal Viewer.","MdText":"# rtv\n\n\u003e Reddit Terminal Viewer.\n\u003e Use arrow keys to navigate. Right and Left to view and return from a submission, respectively.\n\n- Open the front page:\n\n`/front`\n\n- Open a subreddit:\n\n`/r/{{subreddit_name}}`\n\n- Expand/collapse comments:\n\n`[space]`\n\n- Open link:\n\n`o`\n\n- Login:\n\n`u`\n\n- Open the help screen:\n\n`?`\n"},"rvm":{"Platform":"all","Class":"other cmds","Brief":"A tool for easily installing, managing, and working with multiple ruby environments.","MdText":"# rvm\n\n\u003e A tool for easily installing, managing, and working with multiple ruby environments.\n\n- Install one or more space-separated versions of Ruby:\n\n`rvm install {{version(s)}}`\n\n- Display a list of installed versions:\n\n`rvm list`\n\n- Use a specific version of Ruby:\n\n`rvm use {{version}}`\n\n- Set the default Ruby version:\n\n`rvm --default use {{version}}`\n\n- Upgrade a version of Ruby to a new version:\n\n`rvm upgrade {{current_version}} {{new_version}}`\n\n- Uninstall a version of Ruby and keep its sources:\n\n`rvm uninstall {{version}}`\n\n- Remove a version of Ruby and its sources:\n\n`rvm remove {{version}}`\n\n- Show specific dependencies for your OS:\n\n`rvm requirements`\n"},"salt-call":{"Platform":"all","Class":"other cmds","Brief":"Invoke salt locally on a salt minion.","MdText":"# salt-key\n\n\u003e Invoke salt locally on a salt minion.\n\n- Perform a highstate on this minion:\n\n`salt-call state.highstate`\n\n- Perform a highstate dry-run, compute all changes but don't actually perform them:\n\n`salt-call state.highstate test=true`\n\n- Perform a highstate with verbose debugging output:\n\n`salt-call -l debug state.highstate`\n\n- List this minion's grains:\n\n`salt-call grains.items`\n"},"salt-run":{"Platform":"all","Class":"other cmds","Brief":"Frontend for executing salt-runners on minions.","MdText":"# salt-run\n\n\u003e Frontend for executing salt-runners on minions.\n\n- Show status of all minions:\n\n`salt-run manage.status`\n\n- Show all minions which are disconnected:\n\n`salt-run manage.up`\n"},"samtools":{"Platform":"all","Class":"other cmds","Brief":"Tools for handling high-throughput sequencing (genomics) data.","MdText":"# samtools\n\n\u003e Tools for handling high-throughput sequencing (genomics) data.\n\u003e Used for reading/writing/editing/indexing/viewing of data in SAM/BAM/CRAM format.\n\n- Convert a SAM input file to BAM stream and save to file:\n\n`samtools view -S -b {{input.sam}} \u003e {{output.bam}}`\n\n- Take input from stdin (-) and print the SAM header and any reads overlapping a specific region to stdout:\n\n`{{other_command}} | samtools view -h - chromosome:start-end`\n\n- Sort file and save to BAM (the output format is automatically determined from the output file's extension):\n\n`samtools sort {{input}} -o {{output.bam}}`\n\n- Index a sorted BAM file (creates {{sorted_input.bam.bai}}):\n\n`samtools index {{sorted_input.bam}}`\n\n- Print alignment statistics about a file:\n\n`samtools flagstat {{sorted_input}}`\n\n- Count alignments to each index (chromosome / contig):\n\n`samtools idxstats {{sorted_indexed_input}}`\n\n- Merge multiple files:\n\n`samtools merge {{output}} {{input1 input2 …}}`\n\n- Split input file according to read groups:\n\n`samtools split {{merged_input}}`\n"},"sc-im":{"Platform":"all","Class":"other cmds","Brief":"A curses based, vim-like spreadsheet calculator.","MdText":"# SC-IM\n\n\u003e A curses based, vim-like spreadsheet calculator.\n\u003e Use hjkl or arrow keys to navigate.\n\n- Start SC-IM:\n\n`scim {{file_name}}.csv`\n\n- Enter a string into the current cell:\n\n`\u003c or \u003e`\n\n- Enter a numeric constant into the current cell:\n\n`=`\n\n- Edit string in the current cell:\n\n`E`\n\n- Edit number in the current cell:\n\n`e`\n\n- Center align the current cell:\n\n`|`\n"},"scala":{"Platform":"all","Class":"other cmds","Brief":"Scala application launcher and interactive interpreter.","MdText":"# scala\n\n\u003e Scala application launcher and interactive interpreter.\n\n- Start a Scala interactive shell (REPL):\n\n`scala`\n\n- Execute a Scala script:\n\n`scala {{script.scala}}`\n\n- Execute a .jar program:\n\n`scala {{filename.jar}}`\n\n- Execute a single Scala command in the command line:\n\n`scala -e {{command}}`\n"},"scheme":{"Platform":"all","Class":"other cmds","Brief":"MIT Scheme language interperter and REPL (interactive shell).","MdText":"# scheme\n\n\u003e MIT Scheme language interperter and REPL (interactive shell).\n\n- Open an interactive shell (REPL):\n\n`scheme`\n\n- Run a scheme program (with no REPL output):\n\n`scheme --quiet \u003c {{script.scm}}`\n\n- Load a scheme program into the REPL:\n\n`scheme --load {{script.scm}}`\n\n- Load scheme expressions into the REPL:\n\n`scheme --eval {{\"(define foo 'x)\"}}`\n\n- Open the REPL in quiet mode:\n\n`scheme --quiet`\n"},"scp":{"Platform":"all","Class":"file man","Brief":"Secure copy.","MdText":"# scp\n\n\u003e Secure copy.\n\u003e Copy files between hosts using Secure Copy Protocol over SSH.\n\n- Copy a local file to a remote host:\n\n`scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}`\n\n- Copy a file from a remote host to a local directory:\n\n`scp {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}`\n\n- Recursively copy the contents of a directory from a remote host to a local directory:\n\n`scp -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}`\n\n- Copy a file between two remote hosts transferring through the local host:\n\n`scp -3 {{host1}}:{{path/to/remote_file}} {{host2}}:{{path/to/remote_directory}}`\n\n- Use a specific username when connecting to the remote host:\n\n`scp {{path/to/local_file}} {{remote_username}}@{{remote_host}}:{{path/to/remote_directory}}`\n\n- Use a specific ssh private key for authentication with the remote host:\n\n`scp -i {{~/.ssh/private_key}} {{local_file}} {{remote_host}}:{{/path/remote_file}}`\n"},"scrapy":{"Platform":"all","Class":"other cmds","Brief":"Web-crawling framework.","MdText":"# scrapy\n\n\u003e Web-crawling framework.\n\n- Create a project:\n\n`scrapy startproject {{project_name}}`\n\n- Create a spider (in project directory):\n\n`scrapy genspider {{spider_name}} {{website_domain}}`\n\n- Edit spider (in project directory):\n\n`scrapy edit {{spider_name}}`\n\n- Run spider (in project directory):\n\n`scrapy crawl {{spider_name}}`\n\n- Fetch a webpage as scrapy sees it and print source in stdout:\n\n`scrapy fetch {{url}}`\n\n- Open a webpage in the default browser as scrapy sees it (disable javascript for extra fidelity):\n\n`scrapy view {{url}}`\n\n- Open scrapy shell for url, which allows interaction with the page source in python shell (or ipython if available):\n\n`scrapy shell {{url}}`\n"},"sd":{"Platform":"all","Class":"other cmds","Brief":"`sd` is an intuitive find \u0026 replace CLI.","MdText":"# sd\n\n\u003e `sd` is an intuitive find \u0026 replace CLI.\n\n- Trim some whitespace using regex:\n\n`{{echo 'lorem ipsum 23   '}} | sd '\\s+$' ''`\n\n- Replace words using capture groups:\n\n`{{echo 'cargo +nightly watch'}} | sd '(\\w+)\\s+\\+(\\w+)\\s+(\\w+)' 'cmd: $1, channel: $2, subcmd: $3'`\n\n- Find and replace in a file:\n\n`sd -i {{'window.fetch'}} {{'fetch'}} {{http.js}}`\n\n- Find and replace across a project:\n\n`sd -i {{'from \"react\"'}} {{'from \"preact\"'}} $(find . -type f)`\n"},"sdk":{"Platform":"all","Class":"other cmds","Brief":"Tool for managing parallel versions of multiple Software Development Kits.","MdText":"# sdk\n\n\u003e Tool for managing parallel versions of multiple Software Development Kits.\n\u003e Supports Java, Groovy, Scala, Kotlin, Gradle, Maven, Vert.x and many others.\n\n- Install a specific version of Gradle:\n\n`sdk install {{gradle}} {{gradle_version}}`\n\n- Switch to a specific version of Gradle:\n\n`sdk use {{gradle}} {{gradle_version}}`\n\n- Check current Gradle version:\n\n`sdk current {{gradle}}`\n\n- List all Software Development Kits available to install:\n\n`sdk list`\n\n- Update Gradle to the latest version:\n\n`sdk upgrade {{gradle}}`\n\n- Uninstall a particular version of Gradle:\n\n`sdk rm {{gradle}} {{gradle_version}}`\n"},"seq":{"Platform":"all","Class":"other cmds","Brief":"Output a sequence of numbers to stdout.","MdText":"# seq\n\n\u003e Output a sequence of numbers to stdout.\n\n- Sequence from 1 to 10:\n\n`seq 10`\n\n- Every 3rd number from 5 to 20:\n\n`seq 5 3 20`\n\n- Separate the output with a space instead of a newline:\n\n`seq -s \" \" 5 3 20`\n\n- Format output width to a minimum of 4 digits padding with zeros as necessary:\n\n`seq -f \"%04g\" 5 3 20`\n"},"sha1sum":{"Platform":"all","Class":"other cmds","Brief":"Calculate SHA1 cryptographic checksums.","MdText":"# sha1sum\n\n\u003e Calculate SHA1 cryptographic checksums.\n\n- Calculate the SHA1 checksum for a file:\n\n`sha1sum {{filename1}}`\n\n- Calculate SHA1 checksums for multiple files:\n\n`sha1sum {{filename1}} {{filename2}}`\n\n- Read a file of SHA1 sums and verify all files have matching checksums:\n\n`sha1sum -c {{filename.sha1}}`\n"},"sha224sum":{"Platform":"all","Class":"other cmds","Brief":"Calculate SHA224 cryptographic checksums.","MdText":"# sha224sum\n\n\u003e Calculate SHA224 cryptographic checksums.\n\n- Calculate the SHA224 checksum for a file:\n\n`sha224sum {{filename1}}`\n\n- Calculate SHA224 checksums for multiple files:\n\n`sha224sum {{filename1}} {{filename2}}`\n\n- Read a file of SHA224 sums and verify all files have matching checksums:\n\n`sha224sum -c {{filename.sha224}}`\n"},"sha512sum":{"Platform":"all","Class":"other cmds","Brief":"Calculate SHA512 cryptographic checksums.","MdText":"# sha512sum\n\n\u003e Calculate SHA512 cryptographic checksums.\n\n- Calculate the SHA512 checksum for a file:\n\n`sha512sum {{filename1}}`\n\n- Calculate SHA512 checksums for multiple files:\n\n`sha512sum {{filename1}} {{filename2}}`\n\n- Read a file of SHA512 sums and verify all files have matching checksums:\n\n`sha512sum -c {{filename.sha512}}`\n"},"shards":{"Platform":"all","Class":"other cmds","Brief":"Dependency management tool for the Crystal language.","MdText":"# shards\n\n\u003e Dependency management tool for the Crystal language.\n\n- Create a skeleton shard.yml file:\n\n`shards init`\n\n- Install dependencies from a shard.yml file:\n\n`shards install`\n\n- Update all dependencies:\n\n`shards update`\n\n- List all installed dependencies:\n\n`shards list`\n\n- List version of dependency:\n\n`shards version {{path/to/dependency_directory}}`\n"},"shc":{"Platform":"all","Class":"other cmds","Brief":"Generic shell script compiler.","MdText":"# shc\n\n\u003e Generic shell script compiler.\n\n- Compile a shell script:\n\n`shc -f {{script}}`\n\n- Compile a shell script and specify an output binary file:\n\n`shc -f {{script}} -o {{binary}}`\n\n- Compile a shell script and set an expiration date for the executable:\n\n`shc -f {{script}} -e {{dd/mm/yyyy}}`\n\n- Compile a shell script and set a message to display upon expiration:\n\n`shc -f {{script}} -e {{dd/mm/yyyy}} -m {{\"Please contact your provider\"}}`\n"},"shred":{"Platform":"all","Class":"file man","Brief":"Overwrite files to securely delete data.","MdText":"# shred\n\n\u003e Overwrite files to securely delete data.\n\n- Overwrite a file:\n\n`shred {{file}}`\n\n- Overwrite a file, leaving zeroes instead of random data:\n\n`shred --zero {{file}}`\n\n- Overwrite a file 25 times:\n\n`shred -n25 {{file}}`\n\n- Overwrite a file and remove it:\n\n`shred --remove {{file}}`\n"},"shuf":{"Platform":"all","Class":"other cmds","Brief":"Generate random permutations.","MdText":"# shuf\n\n\u003e Generate random permutations.\n\n- Randomize the order of lines in a file and output the result:\n\n`shuf {{filename}}`\n\n- Only output the first 5 entries of the result:\n\n`shuf -n {{5}} {{filename}}`\n\n- Write the output to another file:\n\n`shuf {{filename}} -o {{output_filename}}`\n\n- Generate random numbers in range:\n\n`shuf -i {{1-10}}`\n"},"singularity":{"Platform":"all","Class":"other cmds","Brief":"Manage Singularity containers and images.","MdText":"# singularity\n\n\u003e Manage Singularity containers and images.\n\n- Download a remote image:\n\n`singularity pull --name {{container.simg}} {{shub://vsoch/hello-world}}`\n\n- Rebuild a remote image using latest Singularity image format:\n\n`singularity build {{container.simg}} {{docker://godlovedc/lolcow}}`\n\n- Start a container from an image and get a shell inside of it:\n\n`singularity shell {{container.simg}}`\n\n- Start a container from an image and run a command:\n\n`singularity exec {{container.simg}} {{command}}`\n\n- Start a container from an image and execute the internal runscript:\n\n`singularity run {{container.simg}}`\n\n- Build a singularity image from a recipe file:\n\n`sudo singularity build {{container.simg}} {{recipe}}`\n"},"skaffold":{"Platform":"all","Class":"other cmds","Brief":"A tool that facilitates continuous development for Kubernetes applications.","MdText":"# skaffold\n\n\u003e A tool that facilitates continuous development for Kubernetes applications.\n\u003e Homepage: \u003chttps://skaffold.dev\u003e.\n\n- Build the artifacts:\n\n`skaffold build -f {{skaffold.yaml}}`\n\n- Build and deploy your app every time your code changes:\n\n`skaffold dev -f {{skaffold.yaml}}`\n\n- Run a pipeline file:\n\n`skaffold run -f {{skaffold.yaml}}`\n\n- Run a diagnostic on Skaffold:\n\n`skaffold diagnose -f {{skaffold.yaml}}`\n\n- Deploy the artifacts:\n\n`skaffold deploy -f {{skaffold.yaml}}`\n"},"sl":{"Platform":"all","Class":"other cmds","Brief":"Steam locomotive running through your terminal.","MdText":"# sl\n\n\u003e Steam locomotive running through your terminal.\n\n- Let a steam locomotive run through your terminal:\n\n`sl`\n\n- The train burns, people scream:\n\n`sl -a`\n\n- Let the train fly:\n\n`sl -F`\n\n- Make the train little:\n\n`sl -l`\n\n- Let the user exit (CTRL + C):\n\n`sl -e`\n"},"slackcat":{"Platform":"all","Class":"other cmds","Brief":"Utility for passing files and command output to Slack.","MdText":"# slackcat\n\n\u003e Utility for passing files and command output to Slack.\n\n- Post a file to Slack:\n\n`slackcat --channel {{channel_name}} {{path/to/file}}`\n\n- Post a file to Slack with a custom filename:\n\n`slackcat --channel {{channel_name}} --filename={{filename}} {{path/to/file}}`\n\n- Pipe command output to Slack as a text snippet:\n\n`{{command}} | slackcat --channel {{channel_name}} --filename={{snippet_name}}`\n\n- Stream command output to Slack continuously:\n\n`{{command}} | slackcat --channel {{channel_name}} --stream`\n"},"slimrb":{"Platform":"all","Class":"other cmds","Brief":"Convert Slim files to HTML.","MdText":"# slimrb\n\n\u003e Convert Slim files to HTML.\n\n- Convert a Slim file to HTML:\n\n`slimrb {{input.slim}} {{output.html}}`\n\n- Convert a Slim file and output to prettified HTML:\n\n`slimrb --pretty {{input.slim}} {{output.html}}`\n\n- Convert a Slim file to ERB:\n\n`slimrb --erb {{input.slim}} {{output.erb}}`\n"},"smartctl":{"Platform":"all","Class":"other cmds","Brief":"View a disk's SMART data and other information.","MdText":"# smartctl\n\n\u003e View a disk's SMART data and other information.\n\u003e More information: \u003chttps://en.wikipedia.org/wiki/S.M.A.R.T.\u003e.\n\n- View SMART health summary:\n\n`sudo smartctl --health {{/dev/sda}}`\n\n- View device information:\n\n`sudo smartctl --info {{/dev/sda}}`\n\n- Begin a short self-test:\n\n`sudo smartctl --test short {{/dev/sda}}`\n\n- View current/last self-test status and other SMART capabilities:\n\n`sudo smartctl --capabilities {{/dev/sda}}`\n\n- View SMART self-test log (if supported):\n\n`sudo smartctl --log selftest {{/dev/sda}}`\n"},"source":{"Platform":"all","Class":"system man","Brief":"Execute commands from a file in the current shell.","MdText":"# source\n\n\u003e Execute commands from a file in the current shell.\n\n- Evaluate contents of a given file:\n\n`source {{path/to/file}}`\n"},"spark":{"Platform":"all","Class":"other cmds","Brief":"The Laravel Spark command line tool.","MdText":"# spark\n\n\u003e The Laravel Spark command line tool.\n\u003e Homepage: \u003chttps://spark.laravel.com\u003e.\n\n- Register your API token:\n\n`spark register {{token}}`\n\n- Display the currently registered API token:\n\n`spark token`\n\n- Create a new Spark project:\n\n`spark new {{project_name}}`\n\n- Create a new Spark project with Braintree stubs:\n\n`spark new {{project_name}} --braintree`\n\n- Create a new Spark project with team based billing stubs:\n\n`spark new {{project_name}} --team-billing`\n"},"spatial":{"Platform":"all","Class":"other cmds","Brief":"A set of commands for managing and developing SpatialOS projects.","MdText":"# spatial\n\n\u003e A set of commands for managing and developing SpatialOS projects.\n\n- Run this when you use a project for the first time:\n\n`spatial worker build`\n\n- Build workers for local deployment on Unity on macOS:\n\n`spatial worker build --target=development --target=Osx`\n\n- Build workers for local deployment on Unreal on Windows:\n\n`spatial worker build --target=local --target=Windows`\n\n- Deploy locally:\n\n`spatial local launch {{launch_config}} --snapshot={{snapshot_file}}`\n\n- Launch a local worker to connect to your local deployment:\n\n`spatial local worker launch {{worker_type}} {{launch_config}}`\n\n- Upload an assembly to use for cloud deployments:\n\n`spatial cloud upload {{assembly_name}}`\n\n- Launch a cloud deployment:\n\n`spatial cloud launch {{assembly_name}} {{launch_config}} {{deployment_name}}`\n\n- Clean worker directories:\n\n`spatial worker clean`\n"},"spike":{"Platform":"all","Class":"other cmds","Brief":"A fully featured static website generator written in JavaScript.","MdText":"# spike\n\n\u003e A fully featured static website generator written in JavaScript.\n\n- Create a new project using the default template:\n\n`spike new {{project_name}}`\n\n- Compile your project, watch for changes, and auto-reload the browser:\n\n`spike watch`\n\n- Compile your project once to the \"public\" directory:\n\n`spike compile`\n\n- Remove the output directory:\n\n`spike clean`\n"},"sqlmap":{"Platform":"all","Class":"other cmds","Brief":"Detect and exploit SQL injection flaws.","MdText":"# sqlmap\n\n\u003e Detect and exploit SQL injection flaws.\n\n- Run sqlmap against a single target URL:\n\n`python sqlmap.py -u {{\"http://www.target.com/vuln.php?id=1\"}}`\n\n- Send data in a POST request (`--data` implies POST request):\n\n`python sqlmap.py -u {{\"http://www.target.com/vuln.php\" --data={{\"id=1\"}}`\n\n- Change the parameter delimiter (\u0026 is the default):\n\n`python sqlmap.py -u {{\"http://www.target.com/vuln.php\"}} --data={{\"query=foobar;id=1\"}} --param-del={{\";\"}}`\n\n- Select a random `User-Agent` from `./txt/user-agents.txt` and use it:\n\n`python sqlmap.py -u {{\"http://www.target.com/vuln.php\"}} --random-agent`\n\n- Provide user credentials for HTTP protocol authentication:\n\n`python sqlmap.py -u {{\"http://www.target.com/vuln.php\"}} --auth-type {{Basic}} --auth-cred {{\"testuser:testpass\"}}`\n"},"ssh":{"Platform":"all","Class":"network comm","Brief":"Secure Shell is a protocol used to securely log onto remote systems.","MdText":"# ssh\n\n\u003e Secure Shell is a protocol used to securely log onto remote systems.\n\u003e It can be used for logging or executing commands on a remote server.\n\n- Connect to a remote server:\n\n`ssh {{username}}@{{remote_host}}`\n\n- Connect to a remote server with a specific identity (private key):\n\n`ssh -i {{path/to/key_file}} {{username}}@{{remote_host}}`\n\n- Connect to a remote server using a specific port:\n\n`ssh {{username}}@{{remote_host}} -p {{2222}}`\n\n- Run a command on a remote server:\n\n`ssh {{remote_host}} {{command -with -flags}}`\n\n- SSH tunneling: Dynamic port forwarding (SOCKS proxy on localhost:9999):\n\n`ssh -D {{9999}} -C {{username}}@{{remote_host}}`\n\n- SSH tunneling: Forward a specific port (localhost:9999 to slashdot.org:80) along with disabling pseudo-[t]ty allocation and executio[n] of remote commands:\n\n`ssh -L {{9999}}:{{slashdot.org}}:{{80}} -N -T {{username}}@{{remote_host}}`\n\n- SSH jumping: Connect through a jumphost to a remote server (Multiple jump hops may be specified separated by comma characters):\n\n`ssh -J {{username}}@{{jump_host}} {{username}}@{{remote_host}}`\n\n- Agent forwarding: Forward the authentication information to the remote machine (see `man ssh_config` for available options):\n\n`ssh -A {{username}}@{{remote_host}}`\n"},"ssh-copy-id":{"Platform":"all","Class":"network comm","Brief":"Install your public key in a remote machine's authorized_keys.","MdText":"# ssh-copy-id\n\n\u003e Install your public key in a remote machine's authorized_keys.\n\n- Copy your keys to the remote machine:\n\n`ssh-copy-id {{username@remote_host}}`\n\n- Copy the given public key to the remote:\n\n`ssh-copy-id -i {{path/to/certificate}} {{username}}@{{remote_host}}`\n\n- Copy the given public key to the remote with specific port:\n\n`ssh-copy-id -i {{path/to/certificate}} -p {{port}} {{username}}@{{remote_host}}`\n"},"ssh-keygen":{"Platform":"all","Class":"network comm","Brief":"Generate ssh keys user for authentication, password-less logins, and other things.","MdText":"# ssh-keygen\n\n\u003e Generate ssh keys user for authentication, password-less logins, and other things.\n\n- Generate a key interactively:\n\n`ssh-keygen`\n\n- Specify file in which to save the key:\n\n`ssh-keygen -f ~/.ssh/{{filename}}`\n\n- Generate an ed25519 key with 100 key derivation function rounds:\n\n`ssh-keygen -t ed25519 -a 100`\n\n- Generate an RSA 4096 bit key with your email as a comment:\n\n`ssh-keygen -t rsa -b 4096 -C \"{{email}}\"`\n\n- Retrieve the key fingerprint from a host (useful for confirming the authenticity of the host when first connecting to it via SSH):\n\n`ssh-keygen -l -F {{remote_host}}`\n\n- Retrieve the fingerprint of a key in MD5 Hex:\n\n`ssh-keygen -l -E md5 -f ~/.ssh/{{filename}}`\n\n- Change the password of a key:\n\n`ssh-keygen -p -f ~/.ssh/{{filename}}`\n"},"sshpass":{"Platform":"all","Class":"network comm","Brief":"An ssh password provider.","MdText":"# sshpass\n\n\u003e An ssh password provider.\n\u003e It works by creating a TTY, feeding the password into it, and then redirecting stdin to the ssh session.\n\n- Connect to a remote server using a password supplied on a file descriptor (in this case, stdin):\n\n`sshpass -d {{0}} ssh {{user}}@{{hostname}}`\n\n- Connect to a remote server with the password supplied as an option, and automatically accept unknown ssh keys:\n\n`sshpass -p {{password}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}}`\n\n- Connect to a remote server using the first line of a file as the password, automatically accept unknown ssh keys, and launch a command:\n\n`sshpass -f {{file}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}} \"{{command}}\"`\n"},"st-util":{"Platform":"all","Class":"other cmds","Brief":"Run GDB (GNU Debugger) server to interact with STM32 ARM Cortex microcontoller.","MdText":"# st-util\n\n\u003e Run GDB (GNU Debugger) server to interact with STM32 ARM Cortex microcontoller.\n\n- Run GDB server on port 4500:\n\n`st-util -p {{4500}}`\n\n- Connect to GDB server:\n\n`(gdb) target extended-remote {{localhost}}:{{4500}}`\n\n- Write firmware to device:\n\n`(gdb) load {{firmware.elf}}`\n"},"standard":{"Platform":"all","Class":"other cmds","Brief":"The JavaScript Standard Style tool for linting and fixing JavaScript code.","MdText":"# standard\n\n\u003e The JavaScript Standard Style tool for linting and fixing JavaScript code.\n\n- Lint all JavaScript source files in the current directory:\n\n`standard`\n\n- Lint specific JavaScript file(s):\n\n`standard {{path/to/file(s)}}`\n\n- Apply automatic fixes during linting:\n\n`standard --fix`\n\n- Declare any available global variables:\n\n`standard --global {{variable}}`\n\n- Use a custom ESLint plugin when linting:\n\n`standard --plugin {{plugin}}`\n\n- Use a custom JS parser when linting:\n\n`standard --parser {{parser}}`\n\n- Use a custom ESLint environment when linting:\n\n`standard --env {{environment}}`\n"},"stow":{"Platform":"all","Class":"other cmds","Brief":"Symlink manager.","MdText":"# stow\n\n\u003e Symlink manager.\n\u003e Often used to manage dotfiles.\n\n- Symlink all files recursively to a given directory:\n\n`stow --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}`\n\n- Delete symlinks recursively from a given directory:\n\n`stow --delete --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}`\n\n- Simulate to see what the result would be like:\n\n`stow --simulate --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}`\n\n- Delete and resymlink:\n\n`stow --restow --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}`\n\n- Exclude files matching a regular expression:\n\n`stow --ignore={{regex}} --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}`\n"},"stty":{"Platform":"all","Class":"other cmds","Brief":"Set options for a terminal device interface.","MdText":"# stty\n\n\u003e Set options for a terminal device interface.\n\n- Display all settings for the current terminal:\n\n`stty -a`\n\n- Set the number of rows:\n\n`stty rows {{rows}}`\n\n- Set the number of columns:\n\n`stty cols {{cols}}`\n\n- Get the actual transfer speed of a device:\n\n`stty -f {{path/to/device_file}} speed`\n\n- Reset all modes to reasonable values for the current terminal:\n\n`stty sane`\n"},"subfinder":{"Platform":"all","Class":"other cmds","Brief":"A subdomain discovery tool that discovers valid subdomains for websites.","MdText":"# subfinder\n\n\u003e A subdomain discovery tool that discovers valid subdomains for websites.\n\u003e Designed as a passive framework to be useful for bug bounties and safe for penetration testing.\n\n- Find subdomains for a specific domain:\n\n`subfinder -d {{example.com}}`\n\n- Show only the subdomains found:\n\n`subfinder --silent -d {{example.com}}`\n\n- Use bruteforcing to find subdomains:\n\n`subfinder -d {{example.com}} -b`\n\n- Remove wildcard subdomains:\n\n`subfinder -nW -d {{example.com}}`\n\n- Use a given comma-separated list of resolvers:\n\n`subfinder -r {{8.8.8.8}},{{1.1.1.1}} -d {{example.com}}`\n"},"subliminal":{"Platform":"all","Class":"other cmds","Brief":"Python-based subtitle downloader.","MdText":"# subliminal\n\n\u003e Python-based subtitle downloader.\n\n- Download English subtitles for a video:\n\n`subliminal download -l {{en}} {{video.ext}}`\n"},"sum":{"Platform":"all","Class":"file man","Brief":"Compute checksums and the number of blocks for a file.","MdText":"# sum\n\n\u003e Compute checksums and the number of blocks for a file.\n\u003e A predecessor to the more modern `cksum`.\n\n- Compute a checksum with BSD-compatible algorithm and 1024-byte blocks:\n\n`sum {{file}}`\n\n- Compute a checksum with System V-compatible algorithm and 512-byte blocks:\n\n`sum --sysv {{file}}`\n"},"supervisorctl":{"Platform":"all","Class":"system man","Brief":"Supervisor is a client/server system that allows its users to control a number of processes on UNIX-like operating systems.","MdText":"# supervisorctl\n\n\u003e Supervisor is a client/server system that allows its users to control a number of processes on UNIX-like operating systems.\n\u003e Supervisorctl is the command-line client piece of the supervisor which provides a shell-like interface.\n\n- Start/stop/restart a process:\n\n`supervisorctl {{start|stop|restart}} {{process_name}}`\n\n- Start/stop/restart all processes in a group:\n\n`supervisorctl {{start|stop|restart}} {{group_name}}:*`\n\n- Show last 100 **bytes** of process stderr:\n\n`supervisorctl tail -100 {{process_name}} stderr`\n\n- Keep displaying stdout of a process:\n\n`supervisorctl tail -f {{process_name}} stdout`\n\n- Reload process config file to add/remove processes as necessary:\n\n`supervisorctl update`\n"},"supervisord":{"Platform":"all","Class":"system man","Brief":"Supervisor is a client/server system for controlling some processes on UNIX-like operating systems.","MdText":"# supervisord\n\n\u003e Supervisor is a client/server system for controlling some processes on UNIX-like operating systems.\n\u003e Supervisord is the server part of supervisor; it is primarily managed via a configuration file.\n\n- Start supervisord with specified configuration file:\n\n`supervisord -c {{path/to/file}}`\n\n- Run supervisord in the foreground:\n\n`supervisord -n`\n"},"sync":{"Platform":"all","Class":"system man","Brief":"Flushes all pending write operations to the appropriate disks.","MdText":"# sync\n\n\u003e Flushes all pending write operations to the appropriate disks.\n\n- Flush all pending write operations on all disks:\n\n`sync`\n\n- Flush all pending write operations on a single file to disk:\n\n`sync {{path/to/file}}`\n"},"tail":{"Platform":"all","Class":"file man","Brief":"Display the last part of a file.","MdText":"# tail\n\n\u003e Display the last part of a file.\n\n- Show last 'num' lines in file:\n\n`tail -n {{num}} {{file}}`\n\n- Show all file since line 'num':\n\n`tail -n +{{num}} {{file}}`\n\n- Show last 'num' bytes in file:\n\n`tail -c {{num}} {{file}}`\n\n- Keep reading file until `Ctrl + C`:\n\n`tail -f {{file}}`\n\n- Keep reading file until `Ctrl + C`, even if the file is rotated:\n\n`tail -F {{file}}`\n"},"tar":{"Platform":"all","Class":"file compress","Brief":"Archiving utility.","MdText":"# tar\n\n\u003e Archiving utility.\n\u003e Often combined with a compression method, such as gzip or bzip.\n\n- Create an archive from files:\n\n`tar -cf {{target.tar}} {{file1 file2 file3}}`\n\n- Create a gzipped archive:\n\n`tar -czf {{target.tar.gz}} {{file1 file2 file3}}`\n\n- Extract an archive in a target directory:\n\n`tar -xf {{source.tar}} -C {{directory}}`\n\n- Extract a gzipped archive in the current directory:\n\n`tar -xzf {{source.tar.gz}}`\n\n- Extract a bzipped archive in the current directory:\n\n`tar -xjf {{source.tar.bz2}}`\n\n- Create a compressed archive, using archive suffix to determine the compression program:\n\n`tar -caf {{target.tar.xz}} {{file1 file2 file3}}`\n\n- List the contents of a tar file:\n\n`tar -tvf {{source.tar}}`\n\n- Extract files matching a pattern:\n\n`tar -xf {{source.tar}} --wildcards {{\"*.html\"}}`\n"},"tcpdump":{"Platform":"all","Class":"network comm","Brief":"Dump traffic on a network.","MdText":"# tcpdump\n\n\u003e Dump traffic on a network.\n\n- List available network interfaces:\n\n`tcpdump -D`\n\n- Capture the traffic of a specific interface:\n\n`tcpdump -i {{eth0}}`\n\n- Capture all TCP traffic showing contents (ASCII) in console:\n\n`tcpdump -A tcp`\n\n- Capture the traffic from or to a host:\n\n`tcpdump host {{www.example.com}}`\n\n- Capture the traffic from a specific interface, source, destination and destination port:\n\n`tcpdump -i {{eth0}} src {{192.168.1.1}} and dst {{192.168.1.2}} and dst port {{80}}`\n\n- Capture the traffic of a network:\n\n`tcpdump net {{192.168.1.0/24}}`\n\n- Capture all traffic except traffic over port 22 and save to a dump file:\n\n`tcpdump -w {{dumpfile.pcap}} not port {{22}}`\n\n- Read from a given dump file:\n\n`tcpdump -r {{dumpfile.pcap}}`\n"},"telnet":{"Platform":"all","Class":"network comm","Brief":"Connect to a specified port of a host using the telnet protocol.","MdText":"# telnet\n\n\u003e Connect to a specified port of a host using the telnet protocol.\n\n- Telnet to the default port of a host:\n\n`telnet {{host}}`\n\n- Telnet to a specific port of a host:\n\n`telnet {{ip_address}} {{port}}`\n\n- Exit a telnet session:\n\n`quit`\n\n- Emit the default escape character combination for terminating the session:\n\n`Ctrl + ]`\n\n- Start telnet with \"x\" as the session termination character:\n\n`telnet -e {{x}} {{ip_address}} {{port}}`\n"},"terminalizer":{"Platform":"all","Class":"system man","Brief":"Utility program which records the terminal and generate animated gifs or share a video.","MdText":"# terminalizer\n\n\u003e Utility program which records the terminal and generate animated gifs or share a video.\n\n- Create the global config directory:\n\n`terminalizer init`\n\n- Record the terminal and create a recording file:\n\n`terminalizer record {{file_name}}`\n\n- Play a recorded file on the terminal:\n\n`terminalizer play {{file_name}}`\n\n- Render a recording file as an animated gif image:\n\n`terminalizer render {{file_name}}`\n\n- Upload a video to terminalizer.com:\n\n`terminalizer share {{file_name}}`\n"},"terraform":{"Platform":"all","Class":"other cmds","Brief":"Create and deploy infrastructure as code to cloud providers.","MdText":"# terraform\n\n\u003e Create and deploy infrastructure as code to cloud providers.\n\u003e Homepage: \u003chttps://www.terraform.io/\u003e.\n\n- Initialize a new or existing Terraform configuration:\n\n`terraform init`\n\n- Generate and show an execution plan:\n\n`terraform plan`\n\n- Build or change infrastructure:\n\n`terraform apply`\n\n- Destroy Terraform-managed infrastructure:\n\n`terraform destroy`\n"},"tig":{"Platform":"all","Class":"other cmds","Brief":"A text-mode interface for Git.","MdText":"# tig\n\n\u003e A text-mode interface for Git.\n\n- Show the sequence of commits starting from the current one in reverse chronological order:\n\n`tig`\n\n- Show the history of a specific branch:\n\n`tig {{branch}}`\n\n- Show the history of specific files or directories:\n\n`tig {{path1 path2 …}}`\n\n- Show the difference between two references (such as branches or tags):\n\n`tig {{base_ref}}..{{compared_ref}}`\n\n- Display commits from all branches and stashes:\n\n`tig --all`\n\n- Start in stash view, displaying all saved stashes:\n\n`tig stash`\n"},"timeout":{"Platform":"all","Class":"other cmds","Brief":"Run a command with a time limit.","MdText":"# timeout\n\n\u003e Run a command with a time limit.\n\n- Run `sleep 10` and terminate it, if it runs for more than 3 seconds:\n\n`timeout {{3s}} {{sleep 10}}`\n\n- Specify the signal to be sent to the command after the time limit expires. (By default, TERM is sent):\n\n`timeout --signal {{INT}} {{5s}} {{sleep 10}}`\n"},"tput":{"Platform":"all","Class":"other cmds","Brief":"View and modify terminal settings and capabilities.","MdText":"# tput\n\n\u003e View and modify terminal settings and capabilities.\n\n- Move the cursor to a screen location:\n\n`tput cup {{y_coordinate}} {{x_coordinate}}`\n\n- Set foreground (af) or background (ab) color:\n\n`tput {{setaf|setab}} {{ansi_color_code}}`\n\n- Show number of columns, lines, or colors:\n\n`tput {{cols|lines|colors}}`\n\n- Ring the terminal bell:\n\n`tput bel`\n\n- Reset all terminal attributes:\n\n`tput sgr0`\n\n- Enable / Disable word wrap:\n\n`tput {{smam|rmam}}`\n"},"tr":{"Platform":"all","Class":"other cmds","Brief":"Translate characters: run replacements based on single characters and character sets.","MdText":"# tr\n\n\u003e Translate characters: run replacements based on single characters and character sets.\n\n- Replace all occurrences of a character in a file, and print the result:\n\n`tr {{find_character}} {{replace_character}} \u003c {{filename}}`\n\n- Replace all occurrences of a character from another command's output:\n\n`echo {{text}} | tr {{find_character}} {{replace_character}}`\n\n- Map each character of the first set to the corresponding character of the second set:\n\n`tr '{{abcd}}' '{{jkmn}}' \u003c {{filename}}`\n\n- Delete all occurrences of the specified set of characters from the input:\n\n`tr -d '{{input_characters}}' \u003c {{filename}}`\n\n- Compress a series of identical characters to a single character:\n\n`tr -s '{{input_characters}}' \u003c {{filename}}`\n\n- Translate the contents of a file to upper-case:\n\n`tr \"[:lower:]\" \"[:upper:]\" \u003c {{filename}}`\n\n- Strip out non-printable characters from a file:\n\n`tr -cd \"[:print:]\" \u003c {{filename}}`\n"},"traceroute":{"Platform":"all","Class":"network comm","Brief":"Print the route packets trace to network host.","MdText":"# traceroute\n\n\u003e Print the route packets trace to network host.\n\n- Traceroute to a host:\n\n`traceroute {{host}}`\n\n- Disable IP address and host name mapping:\n\n`traceroute -n {{host}}`\n\n- Specify wait time for response:\n\n`traceroute -w {{0.5}} {{host}}`\n\n- Specify number of queries per hop:\n\n`traceroute -q {{5}} {{host}}`\n\n- Specify size in bytes of probing packet:\n\n`traceroute {{host}} {{42}}`\n"},"traefik":{"Platform":"all","Class":"network comm","Brief":"A HTTP reverse proxy and load balancer.","MdText":"# traefik\n\n\u003e A HTTP reverse proxy and load balancer.\n\n- Start server with default config:\n\n`traefik`\n\n- Start server with a custom config file:\n\n`traefik --c {{config_file}}.toml`\n\n- Start server with cluster mode enabled:\n\n`traefik --cluster`\n\n- Start server with web UI enabled:\n\n`traefik --web`\n"},"trans":{"Platform":"all","Class":"other cmds","Brief":"Translate Shell is a command-line translator.","MdText":"# trans\n\n\u003e Translate Shell is a command-line translator.\n\n- Translate a word (language is detected automatically):\n\n`trans \"{{word_or_sentence_to_translate}}\"`\n\n- Get a brief translation:\n\n`trans --brief \"{{word_or_sentence_to_translate}}\"`\n\n- Translate a word into french:\n\n`trans :{{fr}} {{word}}`\n\n- Translate a word from German to English:\n\n`trans {{de}}:{{en}} {{Schmetterling}}`\n\n- Behave like a dictionary to get the meaning of a word:\n\n`trans -d {{word}}`\n"},"tsort":{"Platform":"all","Class":"other cmds","Brief":"Perform a topological sort.","MdText":"# tsort\n\n\u003e Perform a topological sort.\n\u003e A common use is to show the dependency order of nodes in a directed acyclic graph.\n\n- Perform a topological sort consistent with a partial sort per line of input separated by blanks:\n\n`tsort {{file}}`\n"},"unlink":{"Platform":"all","Class":"file man","Brief":"Remove a link to a file from the filesystem.","MdText":"# unlink\n\n\u003e Remove a link to a file from the filesystem.\n\u003e The file contents is lost if the link is the last one to the file.\n\n- Remove the specified file if it is the last link:\n\n`unlink {{path/to/file}}`\n"},"unzip":{"Platform":"all","Class":"file compress","Brief":"Extract compressed files in a ZIP archive.","MdText":"# unzip\n\n\u003e Extract compressed files in a ZIP archive.\n\n- Extract zip file(s) (for multiple files, separate file paths by spaces):\n\n`unzip {{file(s)}}`\n\n- Extract zip files(s) to given path:\n\n`unzip {{compressed_file(s)}} -d {{/path/to/put/extracted_file(s)}}`\n\n- List the contents of a zip file without extracting:\n\n`unzip -l {{file.zip}}`\n\n- Extract the contents of the file(s) to stdout alongside the extracted file names:\n\n`unzip -c {{file.zip}}`\n\n- Extract a zip file created in windows, containing files with non-ascii (chinese) filenames:\n\n`unzip -O {{gbk}} {{file.zip}}`\n"},"upx":{"Platform":"all","Class":"file compress","Brief":"Compress or decompress executables.","MdText":"# upx\n\n\u003e Compress or decompress executables.\n\n- Compress executable:\n\n`upx {{file}}`\n\n- Decompress executable:\n\n`upx -d {{file}}`\n\n- Detailed help:\n\n`upx --help`\n"},"vagrant":{"Platform":"all","Class":"other cmds","Brief":"Manage lightweight, reproducible, and portable development environments.","MdText":"# vagrant\n\n\u003e Manage lightweight, reproducible, and portable development environments.\n\n- Create Vagrantfile in current directory with the base Vagrant box:\n\n`vagrant init`\n\n- Create Vagrantfile with the Ubuntu 14.04 (Trusty Tahr) box from HashiCorp Atlas:\n\n`vagrant init ubuntu/trusty32`\n\n- Start and provision the vagrant environment:\n\n`vagrant up`\n\n- Suspend the machine:\n\n`vagrant suspend`\n\n- Connect to machine via SSH:\n\n`vagrant ssh`\n"},"vcsh":{"Platform":"all","Class":"other cmds","Brief":"Version Control System for the home directory using git repositories.","MdText":"# vcsh\n\n\u003e Version Control System for the home directory using git repositories.\n\n- Initialize an (empty) repository:\n\n`vcsh init {{repository_name}}`\n\n- Clone a repository into a custom directory name:\n\n`vcsh clone {{git_url}} {{repository_name}}`\n\n- List all managed repositories:\n\n`vcsh list`\n\n- Execute a git command on a managed repository:\n\n`vcsh {{repository_name}} {{git_command}}`\n\n- Push/pull all managed repositories to/from remotes:\n\n`vcsh {{push|pull}}`\n\n- Write a custom .gitignore file for a managed repository:\n\n`vcsh write-gitignore {{repository_name}}`\n"},"vdir":{"Platform":"all","Class":"other cmds","Brief":"List directory contents.","MdText":"# vdir\n\n\u003e List directory contents.\n\u003e Drop-in replacement for `ls -l`.\n\n- List files and directories in the current directory, one per line, with details:\n\n`vdir`\n\n- List with sizes displayed in human readable units (KB, MB, GB):\n\n`vdir -h`\n\n- List including hidden files (starting with a dot):\n\n`vdir -a`\n\n- List files and directories sorting entries by size (largest first):\n\n`vdir -S`\n\n- List files and directories sorting entries by modification time (newest first):\n\n`vdir -t`\n\n- List grouping directories first:\n\n`vdir --group-directories-first`\n\n- Recursively list all files and directories in a specific directory:\n\n`vdir --recursive {{path/to/directory}}`\n"},"vegeta":{"Platform":"all","Class":"other cmds","Brief":"Vegeta is both a command line utility and a library for HTTP load testing.","MdText":"# vegeta\n\n\u003e Vegeta is both a command line utility and a library for HTTP load testing.\n\u003e See also `ab`.\n\n- Launch an attack lasting 30 seconds:\n\n`echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}}`\n\n- Launch an attack on a server with a self-signed https certificate:\n\n`echo \"{{GET https://example.com}}\" | vegeta attack -insecure -duration={{30s}}`\n\n- Launch an attack with a rate of 10 requests per second:\n\n`echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}} -rate={{10}}`\n\n- Launch an attack and display for a report:\n\n`echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}} | vegeta report`\n\n- Launch an attack and plot the results on a graph (latency against time):\n\n`echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}} | vegeta plot \u003e {{path/to/results.html}}`\n\n- Launch an attack against multiple URLs from a file:\n\n`vegeta attack -duration={{30s}} -targets=requests.txt | vegeta report`\n"},"view":{"Platform":"all","Class":"file editor","Brief":"A read-only version of `vim`.","MdText":"# view\n\n\u003e A read-only version of `vim`.\n\u003e This is equivalent to `vim -R`.\n\n- Open a file:\n\n`view {{file}}`\n"},"vimtutor":{"Platform":"all","Class":"file editor","Brief":"Vim tutor, teaching the basic vim commands.","MdText":"# vimtutor\n\n\u003e Vim tutor, teaching the basic vim commands.\n\n- Launch the vim tutor using the given language (en, fr, de, ...):\n\n`vimtutor {{language}}`\n\n- Exit the tutor:\n\n`\u003cEsc\u003e :q \u003cEnter\u003e`\n"},"vsce":{"Platform":"all","Class":"other cmds","Brief":"Extension manager for Visual Studio Code.","MdText":"# vsce\n\n\u003e Extension manager for Visual Studio Code.\n\n- List all the extensions created by a publisher:\n\n`vsce list {{publisher}}`\n\n- Publish an extension as major, minor or patch version:\n\n`vsce publish {{major|minor|patch}}`\n\n- Unpublish an extension:\n\n`vsce unpublish {{extension_id}}`\n\n- Package the current working directory as .vsix file:\n\n`vsce package`\n\n- Show the metadata associated with an extension:\n\n`vsce show {{extension_id}}`\n"},"wait":{"Platform":"all","Class":"other cmds","Brief":"Wait for a process to complete before proceeding.","MdText":"# wait\n\n\u003e Wait for a process to complete before proceeding.\n\n- Wait for a process to finish given its process ID (PID) and return its exit status:\n\n`wait {{pid}}`\n\n- Wait for all processes known to the invoking shell to finish:\n\n`wait`\n"},"waitress-serve":{"Platform":"all","Class":"other cmds","Brief":"Pure Python WSGI HTTP Server.","MdText":"# waitress-serve\n\n\u003e Pure Python WSGI HTTP Server.\n\n- Run a Python web app:\n\n`waitress-serve {{import.path:wsgi_func}}`\n\n- Listen on port 8080 on localhost:\n\n`waitress-serve --listen={{localhost}}:{{8080}} {{import.path:wsgi_func}}`\n\n- Start waitress on a Unix socket:\n\n`waitress-serve --unix-socket={{path/to/socket}} {{import.path:wsgi_func}}`\n\n- Use 4 threads to process requests:\n\n`waitress-serve --threads={{4}} {{import.path:wsgifunc}}`\n\n- Call a factory method that returns a WSGI object:\n\n`waitress-serve --call {{import.path.wsgi_factory}}`\n\n- Set the URL scheme to https:\n\n`waitress-serve --url-scheme={{https}} {{import.path:wsgi_func}}`\n"},"wasm-objdump":{"Platform":"all","Class":"other cmds","Brief":"Display information from WebAssembly binaries.","MdText":"# wasm-objdump\n\n\u003e Display information from WebAssembly binaries.\n\n- Display the section headers of a given binary:\n\n`wasm-objdump -h {{file.wasm}}`\n\n- Display the entire disassembled output of a given binary:\n\n`wasm-objdump -d {{file.wasm}}`\n\n- Display the details of each section:\n\n`wasm-objdump --details {{file.wasm}}`\n\n- Display the details of a given section:\n\n`wasm-objdump --section '{{import}}' --details {{file.wasm}}`\n"},"wasm-opt":{"Platform":"all","Class":"other cmds","Brief":"Optimize WebAssembly binary files.","MdText":"# wasm-opt\n\n\u003e Optimize WebAssembly binary files.\n\n- Apply default optimizations and write to a given file:\n\n`wasm-opt -O {{input.wasm}} -o {{output.wasm}}`\n\n- Apply all optimizations and write to a given file (takes more time, but generates optimal code):\n\n`wasm-opt -O4 {{input.wasm}} -o {{output.wasm}}`\n\n- Optimize a file for size:\n\n`wasm-opt -Oz {{input.wasm}} -o {{output.wasm}}`\n\n- Print the textual representation of the binary to console:\n\n`wasm-opt {{input.wasm}} --print`\n"},"whoami":{"Platform":"all","Class":"system man","Brief":"Print the username associated with the current effective user ID.","MdText":"# whoami\n\n\u003e Print the username associated with the current effective user ID.\n\n- Display currently logged username:\n\n`whoami`\n\n- Display the username after a change in the user ID:\n\n`sudo whoami`\n"},"wuzz":{"Platform":"all","Class":"other cmds","Brief":"Tool to interactively inspect HTTP requests and responses.","MdText":"# wuzz\n\n\u003e Tool to interactively inspect HTTP requests and responses.\n\n- Start wuzz:\n\n`wuzz`\n\n- Display help information:\n\n`F1`\n\n- Send an HTTP request:\n\n`Ctrl + R`\n\n- Switch to the next view:\n\n`Ctrl + J, Tab`\n\n- Switch to the previous view:\n\n`Ctrl + K, Shift + Tab`\n"},"x_x":{"Platform":"all","Class":"other cmds","Brief":"View Excel and CSV files from the command-line.","MdText":"# x_x\n\n\u003e View Excel and CSV files from the command-line.\n\u003e Homepage: \u003chttps://github.com/kristianperkins/x_x\u003e.\n\n- View an XLSX or CSV file:\n\n`x_x {{file.xlsx|file.csv}}`\n\n- View an XLSX or CSV file, using the first row as table headers:\n\n`x_x -h {{0}} {{file.xlsx|file.csv}}`\n\n- View a CSV file with unconventional delimiters:\n\n`x_x --delimiter={{';'}} --quotechar={{'|'}} {{file.csv}}`\n"},"xargs":{"Platform":"all","Class":"other cmds","Brief":"Execute a command with piped arguments coming from another command, a file, etc.","MdText":"# xargs\n\n\u003e Execute a command with piped arguments coming from another command, a file, etc.\n\u003e The input is treated as a single block of text and split into separate arguments on spaces, tabs, newlines and end-of-file.\n\n- Main usage pattern:\n\n`{{arguments_source}} | xargs {{command}}`\n\n- Delete all files with a `.backup` extension. `-print0` on find uses a null character to split the files, and `-0` changes the delimiter to the null character (useful if there's whitespace in filenames):\n\n`find . -name {{'*.backup'}} -print0 | xargs -0 rm -v`\n\n- Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line:\n\n`{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}`\n\n- Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time:\n\n`{{arguments_source}} | xargs -P {{max-procs}} {{command}}`\n"},"xcv":{"Platform":"all","Class":"other cmds","Brief":"Cut, copy, and paste in the command-line.","MdText":"# xcv\n\n\u003e Cut, copy, and paste in the command-line.\n\n- Cut a file:\n\n`xcv x {{input_file}}`\n\n- Copy a file:\n\n`xcv c {{input_file}}`\n\n- Paste a file:\n\n`xcv v {{output_file}}`\n\n- List files available for pasting:\n\n`xcv l`\n"},"xsv":{"Platform":"all","Class":"other cmds","Brief":"A fast CSV command line toolkit written in Rust.","MdText":"# xsv\n\n\u003e A fast CSV command line toolkit written in Rust.\n\n- Inspect the headers of a file:\n\n`xsv headers {{path/to/file.csv}}`\n\n- Count the number of entries:\n\n`xsv count {{path/to/file.csv}}`\n\n- Get an overview of the shape of entries:\n\n`xsv stats {{path/to/file.csv}} | xsv table`\n\n- Select a few columns:\n\n`xsv select {{column_a,column_b}} {{path/to/file.csv}}`\n\n- Show 10 random entries:\n\n`xsv sample {{10}} {{path/to/file.csv}}`\n\n- Join a column from one file to another:\n\n`xsv join --no-case {{column_a}} {{path/to/file/a.csv}} {{column_b}} {{path/to/file/b.csv}} | xsv table`\n"},"xz":{"Platform":"all","Class":"file compress","Brief":"Compress or decompress .xz and .lzma files.","MdText":"# xz\n\n\u003e Compress or decompress .xz and .lzma files.\n\u003e Homepage: \u003chttps://tukaani.org/xz/format.html\u003e.\n\n- Compress a file to the xz file format:\n\n`xz {{file}}`\n\n- Decompress a xz file:\n\n`xz -d {{file.xz}}`\n\n- Compress a file to the lzma file format:\n\n`xz --format=lzma {{file}}`\n\n- Decompress an lzma file:\n\n`xz -d --format=lzma {{file.lzma}}`\n\n- Decompress a file and write to stdout:\n\n`xz -dc {{file.xz}}`\n\n- Compress a file, but don't delete the original:\n\n`xz -k {{file}}`\n\n- Compress a file using the fastest compression:\n\n`xz -0 {{file}}`\n\n- Compress a file using the best compression:\n\n`xz -9 {{file}}`\n"},"yarn-why":{"Platform":"all","Class":"other cmds","Brief":"Identifies why a Yarn package has been installed.","MdText":"# yarn-why\n\n\u003e Identifies why a Yarn package has been installed.\n\u003e Homepage: \u003chttps://www.npmjs.com/package/yarn-why\u003e.\n\n- Show why a Yarn package is installed:\n\n`yarn-why {{package_name}}`\n"},"yes":{"Platform":"all","Class":"other cmds","Brief":"Output something repeatedly.","MdText":"# yes\n\n\u003e Output something repeatedly.\n\n- Repeatedly output \"message\":\n\n`yes {{message}}`\n\n- Repeatedly output \"y\":\n\n`yes`\n"},"yesod":{"Platform":"all","Class":"other cmds","Brief":"Helper tool for Yesod, a Haskell-based web framework.","MdText":"# yesod\n\n\u003e Helper tool for Yesod, a Haskell-based web framework.\n\u003e All Yesod commands are invoked through the `stack` project manager.\n\n- Create a new scaffolded site, with sqlite as backend, in the \"my-project\" directory:\n\n`stack new {{my-project}} {{yesod-sqlite}}`\n\n- Install the Yesod CLI tool within a Yesod scaffolded site:\n\n`stack build yesod-bin cabal-install --install-ghc`\n\n- Start development server:\n\n`stack exec -- yesod devel`\n\n- Touch files with altered Template Haskell dependencies:\n\n`stack exec -- yesod touch`\n\n- Deploy application using Keter (Yesod's deployment manager):\n\n`stack exec -- yesod keter`\n"},"youtube-dl":{"Platform":"all","Class":"other cmds","Brief":"Download videos from YouTube and other websites.","MdText":"# youtube-dl\n\n\u003e Download videos from YouTube and other websites.\n\u003e Homepage: \u003chttp://rg3.github.io/youtube-dl/\u003e.\n\n- Download a video or playlist:\n\n`youtube-dl {{https://www.youtube.com/watch?v=oHg5SJYRHA0}}`\n\n- List all formats that a video or playlist is available in:\n\n`youtube-dl --list-formats {{https://www.youtube.com/watch?v=Mwa0_nE9H7A}}`\n\n- Download a video or playlist at a specific quality:\n\n`youtube-dl --format {{best[height\u003c=480]}} {{https://www.youtube.com/watch?v=oHg5SJYRHA0}}`\n\n- Download the audio from a video and convert it to an MP3:\n\n`youtube-dl -x --audio-format {{mp3}} {{url}}`\n\n- Download video(s) as MP4 files with custom filenames:\n\n`youtube-dl --format {{mp4}} -o {{\"%(title)s by %(uploader)s on %(upload_date)s in %(playlist)s.%(ext)s\"}} {{url}}`\n\n- Download a video and save its description, metadata, annotations, subtitles, and thumbnail:\n\n`youtube-dl --write-description --write-info-json --write-annotations --write-sub --write-thumbnail {{url}}`\n\n- From a playlist, download all \"Let's Play\" videos that aren't marked \"NSFW\" or age-restricted for 7 year-olds:\n\n`youtube-dl --match-title {{\"let's play\"}} --age-limit {{7}} --reject-title {{\"nsfw\"}} {{playlist_url}}`\n"},"z":{"Platform":"all","Class":"other cmds","Brief":"Tracks the most used directories and enables quickly navigating to them using string or regex patterns.","MdText":"# z\n\n\u003e Tracks the most used directories and enables quickly navigating to them using string or regex patterns.\n\n- Go to a directory that contains \"foo\" in the name:\n\n`z {{foo}}`\n\n- Go to a directory that contains \"foo\" and then \"bar\":\n\n`z {{foo}} {{bar}}`\n\n- Go to the highest-ranked directory matching \"foo\":\n\n`z -r {{foo}}`\n\n- Go to the most recently accessed directory matching \"foo\":\n\n`z -t {{foo}}`\n\n- List all directories in `z`'s database matching \"foo\":\n\n`z -l {{foo}}`\n\n- Remove the current directory from `z`'s database:\n\n`z -x .`\n"},"zdb":{"Platform":"all","Class":"other cmds","Brief":"ZFS debugger.","MdText":"# zdb\n\n\u003e ZFS debugger.\n\n- Show detailed configuration of all mounted ZFS zpools:\n\n`zdb`\n\n- Show detailed configuration for a specific ZFS pool:\n\n`zdb -C {{poolname}}`\n\n- Show statistics about number, size and deduplication of blocks:\n\n`zdb -b {{poolname}}`\n"},"zpool":{"Platform":"all","Class":"other cmds","Brief":"Manage ZFS pools.","MdText":"# zpool\n\n\u003e Manage ZFS pools.\n\n- Show the configuration and status of all ZFS zpools:\n\n`zpool status`\n\n- Check a ZFS pool for errors (verifies the checksum of EVERY block). Very CPU and disk intensive:\n\n`zpool scrub {{pool_name}}`\n\n- List zpools available for import:\n\n`zpool import`\n\n- Import a zpool:\n\n`zpool import {{pool_name}}`\n\n- Export a zpool (unmount all filesystems):\n\n`zpool export {{pool_name}}`\n\n- Show the history of all pool operations:\n\n`zpool history {{pool_name}}`\n\n- Create a mirrored pool:\n\n`zpool create {{pool_name}} mirror {{disk1}} {{disk2}} mirror {{disk3}} {{disk4}}`\n\n- Add a cache (L2ARC) device to a zpool:\n\n`zpool add {{pool_name}} cache {{cache_disk}}`\n"}}

module.exports = {
    commands : commands
}
